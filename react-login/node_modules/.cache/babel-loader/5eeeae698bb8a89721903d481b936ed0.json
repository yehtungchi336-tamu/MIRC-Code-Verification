{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Switch,Route,Link,NavLink,Redirect}from\"react-router-dom\";import Input from'../Input';import Switches from'../Switches';import{db}from'../../Fire';import firebase from'firebase';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Actions(props){var user=firebase.auth().currentUser;var notifibool=props.notifibool,setNotifibool=props.setNotifibool,convoid=props.convoid,creatorid=props.creatorid;function changeNotifi(){if(user.uid===creatorid){db.collection('conversations').doc(convoid).update({notifications1:!notifibool});}else{db.collection('conversations').doc(convoid).update({notifications2:!notifibool});}}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{o:true,children:\"Chat Configurations\"}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(Switches,{title:\"Notifications\",checked:notifibool,function1:changeNotifi})]});}export default Actions;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Link","NavLink","Redirect","Input","Switches","db","firebase","Actions","props","user","auth","currentUser","notifibool","setNotifibool","convoid","creatorid","changeNotifi","uid","collection","doc","update","notifications1","notifications2"],"sources":["/Users/jinsonwu/Desktop/MIRC-Code-Verification/react-login/src/components/settings/Actions.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { BrowserRouter as Router,Switch,Route,Link,NavLink, Redirect } from \"react-router-dom\" \r\nimport Input from '../Input'\r\nimport Switches from '../Switches'\r\nimport {db} from '../../Fire'\r\nimport firebase from 'firebase'\r\nfunction Actions (props) {\r\n  const user = firebase.auth().currentUser\r\n  const {notifibool, setNotifibool, convoid, creatorid}=props\r\n  function changeNotifi(){\r\n   \r\n      if(user.uid===creatorid){\r\n        db.collection('conversations').doc(convoid).update({\r\n          notifications1: !notifibool\r\n        })\r\n     }else {\r\n       db.collection('conversations').doc(convoid).update({\r\n         notifications2: !notifibool\r\n       })\r\n\r\n     }\r\n    \r\n}\r\n  return (\r\n   <>\r\n    <h2 o>Chat Configurations</h2>\r\n    <hr/>\r\n   <Switches title='Notifications' checked={notifibool}  function1={changeNotifi}/>\r\n  </>\r\n  )\r\n}\r\nexport default Actions"],"mappings":"AAAA,MAAOA,MAAK,EAAGC,QAAQ,CAAEC,SAAS,KAAO,OAAO,CAChD,OAASC,aAAa,GAAIC,OAAM,CAACC,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,OAAO,CAAEC,QAAQ,KAAQ,kBAAkB,CAC9F,MAAOC,MAAK,KAAM,UAAU,CAC5B,MAAOC,SAAQ,KAAM,aAAa,CAClC,OAAQC,EAAE,KAAO,YAAY,CAC7B,MAAOC,SAAQ,KAAM,UAAU,8IAC/B,QAASC,QAAO,CAAEC,KAAK,CAAE,CACvB,GAAMC,KAAI,CAAGH,QAAQ,CAACI,IAAI,EAAE,CAACC,WAAW,CACxC,GAAOC,WAAU,CAAqCJ,KAAK,CAApDI,UAAU,CAAEC,aAAa,CAAsBL,KAAK,CAAxCK,aAAa,CAAEC,OAAO,CAAaN,KAAK,CAAzBM,OAAO,CAAEC,SAAS,CAAEP,KAAK,CAAhBO,SAAS,CACpD,QAASC,aAAY,EAAE,CAEnB,GAAGP,IAAI,CAACQ,GAAG,GAAGF,SAAS,CAAC,CACtBV,EAAE,CAACa,UAAU,CAAC,eAAe,CAAC,CAACC,GAAG,CAACL,OAAO,CAAC,CAACM,MAAM,CAAC,CACjDC,cAAc,CAAE,CAACT,UACnB,CAAC,CAAC,CACL,CAAC,IAAK,CACJP,EAAE,CAACa,UAAU,CAAC,eAAe,CAAC,CAACC,GAAG,CAACL,OAAO,CAAC,CAACM,MAAM,CAAC,CACjDE,cAAc,CAAE,CAACV,UACnB,CAAC,CAAC,CAEJ,CAEL,CACE,mBACC,wCACC,WAAI,CAAC,sCAAyB,cAC9B,aAAK,cACN,KAAC,QAAQ,EAAC,KAAK,CAAC,eAAe,CAAC,OAAO,CAAEA,UAAW,CAAE,SAAS,CAAEI,YAAa,EAAE,GAC9E,CAEL,CACA,cAAeT,QAAO"},"metadata":{},"sourceType":"module"}