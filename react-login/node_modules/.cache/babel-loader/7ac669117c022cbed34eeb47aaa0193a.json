{"ast":null,"code":"import _slicedToArray from \"C:/Users/Max/Documents/GitHub/MIRC-Code-Verification/react-login/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\Max\\\\Documents\\\\GitHub\\\\MIRC-Code-Verification\\\\react-login\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport { db, Fire } from './Fire';\nimport firebase from \"firebase\";\nimport { BrowserRouter as Router, Switch, Route, Link, NavLink, Redirect } from \"react-router-dom\";\nimport Sidebar from './components/Sidebar';\nimport Login from './components/Login';\nimport Body from './components/Body';\nimport adddraft from './components/adddraft';\nimport ContextAppProvider from './ContextAPI';\nimport { useBeforeunload } from 'react-beforeunload';\nimport emailjs from 'emailjs-com';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    update = _useState2[0],\n    setUpdate = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    user = _useState4[0],\n    setUser = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    name = _useState6[0],\n    setName = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    email = _useState8[0],\n    setEmail = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    password = _useState10[0],\n    setPassword = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    emailError = _useState12[0],\n    setEmailError = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    passwordError = _useState14[0],\n    setPasswordError = _useState14[1];\n  var _useState15 = useState(true),\n    _useState16 = _slicedToArray(_useState15, 2),\n    hasAccount = _useState16[0],\n    setHasAccount = _useState16[1];\n  //const [loginType, setLoginType]=useState('assistant')\n  var loginType = \"assistant\";\n  var _useState17 = useState(''),\n    _useState18 = _slicedToArray(_useState17, 2),\n    lname = _useState18[0],\n    setlName = _useState18[1];\n  var _useState19 = useState([]),\n    _useState20 = _slicedToArray(_useState19, 2),\n    userinfo = _useState20[0],\n    setUserinfo = _useState20[1];\n  var _useState21 = useState([]),\n    _useState22 = _slicedToArray(_useState21, 2),\n    users = _useState22[0],\n    setUsers = _useState22[1];\n  var _useState23 = useState('https://www.gettyimages.ca/gi-resources/images/500px/983794168.jpg'),\n    _useState24 = _slicedToArray(_useState23, 2),\n    cover = _useState24[0],\n    setCover = _useState24[1];\n  var _useState25 = useState(false),\n    _useState26 = _slicedToArray(_useState25, 2),\n    forgotpassword = _useState26[0],\n    setForgotpassword = _useState26[1];\n  var _useState27 = useState(['']),\n    _useState28 = _slicedToArray(_useState27, 2),\n    msgids = _useState28[0],\n    setMsgIds = _useState28[1];\n  var _useState29 = useState(false),\n    _useState30 = _slicedToArray(_useState29, 2),\n    loading = _useState30[0],\n    setLoading = _useState30[1];\n  var clearInputs = function clearInputs() {\n    setEmail('');\n    setPassword('');\n  };\n  var clearErrors = function clearErrors() {\n    setEmailError('');\n    setPasswordError('');\n  };\n  var handleLogin = function handleLogin() {\n    clearErrors();\n    var checkbox = document.querySelectorAll(\"input[type='radio']:checked\");\n    for (var i = 0; i < checkbox.length; i++) {\n      //setLoginType(checkbox[0].id)\n      loginType = checkbox[0].id;\n      console.log(\"Checkbox is checked..\" + loginType);\n    }\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\n      setLoading(true);\n    }).catch(function (err) {\n      switch (err.code) {\n        case \"auth/invalid-email\":\n          setEmailError(err.message);\n          break;\n        case \"auth/user/disabled\":\n        case \"auth/user-not-found\":\n          setEmailError('Email does not exist');\n          break;\n        case \"auth/wrong-password\":\n          setPasswordError('Incorrect Password');\n          break;\n        default:\n      }\n    });\n  };\n  var handleSignup = function handleSignup() {\n    console.log('signup');\n    clearErrors();\n    firebase.auth().createUserWithEmailAndPassword(email, password).catch(function (err) {\n      switch (err.code) {\n        case \"auth/email-already-in-use\":\n          setEmailError(err.message);\n          break;\n        case \"auth/invalid-email\":\n          setEmailError(err.message);\n          break;\n        case \"auth/weak-password\":\n          setPasswordError(err.message);\n          break;\n        default:\n          setEmailError('Invalid');\n      }\n    });\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        user.updateProfile({\n          displayName: name\n        });\n        db.collection('users').doc(user.uid).set({\n          created: new Date(),\n          msgids: msgids,\n          uid: firebase.auth().currentUser.uid,\n          online: true,\n          userinfo: {\n            name: name,\n            cover: cover,\n            age: '',\n            phone: '',\n            city: '',\n            country: '',\n            website: 'https://',\n            job: '',\n            email: email\n          },\n          customization: {\n            color: '#10325c',\n            themecolor: '#0f6ce6',\n            darkmode: false,\n            widemode: false\n          }\n        });\n        db.collection('notifications').doc(user.uid).set({\n          notifications: 'email'\n        });\n      } //if (user)\n      else {\n        setUser('');\n      }\n    });\n  };\n  var handleLogout = function handleLogout() {\n    if (user) {\n      db.collection('users').doc(user.uid).update({\n        online: false\n      });\n    }\n    //setLoginType('assistant')\n    loginType = 'assistant';\n    console.log(\"handle logout..\" + loginType);\n    window.location.host;\n    firebase.auth().signOut();\n  };\n  var authListener = function authListener() {\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        clearInputs();\n        setUser(user);\n        db.collection('users').doc(user.uid).update({\n          online: true\n        });\n        firebase.auth().onAuthStateChanged(function (user) {\n          db.collection('users').doc(user.uid).set({\n            role: loginType\n          });\n          console.log(\"Final role..\" + loginType);\n        });\n      } else {\n        setUser('');\n        //setLoginType('assistant')\n        //db.collection('users').doc(user.uid).update({online: false})\n      }\n    });\n  };\n\n  function _loginwithGoogle() {\n    var checkbox = document.querySelectorAll(\"input[type='radio']:checked\");\n    for (var i = 0; i < checkbox.length; i++) {\n      loginType = checkbox[0].id;\n      console.log(\"Checkbox is checked..\" + loginType);\n    }\n    var provider = new firebase.auth.GoogleAuthProvider();\n    provider.addScope('email');\n    firebase.auth().signInWithPopup(provider).then(function (result) {\n      if (result.additionalUserInfo.isNewUser) {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential;\n\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n        // ...\n        db.collection('users').doc(user.uid).set({\n          created: new Date(),\n          msgids: msgids,\n          uid: user.uid,\n          online: true,\n          userinfo: {\n            name: user.displayName,\n            cover: user.photoURL,\n            age: '',\n            phone: user.phoneNumber,\n            city: '',\n            country: '',\n            website: 'https://',\n            job: '',\n            email: user.email\n          },\n          customization: {\n            color: '#10325c',\n            themecolor: '#0f6ce6',\n            darkmode: false,\n            widemode: false\n          }\n        });\n        db.collection('notifications').doc(user.uid).set({\n          notifications: 'Google'\n        });\n      }\n    }).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      // ...\n      setEmailError(error.message);\n      setTimeout(function () {\n        setEmailError('');\n      }, 3000);\n    });\n  }\n  function _loginwithFacebook() {\n    var provider = new firebase.auth.FacebookAuthProvider();\n    provider.addScope(\"email\");\n    firebase.auth().signInWithPopup(provider).then(function (result) {\n      if (result.additionalUserInfo.isNewUser) {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential;\n\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = credential.accessToken;\n        // The signed-in user info.\n        var usergoogle = result.user;\n        // ...\n        db.collection('users').doc(usergoogle.uid).set({\n          created: new Date(),\n          msgids: msgids,\n          uid: usergoogle.uid,\n          online: true,\n          userinfo: {\n            name: usergoogle.displayName,\n            cover: usergoogle.photoURL,\n            age: '',\n            phone: usergoogle.phoneNumber,\n            city: '',\n            country: '',\n            website: 'https://',\n            job: '',\n            email: usergoogle.email\n          },\n          customization: {\n            color: '#10325c',\n            themecolor: '#0f6ce6',\n            darkmode: false,\n            widemode: false\n          }\n        });\n        db.collection('notifications').doc(usergoogle.uid).set({\n          notifications: 'Facebook'\n        });\n      }\n    }).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n\n      // ...\n      setEmailError(email);\n      setTimeout(function () {\n        setEmailError('');\n      }, 3000);\n      console.log(errorCode);\n    });\n  }\n  useBeforeunload(function () {\n    if (user) {\n      db.collection('users').doc(user.uid).update({\n        online: false\n      });\n    }\n  });\n  useEffect(function () {\n    var cnt = false;\n    authListener();\n\n    /*\r\n    var checkbox = document.querySelector(\"input[id='executive']\")  \r\n    if (checkbox)\r\n    {\r\n      checkbox.addEventListener('change', function() {\r\n       if (checkbox.checked) \r\n       {\r\n         //setLoginType('executive')\r\n         loginType = 'executive'\r\n       }\r\n       console.log(\"Checkbox is checked..\" + loginType)\r\n     });\r\n    } \r\n    var checkbox_2 = document.querySelector(\"input[id='assistant']\")  \r\n    if (checkbox_2)\r\n    {\r\n      checkbox_2.addEventListener('change', function() {\r\n       if (checkbox_2.checked) \r\n       {\r\n         //setLoginType('executive')\r\n         loginType = 'assistant'\r\n       }\r\n       console.log(\"Checkbox is checked..\" + loginType)\r\n     });\r\n    } \r\n    */\n    window.addEventListener('onbeforeunload', removeActiveStatus);\n    function removeActiveStatus() {\n      if (user) {\n        db.collection('users').doc(user.uid).update({\n          online: false\n        });\n      }\n    }\n    if (user) {\n      db.collection('users').doc(user.uid).update({\n        online: true\n      });\n    }\n    return function () {\n      return cnt = true;\n    };\n  }, []);\n  /*\r\n   localStorage.openpages = Date.now();\r\n   var onLocalStorageEvent = function(e){\r\n       if(e.key == \"openpages\"){\r\n           // Listen if anybody else is opening the same page!\r\n           localStorage.page_available = Date.now();\r\n       }\r\n       if(e.key == \"page_available\"){\r\n           alert(\"One more page already open\");\r\n       }\r\n   };\r\n     window.addEventListener('storage', onLocalStorageEvent, false);\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: user ? /*#__PURE__*/_jsxDEV(ContextAppProvider, {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Body, {\n            setLoading: setLoading,\n            handleLogout: handleLogout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Login, {\n          loginwithFacebook: function loginwithFacebook() {\n            return _loginwithFacebook;\n          },\n          loginwithGoogle: function loginwithGoogle() {\n            return _loginwithGoogle;\n          },\n          loading: loading,\n          name: name,\n          setName: setName,\n          lname: lname,\n          setlName: setlName,\n          email: email,\n          setEmail: setEmail,\n          password: password,\n          setPassword: setPassword,\n          handleLogin: handleLogin,\n          handleSignup: handleSignup,\n          hasAccount: hasAccount,\n          setHasAccount: setHasAccount,\n          emailError: emailError,\n          passwordError: passwordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 347,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"zTZDI7a9RKIFtEgNrqyLINQ+kBM=\", false, function () {\n  return [useBeforeunload];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","db","Fire","firebase","BrowserRouter","Router","Switch","Route","Link","NavLink","Redirect","Sidebar","Login","Body","adddraft","ContextAppProvider","useBeforeunload","emailjs","App","update","setUpdate","user","setUser","name","setName","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","hasAccount","setHasAccount","loginType","lname","setlName","userinfo","setUserinfo","users","setUsers","cover","setCover","forgotpassword","setForgotpassword","msgids","setMsgIds","loading","setLoading","clearInputs","clearErrors","handleLogin","checkbox","document","querySelectorAll","i","length","id","console","log","auth","signInWithEmailAndPassword","then","catch","err","code","message","handleSignup","createUserWithEmailAndPassword","onAuthStateChanged","updateProfile","displayName","collection","doc","uid","set","created","Date","currentUser","online","age","phone","city","country","website","job","customization","color","themecolor","darkmode","widemode","notifications","handleLogout","window","location","host","signOut","authListener","role","loginwithGoogle","provider","GoogleAuthProvider","addScope","signInWithPopup","result","additionalUserInfo","isNewUser","credential","token","accessToken","photoURL","phoneNumber","error","errorCode","errorMessage","setTimeout","loginwithFacebook","FacebookAuthProvider","usergoogle","cnt","addEventListener","removeActiveStatus"],"sources":["C:/Users/Max/Documents/GitHub/MIRC-Code-Verification/react-login/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport \"./styles.css\";\r\nimport {db, Fire} from './Fire';\r\nimport firebase from \"firebase\";\r\nimport { BrowserRouter as Router,Switch,Route,Link,NavLink, Redirect } from \"react-router-dom\" \r\nimport Sidebar from './components/Sidebar'\r\nimport Login from './components/Login'\r\nimport Body from './components/Body'\r\nimport adddraft from './components/adddraft'\r\nimport ContextAppProvider from './ContextAPI'\r\nimport { useBeforeunload } from 'react-beforeunload'\r\nimport emailjs from 'emailjs-com'\r\n\r\nfunction App() {\r\n  const [update, setUpdate]=useState(0)\r\n  const [user, setUser]=useState('')\r\n  const [name, setName]=useState('')\r\n  const [email, setEmail]=useState('')\r\n  const [password, setPassword]=useState('')\r\n  const [emailError, setEmailError]=useState('')\r\n  const [passwordError, setPasswordError]=useState('')\r\n  const [hasAccount, setHasAccount]=useState(true)\r\n  //const [loginType, setLoginType]=useState('assistant')\r\n  var loginType = \"assistant\"\r\n  const [lname, setlName]=useState('')\r\n  const [userinfo, setUserinfo]=useState([])\r\n  const [users, setUsers]=useState([])\r\n  const [cover, setCover]=useState('https://www.gettyimages.ca/gi-resources/images/500px/983794168.jpg')\r\n  const [forgotpassword, setForgotpassword]=useState(false)\r\n  const [msgids, setMsgIds] = useState([''])\r\n  const [loading, setLoading]=useState(false)\r\n  const clearInputs = () => {\r\n    setEmail('')\r\n    setPassword('')\r\n  }\r\n  const clearErrors = () => {\r\n    setEmailError('')\r\n    setPasswordError('')\r\n  }\r\n  const handleLogin = () => {\r\n    clearErrors()\r\n\r\n    var checkbox = document.querySelectorAll(\"input[type='radio']:checked\")\r\n    for (let i = 0; i < checkbox.length; i++) {\r\n        //setLoginType(checkbox[0].id)\r\n        loginType = checkbox[0].id\r\n        console.log(\"Checkbox is checked..\" + loginType)\r\n    }\r\n\r\n    firebase.auth().signInWithEmailAndPassword(email, password)\r\n    .then(()=>{setLoading(true)})\r\n    .catch(err => {\r\n      switch(err.code) {\r\n        case \"auth/invalid-email\":\r\n          setEmailError(err.message)\r\n          break\r\n        case \"auth/user/disabled\":\r\n        case \"auth/user-not-found\":\r\n          setEmailError('Email does not exist')\r\n        break\r\n        case \"auth/wrong-password\":\r\n          setPasswordError('Incorrect Password')\r\n        break\r\n        default:\r\n      }  \r\n    })\r\n  } \r\n  const handleSignup = () => {\r\n    console.log('signup')\r\n    clearErrors()\r\n    firebase.auth().createUserWithEmailAndPassword(email, password).catch(err => {\r\n        \r\n        switch(err.code) {\r\n        case \"auth/email-already-in-use\":\r\n          setEmailError(err.message)\r\n          break\r\n        case \"auth/invalid-email\":\r\n          setEmailError(err.message)\r\n        break\r\n        case \"auth/weak-password\":\r\n          setPasswordError(err.message)\r\n        break\r\n        default: \r\n        setEmailError('Invalid')\r\n      }\r\n    })\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if(user) {\r\n          user.updateProfile({\r\n            displayName: name,\r\n          }) \r\n          db.collection('users').doc(user.uid).set({\r\n              created: new Date(), \r\n              msgids,\r\n              uid: firebase.auth().currentUser.uid,\r\n              online: true,\r\n              userinfo: {\r\n                name,\r\n                cover,\r\n                age: '', \r\n                phone: '', \r\n                city: '',\r\n                country: '',\r\n                website: 'https://',\r\n                job: '',\r\n                email,\r\n              },\r\n              customization: {\r\n                color: '#10325c',\r\n                themecolor: '#0f6ce6',\r\n                darkmode: false,\r\n                widemode: false,\r\n              }\r\n          })\r\n          db.collection('notifications').doc(user.uid).set({\r\n            notifications: 'email'\r\n          })\r\n   \r\n      }//if (user)\r\n      else {\r\n        setUser('')\r\n      } \r\n    }) \r\n  }\r\n  const handleLogout = () => {\r\n    if(user) {\r\n      db.collection('users').doc(user.uid).update({online: false})\r\n    }\r\n    //setLoginType('assistant')\r\n    loginType = 'assistant'\r\n    console.log(\"handle logout..\" + loginType)\r\n    window.location.host\r\n    firebase.auth().signOut()\r\n  }\r\n  const authListener = () => {\r\n    firebase.auth().onAuthStateChanged(user => {   \r\n      if(user) {\r\n        clearInputs()\r\n        setUser(user)\r\n        db.collection('users').doc(user.uid).update({online: true})\r\n\r\n        firebase.auth().onAuthStateChanged(user => {\r\n          db.collection('users').doc(user.uid).set({role: loginType})\r\n          console.log(\"Final role..\" + loginType)\r\n       } )\r\n      }\r\n      else {\r\n          setUser('')\r\n          //setLoginType('assistant')\r\n          //db.collection('users').doc(user.uid).update({online: false})\r\n      }\r\n    })\r\n  } \r\n  \r\n  function loginwithGoogle(){\r\n    var checkbox = document.querySelectorAll(\"input[type='radio']:checked\")\r\n    for (let i = 0; i < checkbox.length; i++) {\r\n        loginType = checkbox[0].id\r\n        console.log(\"Checkbox is checked..\" + loginType)\r\n    }\r\n\r\n    var provider = new firebase.auth.GoogleAuthProvider();\r\n    provider.addScope('email');\r\n\r\n    firebase.auth()\r\n    .signInWithPopup(provider)\r\n    .then((result) => {\r\n      if(result.additionalUserInfo.isNewUser){\r\n            /** @type {firebase.auth.OAuthCredential} */\r\n      var credential = result.credential;\r\n  \r\n      // This gives you a Google Access Token. You can use it to access the Google API.\r\n      var token = credential.accessToken;\r\n      // The signed-in user info.\r\n      var user = result.user;\r\n      // ...\r\n      db.collection('users').doc(user.uid).set({\r\n        created: new Date(), \r\n        msgids,\r\n        uid: user.uid,\r\n        online: true, \r\n        userinfo: {\r\n          name: user.displayName,\r\n          cover: user.photoURL,\r\n          age: '', \r\n          phone: user.phoneNumber, \r\n          city:'',\r\n          country: '',\r\n          website: 'https://',\r\n          job: '',\r\n          email: user.email\r\n          \r\n        },\r\n        customization: {\r\n          color: '#10325c',\r\n          themecolor: '#0f6ce6',\r\n          darkmode: false,\r\n          widemode: false,\r\n        }\r\n    })\r\n    db.collection('notifications').doc(user.uid).set({\r\n      notifications: 'Google'\r\n    })\r\n      }\r\n\r\n    }).catch((error) => {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      // The email of the user's account used.\r\n      var email = error.email;\r\n      // The firebase.auth.AuthCredential type that was used.\r\n      var credential = error.credential;\r\n      // ...\r\n      setEmailError(error.message)\r\n      setTimeout(()=>{\r\n        setEmailError('')\r\n      },3000)\r\n    });\r\n  }\r\n  function loginwithFacebook(){\r\n    var provider = new firebase.auth.FacebookAuthProvider();\r\n    provider.addScope(\"email\");\r\n\r\n    firebase.auth()\r\n    .signInWithPopup(provider)\r\n    .then((result) => {\r\n      if(result.additionalUserInfo.isNewUser){\r\n        /** @type {firebase.auth.OAuthCredential} */\r\n        var credential = result.credential;\r\n  \r\n        // This gives you a Google Access Token. You can use it to access the Google API.\r\n        var token = credential.accessToken;\r\n        // The signed-in user info.\r\n        var usergoogle = result.user;\r\n        // ...\r\n        db.collection('users').doc(usergoogle.uid).set({\r\n          created: new Date(), \r\n          msgids,\r\n          uid: usergoogle.uid,\r\n          online: true, \r\n          userinfo: {\r\n            name: usergoogle.displayName,\r\n            cover: usergoogle.photoURL,\r\n            age: '', \r\n            phone: usergoogle.phoneNumber, \r\n            city:'',\r\n            country: '',\r\n            website: 'https://',\r\n            job: '',\r\n            email: usergoogle.email\r\n          },\r\n          customization: {\r\n            color: '#10325c',\r\n            themecolor: '#0f6ce6',\r\n            darkmode: false,\r\n            widemode: false,\r\n          }\r\n      })\r\n      db.collection('notifications').doc(usergoogle.uid).set({\r\n        notifications: 'Facebook'\r\n      })\r\n    }\r\n    })\r\n    .catch((error) => {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n      // The email of the user's account used.\r\n      var email = error.email;\r\n      // The firebase.auth.AuthCredential type that was used.\r\n      var credential = error.credential;\r\n  \r\n      // ...\r\n      setEmailError(email)\r\n      setTimeout(()=>{\r\n        setEmailError('')\r\n      },3000)\r\n      console.log(errorCode)\r\n    });\r\n  }\r\n  useBeforeunload(() => {\r\n    if(user) {\r\n      db.collection('users').doc(user.uid).update({online: false})\r\n    }\r\n  }) \r\n\r\n  useEffect(() => { \r\n    let cnt = false\r\n    authListener()\r\n\r\n    /*\r\n    var checkbox = document.querySelector(\"input[id='executive']\")  \r\n    if (checkbox)\r\n    {\r\n      checkbox.addEventListener('change', function() {\r\n       if (checkbox.checked) \r\n       {\r\n         //setLoginType('executive')\r\n         loginType = 'executive'\r\n       }\r\n       console.log(\"Checkbox is checked..\" + loginType)\r\n     });\r\n    } \r\n    var checkbox_2 = document.querySelector(\"input[id='assistant']\")  \r\n    if (checkbox_2)\r\n    {\r\n      checkbox_2.addEventListener('change', function() {\r\n       if (checkbox_2.checked) \r\n       {\r\n         //setLoginType('executive')\r\n         loginType = 'assistant'\r\n       }\r\n       console.log(\"Checkbox is checked..\" + loginType)\r\n     });\r\n    } \r\n    */\r\n    window.addEventListener('onbeforeunload', removeActiveStatus) \r\n    function removeActiveStatus() {\r\n      if(user) {\r\n        db.collection('users').doc(user.uid).update({online: false})\r\n      }\r\n    }\r\n    if(user) {\r\n      db.collection('users').doc(user.uid).update({online: true})\r\n    }\r\n\r\n    return() => cnt = true\r\n  },[])  \r\n  /*\r\n   localStorage.openpages = Date.now();\r\n   var onLocalStorageEvent = function(e){\r\n       if(e.key == \"openpages\"){\r\n           // Listen if anybody else is opening the same page!\r\n           localStorage.page_available = Date.now();\r\n       }\r\n       if(e.key == \"page_available\"){\r\n           alert(\"One more page already open\");\r\n       }\r\n   };\r\n\r\n   window.addEventListener('storage', onLocalStorageEvent, false);\r\n*/   \r\n\r\n   return ( \r\n    \r\n        <Router >\r\n    <div className=\"App\">\r\n       {user?\r\n        <ContextAppProvider>\r\n        <>\r\n          <Body setLoading={setLoading} handleLogout={handleLogout} />\r\n          <Redirect to='/Home'/>\r\n        </>\r\n        </ContextAppProvider>\r\n        :\r\n        <> \r\n        <Login loginwithFacebook={()=>loginwithFacebook}loginwithGoogle={()=>loginwithGoogle} loading={loading} name={name} setName={setName} lname={lname} setlName={setlName}email={email} setEmail={setEmail} password= {password} setPassword={setPassword} handleLogin={handleLogin} handleSignup={handleSignup} hasAccount={hasAccount} setHasAccount={setHasAccount} emailError={emailError} passwordError={passwordError}/>       \r\n        <Redirect to='/'/>\r\n     </>\r\n        }\r\n    </div>  \r\n     </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App "],"mappings":"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"},"metadata":{},"sourceType":"module"}