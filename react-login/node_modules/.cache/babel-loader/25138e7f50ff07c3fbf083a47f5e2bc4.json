{"ast":null,"code":"import _slicedToArray from \"/Users/jinsonwu/Desktop/MIRC-Code-Verification/react-login/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/jinsonwu/Desktop/MIRC-Code-Verification/react-login/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport { db, Fire } from './Fire';\nimport firebase from 'firebase';\nimport { BrowserRouter as Router, Switch, Route, Link, NavLink, Redirect } from \"react-router-dom\";\nimport Sidebar from './components/Sidebar';\nimport Login from './components/Login';\nimport Body from './components/Body';\nimport ContextAppProvider from './ContextAPI';\nimport { useBeforeunload } from 'react-beforeunload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    update = _useState2[0],\n    setUpdate = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    user = _useState4[0],\n    setUser = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    name = _useState6[0],\n    setName = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    email = _useState8[0],\n    setEmail = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    password = _useState10[0],\n    setPassword = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    emailError = _useState12[0],\n    setEmailError = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    passwordError = _useState14[0],\n    setPasswordError = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    hasAccount = _useState16[0],\n    setHasAccount = _useState16[1];\n  var _useState17 = useState(''),\n    _useState18 = _slicedToArray(_useState17, 2),\n    lname = _useState18[0],\n    setlName = _useState18[1];\n  var _useState19 = useState([]),\n    _useState20 = _slicedToArray(_useState19, 2),\n    userinfo = _useState20[0],\n    setUserinfo = _useState20[1];\n  var _useState21 = useState([]),\n    _useState22 = _slicedToArray(_useState21, 2),\n    users = _useState22[0],\n    setUsers = _useState22[1];\n  var _useState23 = useState('https://www.gettyimages.ca/gi-resources/images/500px/983794168.jpg'),\n    _useState24 = _slicedToArray(_useState23, 2),\n    cover = _useState24[0],\n    setCover = _useState24[1];\n  var _useState25 = useState(false),\n    _useState26 = _slicedToArray(_useState25, 2),\n    forgotpassword = _useState26[0],\n    setForgotpassword = _useState26[1];\n  var _useState27 = useState(['']),\n    _useState28 = _slicedToArray(_useState27, 2),\n    msgids = _useState28[0],\n    setMsgIds = _useState28[1];\n  var _useState29 = useState(false),\n    _useState30 = _slicedToArray(_useState29, 2),\n    loading = _useState30[0],\n    setLoading = _useState30[1];\n  var clearInputs = function clearInputs() {\n    setEmail('');\n    setPassword('');\n  };\n  var clearErrors = function clearErrors() {\n    setEmailError('');\n    setPasswordError('');\n  };\n  var handleLogin = function handleLogin() {\n    clearErrors();\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\n      setLoading(true);\n    }).catch(function (err) {\n      switch (err.code) {\n        case \"auth/invalid-email\":\n          setEmailError(err.message);\n          break;\n        case \"auth/user/disabled\":\n        case \"auth/user-not-found\":\n          setEmailError('Email does not exist');\n          break;\n        case \"auth/wrong-password\":\n          setPasswordError('Incorrect Password');\n          break;\n        default:\n      }\n    });\n  };\n  var handleSignup = function handleSignup() {\n    console.log('signup');\n    clearErrors();\n    firebase.auth().createUserWithEmailAndPassword(email, password).catch(function (err) {\n      switch (err.code) {\n        case \"auth/email-already-in-use\":\n          setEmailError(err.message);\n          break;\n        case \"auth/invalid-email\":\n          setEmailError(err.message);\n          break;\n        case \"auth/weak-password\":\n          setPasswordError(err.message);\n          break;\n        default:\n          setEmailError('Invalid');\n      }\n    });\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        user.updateProfile({\n          displayName: name\n        });\n        db.collection('users').doc(user.uid).set({\n          created: new Date(),\n          msgids: msgids,\n          uid: firebase.auth().currentUser.uid,\n          online: true,\n          userinfo: {\n            name: name,\n            cover: cover,\n            age: '',\n            phone: '',\n            city: '',\n            country: '',\n            website: 'https://',\n            job: '',\n            email: email\n          },\n          customization: {\n            color: '#10325c',\n            themecolor: '#0f6ce6',\n            darkmode: false,\n            widemode: false\n          }\n        });\n        db.collection('notifications').doc(user.uid).set({\n          notifications: 'email'\n        });\n      } //if (user)\n      else {\n        setUser('');\n      }\n    });\n  };\n  var handleLogout = function handleLogout() {\n    if (user) {\n      db.collection('users').doc(user.uid).update({\n        online: false\n      });\n    }\n    window.location.host;\n    firebase.auth().signOut();\n  };\n  var authListener = function authListener() {\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        clearInputs();\n        setUser(user);\n        db.collection('users').doc(user.uid).update({\n          online: true\n        });\n      } else {\n        setUser('');\n        db.collection('users').doc(user.uid).update({\n          online: false\n        });\n      }\n    });\n  };\n  function _loginwithGoogle() {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    provider.addScope('email');\n    firebase.auth().signInWithPopup(provider).then(function (result) {\n      if (result.additionalUserInfo.isNewUser) {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential;\n\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = credential.accessToken;\n        // The signed-in user info.\n        var user = result.user;\n        // ...\n        db.collection('users').doc(user.uid).set({\n          created: new Date(),\n          msgids: msgids,\n          uid: user.uid,\n          online: true,\n          userinfo: {\n            name: user.displayName,\n            cover: user.photoURL,\n            age: '',\n            phone: user.phoneNumber,\n            city: '',\n            country: '',\n            website: 'https://',\n            job: '',\n            email: user.email\n          },\n          customization: {\n            color: '#10325c',\n            themecolor: '#0f6ce6',\n            darkmode: false,\n            widemode: false\n          }\n        });\n        db.collection('notifications').doc(user.uid).set({\n          notifications: 'Google'\n        });\n      }\n    }).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      // ...\n      setEmailError(error.message);\n      setTimeout(function () {\n        setEmailError('');\n      }, 3000);\n    });\n  }\n  function _loginwithFacebook() {\n    var provider = new firebase.auth.FacebookAuthProvider();\n    provider.addScope(\"email\");\n    firebase.auth().signInWithPopup(provider).then(function (result) {\n      if (result.additionalUserInfo.isNewUser) {\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential;\n\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = credential.accessToken;\n        // The signed-in user info.\n        var usergoogle = result.user;\n        // ...\n        db.collection('users').doc(usergoogle.uid).set({\n          created: new Date(),\n          msgids: msgids,\n          uid: usergoogle.uid,\n          online: true,\n          role: 1,\n          userinfo: {\n            name: usergoogle.displayName,\n            cover: usergoogle.photoURL,\n            age: '',\n            phone: usergoogle.phoneNumber,\n            city: '',\n            country: '',\n            website: 'https://',\n            job: '',\n            email: usergoogle.email\n          },\n          customization: {\n            color: '#10325c',\n            themecolor: '#0f6ce6',\n            darkmode: false,\n            widemode: false\n          }\n        });\n        db.collection('notifications').doc(usergoogle.uid).set({\n          notifications: 'Facebook'\n        });\n      }\n    }).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n\n      // ...\n      setEmailError(email);\n      setTimeout(function () {\n        setEmailError('');\n      }, 3000);\n      console.log(errorCode);\n    });\n  }\n  useBeforeunload(function () {\n    if (user) {\n      db.collection('users').doc(user.uid).update({\n        online: false\n      });\n    }\n  });\n  useEffect(function () {\n    authListener();\n    window.addEventListener('onbeforeunload', removeActiveStatus);\n    function removeActiveStatus() {\n      if (user) {\n        db.collection('users').doc(user.uid).update({\n          online: false\n        });\n      }\n    }\n    if (user) {\n      db.collection('users').doc(user.uid).update({\n        online: true\n      });\n    }\n  }, []);\n  /*\n   localStorage.openpages = Date.now();\n   var onLocalStorageEvent = function(e){\n       if(e.key == \"openpages\"){\n           // Listen if anybody else is opening the same page!\n           localStorage.page_available = Date.now();\n       }\n       if(e.key == \"page_available\"){\n           alert(\"One more page already open\");\n       }\n   };\n    window.addEventListener('storage', onLocalStorageEvent, false);\n  */\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: user ? /*#__PURE__*/_jsxDEV(ContextAppProvider, {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Body, {\n            setLoading: setLoading,\n            handleLogout: handleLogout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Login, {\n          loginwithTwitter: function (_loginwithTwitter) {\n            function loginwithTwitter() {\n              return _loginwithTwitter.apply(this, arguments);\n            }\n            loginwithTwitter.toString = function () {\n              return _loginwithTwitter.toString();\n            };\n            return loginwithTwitter;\n          }(function () {\n            return loginwithTwitter;\n          }),\n          loginwithFacebook: function loginwithFacebook() {\n            return _loginwithFacebook;\n          },\n          loginwithGoogle: function loginwithGoogle() {\n            return _loginwithGoogle;\n          },\n          loading: loading,\n          name: name,\n          setName: setName,\n          lname: lname,\n          setlName: setlName,\n          email: email,\n          setEmail: setEmail,\n          password: password,\n          setPassword: setPassword,\n          handleLogin: handleLogin,\n          handleSignup: handleSignup,\n          hasAccount: hasAccount,\n          setHasAccount: setHasAccount,\n          emailError: emailError,\n          passwordError: passwordError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"m4jUXOpFLJ8160I8dise2ZRLIOo=\", false, function () {\n  return [useBeforeunload];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","db","Fire","firebase","BrowserRouter","Router","Switch","Route","Link","NavLink","Redirect","Sidebar","Login","Body","ContextAppProvider","useBeforeunload","App","update","setUpdate","user","setUser","name","setName","email","setEmail","password","setPassword","emailError","setEmailError","passwordError","setPasswordError","hasAccount","setHasAccount","lname","setlName","userinfo","setUserinfo","users","setUsers","cover","setCover","forgotpassword","setForgotpassword","msgids","setMsgIds","loading","setLoading","clearInputs","clearErrors","handleLogin","auth","signInWithEmailAndPassword","then","catch","err","code","message","handleSignup","console","log","createUserWithEmailAndPassword","onAuthStateChanged","updateProfile","displayName","collection","doc","uid","set","created","Date","currentUser","online","age","phone","city","country","website","job","customization","color","themecolor","darkmode","widemode","notifications","handleLogout","window","location","host","signOut","authListener","loginwithGoogle","provider","GoogleAuthProvider","addScope","signInWithPopup","result","additionalUserInfo","isNewUser","credential","token","accessToken","photoURL","phoneNumber","error","errorCode","errorMessage","setTimeout","loginwithFacebook","FacebookAuthProvider","usergoogle","role","addEventListener","removeActiveStatus","loginwithTwitter"],"sources":["/Users/jinsonwu/Desktop/MIRC-Code-Verification/react-login/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport \"./styles.css\";\nimport {db, Fire} from './Fire'\nimport firebase from 'firebase'\nimport { BrowserRouter as Router,Switch,Route,Link,NavLink, Redirect } from \"react-router-dom\" \nimport Sidebar from './components/Sidebar'\nimport Login from './components/Login'\nimport Body from './components/Body'\nimport ContextAppProvider from './ContextAPI'\nimport { useBeforeunload } from 'react-beforeunload'\nfunction App() {\n  const [update, setUpdate]=useState(0)\n  const [user, setUser]=useState('')\n  const [name, setName]=useState('')\n  const [email, setEmail]=useState('')\n  const [password, setPassword]=useState('')\n  const [emailError, setEmailError]=useState('')\n  const [passwordError, setPasswordError]=useState('')\n  const [hasAccount, setHasAccount]=useState(false)\n  const [lname, setlName]=useState('')\n  const [userinfo, setUserinfo]=useState([])\n  const [users, setUsers]=useState([])\n  const [cover, setCover]=useState('https://www.gettyimages.ca/gi-resources/images/500px/983794168.jpg')\n  const [forgotpassword, setForgotpassword]=useState(false)\n  const [msgids, setMsgIds] = useState([''])\n  const [loading, setLoading]=useState(false)\n  const clearInputs = () => {\n    setEmail('')\n    setPassword('')\n  }\n  const clearErrors = () => {\n    setEmailError('')\n    setPasswordError('')\n  }\n  const handleLogin = () => {\n   \n    clearErrors()\n    firebase.auth().signInWithEmailAndPassword(email, password)\n    .then(()=>{setLoading(true)})\n    .catch(err => {\n      switch(err.code) {\n        case \"auth/invalid-email\":\n          setEmailError(err.message)\n          break\n        case \"auth/user/disabled\":\n        case \"auth/user-not-found\":\n          setEmailError('Email does not exist')\n        break\n        case \"auth/wrong-password\":\n          setPasswordError('Incorrect Password')\n        break\n        default:\n      }  \n    })\n\n  } \n  const handleSignup = () => {\n    console.log('signup')\n    clearErrors()\n    firebase.auth().createUserWithEmailAndPassword(email, password).catch(err => {\n        \n        switch(err.code) {\n        case \"auth/email-already-in-use\":\n          setEmailError(err.message)\n          break\n        case \"auth/invalid-email\":\n          setEmailError(err.message)\n        break\n        case \"auth/weak-password\":\n          setPasswordError(err.message)\n        break\n        default: \n        setEmailError('Invalid')\n      }\n    })\n    firebase.auth().onAuthStateChanged(user => {\n      if(user) {\n          user.updateProfile({\n            displayName: name,\n          }) \n          db.collection('users').doc(user.uid).set({\n              created: new Date(), \n              msgids,\n              uid: firebase.auth().currentUser.uid,\n              online: true, \n              userinfo: {\n                name,\n                cover,\n                age: '', \n                phone: '', \n                city: '',\n                country: '',\n                website: 'https://',\n                job: '',\n                email,\n              },\n              customization: {\n                color: '#10325c',\n                themecolor: '#0f6ce6',\n                darkmode: false,\n                widemode: false,\n              }\n          })\n          db.collection('notifications').doc(user.uid).set({\n            notifications: 'email'\n          })\n   \n      }//if (user)\n      else {\n        setUser('')\n      } \n    }) \n  }\n  const handleLogout = () => {\n    if(user) {\n      db.collection('users').doc(user.uid).update({online: false})\n    }\n    window.location.host\n    firebase.auth().signOut()\n  }\n  const authListener = () => {\n    firebase.auth().onAuthStateChanged(user => {\n      if(user) {\n        clearInputs()\n        setUser(user)\n        db.collection('users').doc(user.uid).update({online: true})\n      }\n      else {\n\n          setUser('')\n          db.collection('users').doc(user.uid).update({online: false})\n      }\n    })\n  } \n  \n  function loginwithGoogle(){\n    var provider = new firebase.auth.GoogleAuthProvider();\n    provider.addScope('email');\n\n    firebase.auth()\n    .signInWithPopup(provider)\n    .then((result) => {\n      if(result.additionalUserInfo.isNewUser){\n            /** @type {firebase.auth.OAuthCredential} */\n      var credential = result.credential;\n  \n      // This gives you a Google Access Token. You can use it to access the Google API.\n      var token = credential.accessToken;\n      // The signed-in user info.\n      var user = result.user;\n      // ...\n      db.collection('users').doc(user.uid).set({\n        created: new Date(), \n        msgids,\n        uid: user.uid,\n        online: true, \n        userinfo: {\n          name: user.displayName,\n          cover: user.photoURL,\n          age: '', \n          phone: user.phoneNumber, \n          city:'',\n          country: '',\n          website: 'https://',\n          job: '',\n          email: user.email\n          \n        },\n        customization: {\n          color: '#10325c',\n          themecolor: '#0f6ce6',\n          darkmode: false,\n          widemode: false,\n        }\n    })\n    db.collection('notifications').doc(user.uid).set({\n      notifications: 'Google'\n    })\n      }\n\n    }).catch((error) => {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      // ...\n      setEmailError(error.message)\n      setTimeout(()=>{\n        setEmailError('')\n      },3000)\n    });\n  }\n  function loginwithFacebook(){\n    var provider = new firebase.auth.FacebookAuthProvider();\n    provider.addScope(\"email\");\n\n    firebase.auth()\n    .signInWithPopup(provider)\n    .then((result) => {\n      if(result.additionalUserInfo.isNewUser){\n        /** @type {firebase.auth.OAuthCredential} */\n        var credential = result.credential;\n  \n        // This gives you a Google Access Token. You can use it to access the Google API.\n        var token = credential.accessToken;\n        // The signed-in user info.\n        var usergoogle = result.user;\n        // ...\n        db.collection('users').doc(usergoogle.uid).set({\n          created: new Date(), \n          msgids,\n          uid: usergoogle.uid,\n          online: true, \n          role: 1,\n          userinfo: {\n            name: usergoogle.displayName,\n            cover: usergoogle.photoURL,\n            age: '', \n            phone: usergoogle.phoneNumber, \n            city:'',\n            country: '',\n            website: 'https://',\n            job: '',\n            email: usergoogle.email\n          },\n          customization: {\n            color: '#10325c',\n            themecolor: '#0f6ce6',\n            darkmode: false,\n            widemode: false,\n          }\n      })\n      db.collection('notifications').doc(usergoogle.uid).set({\n        notifications: 'Facebook'\n      })\n    }\n    })\n    .catch((error) => {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n  \n      // ...\n      setEmailError(email)\n      setTimeout(()=>{\n        setEmailError('')\n      },3000)\n      console.log(errorCode)\n    });\n  }\n  useBeforeunload(() => {\n    if(user) {\n      db.collection('users').doc(user.uid).update({online: false})\n    }\n  }) \n  useEffect(() => { \n    authListener()\n    window.addEventListener('onbeforeunload', removeActiveStatus) \n    function removeActiveStatus() {\n      if(user) {\n        db.collection('users').doc(user.uid).update({online: false})\n      }\n    }\n    if(user) {\n      db.collection('users').doc(user.uid).update({online: true})\n    }\n\n  },[])  \n  /*\n   localStorage.openpages = Date.now();\n   var onLocalStorageEvent = function(e){\n       if(e.key == \"openpages\"){\n           // Listen if anybody else is opening the same page!\n           localStorage.page_available = Date.now();\n       }\n       if(e.key == \"page_available\"){\n           alert(\"One more page already open\");\n       }\n   };\n\n   window.addEventListener('storage', onLocalStorageEvent, false);\n*/  \n   return ( \n    \n        <Router >\n    <div className=\"App\">\n       {user?\n        <ContextAppProvider>\n        <>\n          <Body setLoading={setLoading}  handleLogout={handleLogout}/>\n          <Redirect to='/Home'/>\n        </>\n        </ContextAppProvider>\n        :\n        <> \n        <Login loginwithTwitter={()=>loginwithTwitter} loginwithFacebook={()=>loginwithFacebook}loginwithGoogle={()=>loginwithGoogle} loading={loading} name={name} setName={setName} lname={lname} setlName={setlName}email={email} setEmail={setEmail} password= {password} setPassword={setPassword} handleLogin={handleLogin} handleSignup={handleSignup} hasAccount={hasAccount} setHasAccount={setHasAccount} emailError={emailError} passwordError={passwordError}/>       \n        <Redirect to='/'/>\n     </>\n        }\n    </div>  \n     </Router>\n\n  );\n}\n\nexport default App \n"],"mappings":"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"},"metadata":{},"sourceType":"module"}