{"ast":null,"code":"var n,\n  l,\n  u,\n  i,\n  t,\n  o,\n  r,\n  f = {},\n  e = [],\n  c = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\nfunction s(n, l) {\n  for (var u in l) {\n    n[u] = l[u];\n  }\n  return n;\n}\nfunction a(n) {\n  var l = n.parentNode;\n  l && l.removeChild(n);\n}\nfunction h(l, u, i) {\n  var t,\n    o,\n    r,\n    f = {};\n  for (r in u) {\n    \"key\" == r ? t = u[r] : \"ref\" == r ? o = u[r] : f[r] = u[r];\n  }\n  if (arguments.length > 2 && (f.children = arguments.length > 3 ? n.call(arguments, 2) : i), \"function\" == typeof l && null != l.defaultProps) for (r in l.defaultProps) {\n    void 0 === f[r] && (f[r] = l.defaultProps[r]);\n  }\n  return v(l, f, t, o, null);\n}\nfunction v(n, i, t, o, r) {\n  var f = {\n    type: n,\n    props: i,\n    key: t,\n    ref: o,\n    __k: null,\n    __: null,\n    __b: 0,\n    __e: null,\n    __d: void 0,\n    __c: null,\n    __h: null,\n    constructor: void 0,\n    __v: null == r ? ++u : r\n  };\n  return null == r && null != l.vnode && l.vnode(f), f;\n}\nfunction y() {\n  return {\n    current: null\n  };\n}\nfunction p(n) {\n  return n.children;\n}\nfunction d(n, l) {\n  this.props = n, this.context = l;\n}\nfunction _(n, l) {\n  if (null == l) return n.__ ? _(n.__, n.__.__k.indexOf(n) + 1) : null;\n  for (var u; l < n.__k.length; l++) {\n    if (null != (u = n.__k[l]) && null != u.__e) return u.__e;\n  }\n  return \"function\" == typeof n.type ? _(n) : null;\n}\nfunction k(n) {\n  var l, u;\n  if (null != (n = n.__) && null != n.__c) {\n    for (n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++) {\n      if (null != (u = n.__k[l]) && null != u.__e) {\n        n.__e = n.__c.base = u.__e;\n        break;\n      }\n    }\n    return k(n);\n  }\n}\nfunction b(n) {\n  (!n.__d && (n.__d = !0) && t.push(n) && !g.__r++ || o !== l.debounceRendering) && ((o = l.debounceRendering) || setTimeout)(g);\n}\nfunction g() {\n  for (var n; g.__r = t.length;) {\n    n = t.sort(function (n, l) {\n      return n.__v.__b - l.__v.__b;\n    }), t = [], n.some(function (n) {\n      var l, u, i, t, o, r;\n      n.__d && (o = (t = (l = n).__v).__e, (r = l.__P) && (u = [], (i = s({}, t)).__v = t.__v + 1, j(r, t, i, l.__n, void 0 !== r.ownerSVGElement, null != t.__h ? [o] : null, u, null == o ? _(t) : o, t.__h), z(u, t), t.__e != o && k(t)));\n    });\n  }\n}\nfunction w(n, l, u, i, t, o, r, c, s, a) {\n  var h,\n    y,\n    d,\n    k,\n    b,\n    g,\n    w,\n    x = i && i.__k || e,\n    C = x.length;\n  for (u.__k = [], h = 0; h < l.length; h++) {\n    if (null != (k = u.__k[h] = null == (k = l[h]) || \"boolean\" == typeof k ? null : \"string\" == typeof k || \"number\" == typeof k || \"bigint\" == typeof k ? v(null, k, null, null, k) : Array.isArray(k) ? v(p, {\n      children: k\n    }, null, null, null) : k.__b > 0 ? v(k.type, k.props, k.key, k.ref ? k.ref : null, k.__v) : k)) {\n      if (k.__ = u, k.__b = u.__b + 1, null === (d = x[h]) || d && k.key == d.key && k.type === d.type) x[h] = void 0;else for (y = 0; y < C; y++) {\n        if ((d = x[y]) && k.key == d.key && k.type === d.type) {\n          x[y] = void 0;\n          break;\n        }\n        d = null;\n      }\n      j(n, k, d = d || f, t, o, r, c, s, a), b = k.__e, (y = k.ref) && d.ref != y && (w || (w = []), d.ref && w.push(d.ref, null, k), w.push(y, k.__c || b, k)), null != b ? (null == g && (g = b), \"function\" == typeof k.type && k.__k === d.__k ? k.__d = s = m(k, s, n) : s = A(n, k, d, x, b, s), \"function\" == typeof u.type && (u.__d = s)) : s && d.__e == s && s.parentNode != n && (s = _(d));\n    }\n  }\n  for (u.__e = g, h = C; h--;) {\n    null != x[h] && N(x[h], x[h]);\n  }\n  if (w) for (h = 0; h < w.length; h++) {\n    M(w[h], w[++h], w[++h]);\n  }\n}\nfunction m(n, l, u) {\n  for (var i, t = n.__k, o = 0; t && o < t.length; o++) {\n    (i = t[o]) && (i.__ = n, l = \"function\" == typeof i.type ? m(i, l, u) : A(u, i, i, t, i.__e, l));\n  }\n  return l;\n}\nfunction x(n, l) {\n  return l = l || [], null == n || \"boolean\" == typeof n || (Array.isArray(n) ? n.some(function (n) {\n    x(n, l);\n  }) : l.push(n)), l;\n}\nfunction A(n, l, u, i, t, o) {\n  var r, f, e;\n  if (void 0 !== l.__d) r = l.__d, l.__d = void 0;else if (null == u || t != o || null == t.parentNode) n: if (null == o || o.parentNode !== n) n.appendChild(t), r = null;else {\n    for (f = o, e = 0; (f = f.nextSibling) && e < i.length; e += 1) {\n      if (f == t) break n;\n    }\n    n.insertBefore(t, o), r = o;\n  }\n  return void 0 !== r ? r : t.nextSibling;\n}\nfunction C(n, l, u, i, t) {\n  var o;\n  for (o in u) {\n    \"children\" === o || \"key\" === o || o in l || H(n, o, null, u[o], i);\n  }\n  for (o in l) {\n    t && \"function\" != typeof l[o] || \"children\" === o || \"key\" === o || \"value\" === o || \"checked\" === o || u[o] === l[o] || H(n, o, l[o], u[o], i);\n  }\n}\nfunction $(n, l, u) {\n  \"-\" === l[0] ? n.setProperty(l, u) : n[l] = null == u ? \"\" : \"number\" != typeof u || c.test(l) ? u : u + \"px\";\n}\nfunction H(n, l, u, i, t) {\n  var o;\n  n: if (\"style\" === l) {\n    if (\"string\" == typeof u) n.style.cssText = u;else {\n      if (\"string\" == typeof i && (n.style.cssText = i = \"\"), i) for (l in i) {\n        u && l in u || $(n.style, l, \"\");\n      }\n      if (u) for (l in u) {\n        i && u[l] === i[l] || $(n.style, l, u[l]);\n      }\n    }\n  } else if (\"o\" === l[0] && \"n\" === l[1]) o = l !== (l = l.replace(/Capture$/, \"\")), l = l.toLowerCase() in n ? l.toLowerCase().slice(2) : l.slice(2), n.l || (n.l = {}), n.l[l + o] = u, u ? i || n.addEventListener(l, o ? T : I, o) : n.removeEventListener(l, o ? T : I, o);else if (\"dangerouslySetInnerHTML\" !== l) {\n    if (t) l = l.replace(/xlink(H|:h)/, \"h\").replace(/sName$/, \"s\");else if (\"href\" !== l && \"list\" !== l && \"form\" !== l && \"tabIndex\" !== l && \"download\" !== l && l in n) try {\n      n[l] = null == u ? \"\" : u;\n      break n;\n    } catch (n) {}\n    \"function\" == typeof u || (null == u || !1 === u && -1 == l.indexOf(\"-\") ? n.removeAttribute(l) : n.setAttribute(l, u));\n  }\n}\nfunction I(n) {\n  this.l[n.type + !1](l.event ? l.event(n) : n);\n}\nfunction T(n) {\n  this.l[n.type + !0](l.event ? l.event(n) : n);\n}\nfunction j(n, u, i, t, o, r, f, e, c) {\n  var a,\n    h,\n    v,\n    y,\n    _,\n    k,\n    b,\n    g,\n    m,\n    x,\n    A,\n    C,\n    $,\n    H,\n    I,\n    T = u.type;\n  if (void 0 !== u.constructor) return null;\n  null != i.__h && (c = i.__h, e = u.__e = i.__e, u.__h = null, r = [e]), (a = l.__b) && a(u);\n  try {\n    n: if (\"function\" == typeof T) {\n      if (g = u.props, m = (a = T.contextType) && t[a.__c], x = a ? m ? m.props.value : a.__ : t, i.__c ? b = (h = u.__c = i.__c).__ = h.__E : (\"prototype\" in T && T.prototype.render ? u.__c = h = new T(g, x) : (u.__c = h = new d(g, x), h.constructor = T, h.render = O), m && m.sub(h), h.props = g, h.state || (h.state = {}), h.context = x, h.__n = t, v = h.__d = !0, h.__h = [], h._sb = []), null == h.__s && (h.__s = h.state), null != T.getDerivedStateFromProps && (h.__s == h.state && (h.__s = s({}, h.__s)), s(h.__s, T.getDerivedStateFromProps(g, h.__s))), y = h.props, _ = h.state, v) null == T.getDerivedStateFromProps && null != h.componentWillMount && h.componentWillMount(), null != h.componentDidMount && h.__h.push(h.componentDidMount);else {\n        if (null == T.getDerivedStateFromProps && g !== y && null != h.componentWillReceiveProps && h.componentWillReceiveProps(g, x), !h.__e && null != h.shouldComponentUpdate && !1 === h.shouldComponentUpdate(g, h.__s, x) || u.__v === i.__v) {\n          for (h.props = g, h.state = h.__s, u.__v !== i.__v && (h.__d = !1), h.__v = u, u.__e = i.__e, u.__k = i.__k, u.__k.forEach(function (n) {\n            n && (n.__ = u);\n          }), A = 0; A < h._sb.length; A++) {\n            h.__h.push(h._sb[A]);\n          }\n          h._sb = [], h.__h.length && f.push(h);\n          break n;\n        }\n        null != h.componentWillUpdate && h.componentWillUpdate(g, h.__s, x), null != h.componentDidUpdate && h.__h.push(function () {\n          h.componentDidUpdate(y, _, k);\n        });\n      }\n      if (h.context = x, h.props = g, h.__v = u, h.__P = n, C = l.__r, $ = 0, \"prototype\" in T && T.prototype.render) {\n        for (h.state = h.__s, h.__d = !1, C && C(u), a = h.render(h.props, h.state, h.context), H = 0; H < h._sb.length; H++) {\n          h.__h.push(h._sb[H]);\n        }\n        h._sb = [];\n      } else do {\n        h.__d = !1, C && C(u), a = h.render(h.props, h.state, h.context), h.state = h.__s;\n      } while (h.__d && ++$ < 25);\n      h.state = h.__s, null != h.getChildContext && (t = s(s({}, t), h.getChildContext())), v || null == h.getSnapshotBeforeUpdate || (k = h.getSnapshotBeforeUpdate(y, _)), I = null != a && a.type === p && null == a.key ? a.props.children : a, w(n, Array.isArray(I) ? I : [I], u, i, t, o, r, f, e, c), h.base = u.__e, u.__h = null, h.__h.length && f.push(h), b && (h.__E = h.__ = null), h.__e = !1;\n    } else null == r && u.__v === i.__v ? (u.__k = i.__k, u.__e = i.__e) : u.__e = L(i.__e, u, i, t, o, r, f, c);\n    (a = l.diffed) && a(u);\n  } catch (n) {\n    u.__v = null, (c || null != r) && (u.__e = e, u.__h = !!c, r[r.indexOf(e)] = null), l.__e(n, u, i);\n  }\n}\nfunction z(n, u) {\n  l.__c && l.__c(u, n), n.some(function (u) {\n    try {\n      n = u.__h, u.__h = [], n.some(function (n) {\n        n.call(u);\n      });\n    } catch (n) {\n      l.__e(n, u.__v);\n    }\n  });\n}\nfunction L(l, u, i, t, o, r, e, c) {\n  var s,\n    h,\n    v,\n    y = i.props,\n    p = u.props,\n    d = u.type,\n    k = 0;\n  if (\"svg\" === d && (o = !0), null != r) for (; k < r.length; k++) {\n    if ((s = r[k]) && \"setAttribute\" in s == !!d && (d ? s.localName === d : 3 === s.nodeType)) {\n      l = s, r[k] = null;\n      break;\n    }\n  }\n  if (null == l) {\n    if (null === d) return document.createTextNode(p);\n    l = o ? document.createElementNS(\"http://www.w3.org/2000/svg\", d) : document.createElement(d, p.is && p), r = null, c = !1;\n  }\n  if (null === d) y === p || c && l.data === p || (l.data = p);else {\n    if (r = r && n.call(l.childNodes), h = (y = i.props || f).dangerouslySetInnerHTML, v = p.dangerouslySetInnerHTML, !c) {\n      if (null != r) for (y = {}, k = 0; k < l.attributes.length; k++) {\n        y[l.attributes[k].name] = l.attributes[k].value;\n      }\n      (v || h) && (v && (h && v.__html == h.__html || v.__html === l.innerHTML) || (l.innerHTML = v && v.__html || \"\"));\n    }\n    if (C(l, p, y, o, c), v) u.__k = [];else if (k = u.props.children, w(l, Array.isArray(k) ? k : [k], u, i, t, o && \"foreignObject\" !== d, r, e, r ? r[0] : i.__k && _(i, 0), c), null != r) for (k = r.length; k--;) {\n      null != r[k] && a(r[k]);\n    }\n    c || (\"value\" in p && void 0 !== (k = p.value) && (k !== l.value || \"progress\" === d && !k || \"option\" === d && k !== y.value) && H(l, \"value\", k, y.value, !1), \"checked\" in p && void 0 !== (k = p.checked) && k !== l.checked && H(l, \"checked\", k, y.checked, !1));\n  }\n  return l;\n}\nfunction M(n, u, i) {\n  try {\n    \"function\" == typeof n ? n(u) : n.current = u;\n  } catch (n) {\n    l.__e(n, i);\n  }\n}\nfunction N(n, u, i) {\n  var t, o;\n  if (l.unmount && l.unmount(n), (t = n.ref) && (t.current && t.current !== n.__e || M(t, null, u)), null != (t = n.__c)) {\n    if (t.componentWillUnmount) try {\n      t.componentWillUnmount();\n    } catch (n) {\n      l.__e(n, u);\n    }\n    t.base = t.__P = null, n.__c = void 0;\n  }\n  if (t = n.__k) for (o = 0; o < t.length; o++) {\n    t[o] && N(t[o], u, i || \"function\" != typeof n.type);\n  }\n  i || null == n.__e || a(n.__e), n.__ = n.__e = n.__d = void 0;\n}\nfunction O(n, l, u) {\n  return this.constructor(n, u);\n}\nfunction P(u, i, t) {\n  var o, r, e;\n  l.__ && l.__(u, i), r = (o = \"function\" == typeof t) ? null : t && t.__k || i.__k, e = [], j(i, u = (!o && t || i).__k = h(p, null, [u]), r || f, f, void 0 !== i.ownerSVGElement, !o && t ? [t] : r ? null : i.firstChild ? n.call(i.childNodes) : null, e, !o && t ? t : r ? r.__e : i.firstChild, o), z(e, u);\n}\nfunction S(n, l) {\n  P(n, l, S);\n}\nfunction q(l, u, i) {\n  var t,\n    o,\n    r,\n    f = s({}, l.props);\n  for (r in u) {\n    \"key\" == r ? t = u[r] : \"ref\" == r ? o = u[r] : f[r] = u[r];\n  }\n  return arguments.length > 2 && (f.children = arguments.length > 3 ? n.call(arguments, 2) : i), v(l.type, f, t || l.key, o || l.ref, null);\n}\nfunction B(n, l) {\n  var u = {\n    __c: l = \"__cC\" + r++,\n    __: n,\n    Consumer: function Consumer(n, l) {\n      return n.children(l);\n    },\n    Provider: function Provider(n) {\n      var u, i;\n      return this.getChildContext || (u = [], (i = {})[l] = this, this.getChildContext = function () {\n        return i;\n      }, this.shouldComponentUpdate = function (n) {\n        this.props.value !== n.value && u.some(b);\n      }, this.sub = function (n) {\n        u.push(n);\n        var l = n.componentWillUnmount;\n        n.componentWillUnmount = function () {\n          u.splice(u.indexOf(n), 1), l && l.call(n);\n        };\n      }), n.children;\n    }\n  };\n  return u.Provider.__ = u.Consumer.contextType = u;\n}\nn = e.slice, l = {\n  __e: function __e(n, l, u, i) {\n    for (var t, o, r; l = l.__;) {\n      if ((t = l.__c) && !t.__) try {\n        if ((o = t.constructor) && null != o.getDerivedStateFromError && (t.setState(o.getDerivedStateFromError(n)), r = t.__d), null != t.componentDidCatch && (t.componentDidCatch(n, i || {}), r = t.__d), r) return t.__E = t;\n      } catch (l) {\n        n = l;\n      }\n    }\n    throw n;\n  }\n}, u = 0, i = function i(n) {\n  return null != n && void 0 === n.constructor;\n}, d.prototype.setState = function (n, l) {\n  var u;\n  u = null != this.__s && this.__s !== this.state ? this.__s : this.__s = s({}, this.state), \"function\" == typeof n && (n = n(s({}, u), this.props)), n && s(u, n), null != n && this.__v && (l && this._sb.push(l), b(this));\n}, d.prototype.forceUpdate = function (n) {\n  this.__v && (this.__e = !0, n && this.__h.push(n), b(this));\n}, d.prototype.render = p, t = [], g.__r = 0, r = 0;\nexport { d as Component, p as Fragment, q as cloneElement, B as createContext, h as createElement, y as createRef, h, S as hydrate, i as isValidElement, l as options, P as render, x as toChildArray };","map":{"version":3,"mappings":"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","names":["slice","options","vnodeId","isValidElement","rerenderQueue","prevDebounce","i","EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","assign","obj","props","removeNode","node","parentNode","removeChild","createElement","type","children","key","ref","normalizedProps","arguments","length","call","defaultProps","undefined","createVNode","original","vnode","__k","__","__b","__e","__d","__c","__h","constructor","__v","createRef","current","Fragment","Component","context","this","getDomSibling","childIndex","indexOf","sibling","updateParentDomPointers","child","base","enqueueRender","c","push","process","debounceRendering","setTimeout","queue","__r","sort","a","b","some","component","commitQueue","oldVNode","oldDom","parentDom","__P","diff","ownerSVGElement","commitRoot","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","j","childVNode","newDom","firstChildDom","refs","oldChildren","oldChildrenLength","Array","isArray","reorderChildren","placeChild","unmount","applyRef","tmp","toChildArray","out","nextDom","sibDom","outer","appendChild","nextSibling","insertBefore","diffProps","dom","newProps","oldProps","hydrate","setProperty","setStyle","style","value","test","name","oldValue","useCapture","o","cssText","replace","toLowerCase","l","addEventListener","eventProxyCapture","eventProxy","removeEventListener","e","removeAttribute","setAttribute","event","newVNode","isNew","oldState","snapshot","clearProcessingException","provider","componentContext","renderHook","count","newType","contextType","__E","prototype","render","doRender","sub","state","getDerivedStateFromProps","__s","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","forEach","_sb","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","diffElementNodes","diffed","root","cb","oldHtml","newHtml","nodeType","localName","document","createTextNode","createElementNS","is","data","childNodes","dangerouslySetInnerHTML","attributes","__html","innerHTML","checked","parentVNode","skipRemove","r","componentWillUnmount","replaceNode","firstChild","cloneElement","createContext","defaultValue","contextId","Consumer","contextValue","Provider","subs","ctx","_props","old","splice","error","errorInfo","ctor","handled","getDerivedStateFromError","setState","componentDidCatch","update","callback","s","forceUpdate"],"sources":["C:\\Users\\Max\\Documents\\GitHub\\MIRC-Code-Verification\\react-login\\node_modules\\preact\\src\\util.js","C:\\Users\\Max\\Documents\\GitHub\\MIRC-Code-Verification\\react-login\\node_modules\\preact\\src\\options.js","C:\\Users\\Max\\Documents\\GitHub\\MIRC-Code-Verification\\react-login\\node_modules\\preact\\src\\create-element.js","C:\\Users\\Max\\Documents\\GitHub\\MIRC-Code-Verification\\react-login\\node_modules\\preact\\src\\component.js","C:\\Users\\Max\\Documents\\GitHub\\MIRC-Code-Verification\\react-login\\node_modules\\preact\\src\\create-context.js","C:\\Users\\Max\\Documents\\GitHub\\MIRC-Code-Verification\\react-login\\node_modules\\preact\\src\\constants.js","C:\\Users\\Max\\Documents\\GitHub\\MIRC-Code-Verification\\react-login\\node_modules\\preact\\src\\diff\\children.js","C:\\Users\\Max\\Documents\\GitHub\\MIRC-Code-Verification\\react-login\\node_modules\\preact\\src\\diff\\props.js","C:\\Users\\Max\\Documents\\GitHub\\MIRC-Code-Verification\\react-login\\node_modules\\preact\\src\\diff\\index.js","C:\\Users\\Max\\Documents\\GitHub\\MIRC-Code-Verification\\react-login\\node_modules\\preact\\src\\render.js","C:\\Users\\Max\\Documents\\GitHub\\MIRC-Code-Verification\\react-login\\node_modules\\preact\\src\\clone-element.js","C:\\Users\\Max\\Documents\\GitHub\\MIRC-Code-Verification\\react-login\\node_modules\\preact\\src\\diff\\catch-error.js"],"sourcesContent":["import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n","import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || setTimeout)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\n\nprocess._rerenderCount = 0;\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(enqueueRender);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n","export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 1\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name.indexOf('-') != -1)) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}