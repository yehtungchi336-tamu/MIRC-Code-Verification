{"ast":null,"code":"import { db } from \"../Fire\";\nimport firebase from \"firebase\";\nexport function StartConvo(recipientid, message, convoid, recipientname) {\n  var user = firebase.auth().currentUser;\n  var date = firebase.firestore.FieldValue.serverTimestamp();\n  var convoinfo = {\n    convoid: convoid,\n    creatorid: user.uid,\n    creatorname: user.displayName,\n    recipientid: recipientid,\n    recipientname: recipientname,\n    typerid: user.uid,\n    userref: db.collection(\"users\").doc(recipientid)\n    // usertyping: false,\n  };\n\n  var customizedconvo = {\n    theme: \"https://i.imgur.com/4hzNTTq.png\",\n    emoji: \"ðŸ¤—\"\n  };\n  var nicknames = {\n    nickname1: \"\",\n    nickname2: \"\"\n  };\n  var messages = {\n    message: message,\n    reaction1: \"\",\n    reaction2: \"\",\n    msgdate: firebase.firestore.Timestamp.now(),\n    msgid: db.collection(\"conversations\").doc().id,\n    read: false,\n    senderid: user.uid,\n    sendername: user.displayName,\n    editing: false\n  };\n  var notificationobj = {\n    notifimsg: message,\n    notifidate: firebase.firestore.Timestamp.now(),\n    read: false,\n    sender: user.displayName,\n    id: convoid,\n    senderid: user.uid,\n    notifiid: db.collection('users').doc().id\n  };\n  db.collection('notifications').doc(recipientid).update({\n    notifications: firebase.firestore.FieldValue.arrayUnion(notificationobj)\n  });\n  db.collection(\"users\").doc(user.uid).update({\n    msgids: firebase.firestore.FieldValue.arrayUnion(convoid),\n    msgpersonids: firebase.firestore.FieldValue.arrayUnion(recipientid)\n  });\n  db.collection(\"users\").doc(recipientid).update({\n    msgids: firebase.firestore.FieldValue.arrayUnion(convoid),\n    msgpersonids: firebase.firestore.FieldValue.arrayUnion(user.uid)\n  });\n  db.collection(\"conversations\").doc(convoid).set({\n    lastmsgdate: date,\n    convoinfo: convoinfo,\n    messages: firebase.firestore.FieldValue.arrayUnion(messages),\n    customizedconvo: customizedconvo,\n    nickname1: '',\n    notifications1: true,\n    nickname2: '',\n    notifications2: true\n  });\n}\n_c = StartConvo;\nvar _c;\n$RefreshReg$(_c, \"StartConvo\");","map":{"version":3,"names":["db","firebase","StartConvo","recipientid","message","convoid","recipientname","user","auth","currentUser","date","firestore","FieldValue","serverTimestamp","convoinfo","creatorid","uid","creatorname","displayName","typerid","userref","collection","doc","customizedconvo","theme","emoji","nicknames","nickname1","nickname2","messages","reaction1","reaction2","msgdate","Timestamp","now","msgid","id","read","senderid","sendername","editing","notificationobj","notifimsg","notifidate","sender","notifiid","update","notifications","arrayUnion","msgids","msgpersonids","set","lastmsgdate","notifications1","notifications2"],"sources":["C:/Users/Max/Documents/GitHub/MIRC-Code-Verification/react-login/src/components/StartConvo.js"],"sourcesContent":["import { db } from \"../Fire\";\r\nimport firebase from \"firebase\";\r\n\r\nexport function StartConvo(recipientid, message, convoid, recipientname) {\r\n  const user = firebase.auth().currentUser;\r\n  const date = firebase.firestore.FieldValue.serverTimestamp()\r\n  let convoinfo = {\r\n    convoid,\r\n    creatorid: user.uid,\r\n    creatorname: user.displayName,\r\n    recipientid,\r\n    recipientname,\r\n    typerid: user.uid,\r\n    userref: db.collection(\"users\").doc(recipientid)\r\n    // usertyping: false,\r\n  };\r\n  let customizedconvo = {\r\n    theme: \"https://i.imgur.com/4hzNTTq.png\",\r\n    emoji: \"ðŸ¤—\"\r\n  };\r\n  let nicknames = {\r\n    nickname1: \"\",\r\n    nickname2: \"\"\r\n  };\r\n  let messages = {\r\n    message,\r\n    reaction1: \"\",\r\n    reaction2: \"\",\r\n    msgdate: firebase.firestore.Timestamp.now(),\r\n    msgid: db.collection(\"conversations\").doc().id,\r\n    read: false,\r\n    senderid: user.uid,\r\n    sendername: user.displayName,\r\n    editing: false\r\n  };\r\n  let notificationobj = {\r\n    notifimsg: message,\r\n    notifidate: firebase.firestore.Timestamp.now(),\r\n    read: false,\r\n    sender: user.displayName,\r\n    id: convoid,\r\n    senderid: user.uid,\r\n    notifiid: db.collection('users').doc().id\r\n  }      \r\n    db.collection('notifications').doc(recipientid).update({\r\n      notifications: firebase.firestore.FieldValue.arrayUnion(notificationobj)\r\n    })\r\n  db.collection(\"users\")\r\n    .doc(user.uid)\r\n    .update({\r\n      msgids: firebase.firestore.FieldValue.arrayUnion(convoid),\r\n      msgpersonids: firebase.firestore.FieldValue.arrayUnion(recipientid)\r\n    });\r\n  db.collection(\"users\")\r\n    .doc(recipientid)\r\n    .update({\r\n      msgids: firebase.firestore.FieldValue.arrayUnion(convoid),\r\n      msgpersonids: firebase.firestore.FieldValue.arrayUnion(user.uid)\r\n    });\r\n  db.collection(\"conversations\")\r\n    .doc(convoid)\r\n    .set({\r\n      lastmsgdate : date,\r\n      convoinfo,\r\n      messages: firebase.firestore.FieldValue.arrayUnion(messages),\r\n      customizedconvo,\r\n      nickname1: '',\r\n      notifications1: true,\r\n      nickname2: '',\r\n      notifications2: true,\r\n    });\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}