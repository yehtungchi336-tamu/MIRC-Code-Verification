{"ast":null,"code":"var tabbable = require('tabbable');\n\nvar xtend = require('xtend');\n\nvar activeFocusTraps = function () {\n  var trapQueue = [];\n  return {\n    activateTrap: function (trap) {\n      if (trapQueue.length > 0) {\n        var activeTrap = trapQueue[trapQueue.length - 1];\n\n        if (activeTrap !== trap) {\n          activeTrap.pause();\n        }\n      }\n\n      var trapIndex = trapQueue.indexOf(trap);\n\n      if (trapIndex === -1) {\n        trapQueue.push(trap);\n      } else {\n        // move this existing trap to the front of the queue\n        trapQueue.splice(trapIndex, 1);\n        trapQueue.push(trap);\n      }\n    },\n    deactivateTrap: function (trap) {\n      var trapIndex = trapQueue.indexOf(trap);\n\n      if (trapIndex !== -1) {\n        trapQueue.splice(trapIndex, 1);\n      }\n\n      if (trapQueue.length > 0) {\n        trapQueue[trapQueue.length - 1].unpause();\n      }\n    }\n  };\n}();\n\nfunction focusTrap(element, userOptions) {\n  var doc = document;\n  var container = typeof element === 'string' ? doc.querySelector(element) : element;\n  var config = xtend({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true\n  }, userOptions);\n  var state = {\n    firstTabbableNode: null,\n    lastTabbableNode: null,\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false\n  };\n  var trap = {\n    activate: activate,\n    deactivate: deactivate,\n    pause: pause,\n    unpause: unpause\n  };\n  return trap;\n\n  function activate(activateOptions) {\n    if (state.active) return;\n    updateTabbableNodes();\n    state.active = true;\n    state.paused = false;\n    state.nodeFocusedBeforeActivation = doc.activeElement;\n    var onActivate = activateOptions && activateOptions.onActivate ? activateOptions.onActivate : config.onActivate;\n\n    if (onActivate) {\n      onActivate();\n    }\n\n    addListeners();\n    return trap;\n  }\n\n  function deactivate(deactivateOptions) {\n    if (!state.active) return;\n    removeListeners();\n    state.active = false;\n    state.paused = false;\n    activeFocusTraps.deactivateTrap(trap);\n    var onDeactivate = deactivateOptions && deactivateOptions.onDeactivate !== undefined ? deactivateOptions.onDeactivate : config.onDeactivate;\n\n    if (onDeactivate) {\n      onDeactivate();\n    }\n\n    var returnFocus = deactivateOptions && deactivateOptions.returnFocus !== undefined ? deactivateOptions.returnFocus : config.returnFocusOnDeactivate;\n\n    if (returnFocus) {\n      delay(function () {\n        tryFocus(state.nodeFocusedBeforeActivation);\n      });\n    }\n\n    return trap;\n  }\n\n  function pause() {\n    if (state.paused || !state.active) return;\n    state.paused = true;\n    removeListeners();\n  }\n\n  function unpause() {\n    if (!state.paused || !state.active) return;\n    state.paused = false;\n    addListeners();\n  }\n\n  function addListeners() {\n    if (!state.active) return; // There can be only one listening focus trap at a time\n\n    activeFocusTraps.activateTrap(trap);\n    updateTabbableNodes(); // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n\n    delay(function () {\n      tryFocus(getInitialFocusNode());\n    });\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, true);\n    doc.addEventListener('touchstart', checkPointerDown, true);\n    doc.addEventListener('click', checkClick, true);\n    doc.addEventListener('keydown', checkKey, true);\n    return trap;\n  }\n\n  function removeListeners() {\n    if (!state.active) return;\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n    return trap;\n  }\n\n  function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    var node = optionValue;\n\n    if (!optionValue) {\n      return null;\n    }\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue);\n\n      if (!node) {\n        throw new Error('`' + optionName + '` refers to no known node');\n      }\n    }\n\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n\n      if (!node) {\n        throw new Error('`' + optionName + '` did not return a node');\n      }\n    }\n\n    return node;\n  }\n\n  function getInitialFocusNode() {\n    var node;\n\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (container.contains(doc.activeElement)) {\n      node = doc.activeElement;\n    } else {\n      node = state.firstTabbableNode || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error(\"You can't have a focus-trap without at least one focusable element\");\n    }\n\n    return node;\n  } // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n\n\n  function checkPointerDown(e) {\n    if (container.contains(e.target)) return;\n\n    if (config.clickOutsideDeactivates) {\n      deactivate({\n        returnFocus: !tabbable.isFocusable(e.target)\n      });\n    } else {\n      e.preventDefault();\n    }\n  } // In case focus escapes the trap for some strange reason, pull it back in.\n\n\n  function checkFocusIn(e) {\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (container.contains(e.target) || e.target instanceof Document) {\n      return;\n    }\n\n    e.stopImmediatePropagation();\n    tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n  }\n\n  function checkKey(e) {\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      e.preventDefault();\n      deactivate();\n      return;\n    }\n\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  } // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n\n\n  function checkTab(e) {\n    updateTabbableNodes();\n\n    if (e.shiftKey && e.target === state.firstTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.lastTabbableNode);\n      return;\n    }\n\n    if (!e.shiftKey && e.target === state.lastTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.firstTabbableNode);\n      return;\n    }\n  }\n\n  function checkClick(e) {\n    if (config.clickOutsideDeactivates) return;\n    if (container.contains(e.target)) return;\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function updateTabbableNodes() {\n    var tabbableNodes = tabbable(container);\n    state.firstTabbableNode = tabbableNodes[0] || getInitialFocusNode();\n    state.lastTabbableNode = tabbableNodes[tabbableNodes.length - 1] || getInitialFocusNode();\n  }\n\n  function tryFocus(node) {\n    if (node === doc.activeElement) return;\n\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus();\n    state.mostRecentlyFocusedNode = node;\n\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  }\n}\n\nfunction isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n}\n\nfunction isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n}\n\nfunction isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n}\n\nfunction delay(fn) {\n  return setTimeout(fn, 0);\n}\n\nmodule.exports = focusTrap;","map":{"version":3,"names":["tabbable","require","xtend","activeFocusTraps","trapQueue","activateTrap","trap","length","activeTrap","pause","trapIndex","indexOf","push","splice","deactivateTrap","unpause","focusTrap","element","userOptions","doc","document","container","querySelector","config","returnFocusOnDeactivate","escapeDeactivates","state","firstTabbableNode","lastTabbableNode","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","active","paused","activate","deactivate","activateOptions","updateTabbableNodes","activeElement","onActivate","addListeners","deactivateOptions","removeListeners","onDeactivate","undefined","returnFocus","delay","tryFocus","getInitialFocusNode","addEventListener","checkFocusIn","checkPointerDown","checkClick","checkKey","removeEventListener","getNodeForOption","optionName","optionValue","node","Error","contains","e","target","clickOutsideDeactivates","isFocusable","preventDefault","Document","stopImmediatePropagation","isEscapeEvent","isTabEvent","checkTab","shiftKey","tabbableNodes","focus","isSelectableInput","select","tagName","toLowerCase","key","keyCode","fn","setTimeout","module","exports"],"sources":["/Users/jennifer/Desktop/react-login/node_modules/focus-trap/index.js"],"sourcesContent":["var tabbable = require('tabbable');\nvar xtend = require('xtend');\n\nvar activeFocusTraps = (function() {\n  var trapQueue = [];\n  return {\n    activateTrap: function(trap) {\n      if (trapQueue.length > 0) {\n        var activeTrap = trapQueue[trapQueue.length - 1];\n        if (activeTrap !== trap) {\n          activeTrap.pause();\n        }\n      }\n\n      var trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex === -1) {\n        trapQueue.push(trap);\n      } else {\n        // move this existing trap to the front of the queue\n        trapQueue.splice(trapIndex, 1);\n        trapQueue.push(trap);\n      }\n    },\n\n    deactivateTrap: function(trap) {\n      var trapIndex = trapQueue.indexOf(trap);\n      if (trapIndex !== -1) {\n        trapQueue.splice(trapIndex, 1);\n      }\n\n      if (trapQueue.length > 0) {\n        trapQueue[trapQueue.length - 1].unpause();\n      }\n    }\n  };\n})();\n\nfunction focusTrap(element, userOptions) {\n  var doc = document;\n  var container =\n    typeof element === 'string' ? doc.querySelector(element) : element;\n\n  var config = xtend(\n    {\n      returnFocusOnDeactivate: true,\n      escapeDeactivates: true\n    },\n    userOptions\n  );\n\n  var state = {\n    firstTabbableNode: null,\n    lastTabbableNode: null,\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false\n  };\n\n  var trap = {\n    activate: activate,\n    deactivate: deactivate,\n    pause: pause,\n    unpause: unpause\n  };\n\n  return trap;\n\n  function activate(activateOptions) {\n    if (state.active) return;\n\n    updateTabbableNodes();\n\n    state.active = true;\n    state.paused = false;\n    state.nodeFocusedBeforeActivation = doc.activeElement;\n\n    var onActivate =\n      activateOptions && activateOptions.onActivate\n        ? activateOptions.onActivate\n        : config.onActivate;\n    if (onActivate) {\n      onActivate();\n    }\n\n    addListeners();\n    return trap;\n  }\n\n  function deactivate(deactivateOptions) {\n    if (!state.active) return;\n\n    removeListeners();\n    state.active = false;\n    state.paused = false;\n\n    activeFocusTraps.deactivateTrap(trap);\n\n    var onDeactivate =\n      deactivateOptions && deactivateOptions.onDeactivate !== undefined\n        ? deactivateOptions.onDeactivate\n        : config.onDeactivate;\n    if (onDeactivate) {\n      onDeactivate();\n    }\n\n    var returnFocus =\n      deactivateOptions && deactivateOptions.returnFocus !== undefined\n        ? deactivateOptions.returnFocus\n        : config.returnFocusOnDeactivate;\n    if (returnFocus) {\n      delay(function() {\n        tryFocus(state.nodeFocusedBeforeActivation);\n      });\n    }\n\n    return trap;\n  }\n\n  function pause() {\n    if (state.paused || !state.active) return;\n    state.paused = true;\n    removeListeners();\n  }\n\n  function unpause() {\n    if (!state.paused || !state.active) return;\n    state.paused = false;\n    addListeners();\n  }\n\n  function addListeners() {\n    if (!state.active) return;\n\n    // There can be only one listening focus trap at a time\n    activeFocusTraps.activateTrap(trap);\n\n    updateTabbableNodes();\n\n    // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n    delay(function() {\n      tryFocus(getInitialFocusNode());\n    });\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, true);\n    doc.addEventListener('touchstart', checkPointerDown, true);\n    doc.addEventListener('click', checkClick, true);\n    doc.addEventListener('keydown', checkKey, true);\n\n    return trap;\n  }\n\n  function removeListeners() {\n    if (!state.active) return;\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n\n    return trap;\n  }\n\n  function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n    var node = optionValue;\n    if (!optionValue) {\n      return null;\n    }\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue);\n      if (!node) {\n        throw new Error('`' + optionName + '` refers to no known node');\n      }\n    }\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n      if (!node) {\n        throw new Error('`' + optionName + '` did not return a node');\n      }\n    }\n    return node;\n  }\n\n  function getInitialFocusNode() {\n    var node;\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (container.contains(doc.activeElement)) {\n      node = doc.activeElement;\n    } else {\n      node = state.firstTabbableNode || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error(\n        \"You can't have a focus-trap without at least one focusable element\"\n      );\n    }\n\n    return node;\n  }\n\n  // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n  function checkPointerDown(e) {\n    if (container.contains(e.target)) return;\n    if (config.clickOutsideDeactivates) {\n      deactivate({\n        returnFocus: !tabbable.isFocusable(e.target)\n      });\n    } else {\n      e.preventDefault();\n    }\n  }\n\n  // In case focus escapes the trap for some strange reason, pull it back in.\n  function checkFocusIn(e) {\n    // In Firefox when you Tab out of an iframe the Document is briefly focused.\n    if (container.contains(e.target) || e.target instanceof Document) {\n      return;\n    }\n    e.stopImmediatePropagation();\n    tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n  }\n\n  function checkKey(e) {\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      e.preventDefault();\n      deactivate();\n      return;\n    }\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  }\n\n  // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n  function checkTab(e) {\n    updateTabbableNodes();\n    if (e.shiftKey && e.target === state.firstTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.lastTabbableNode);\n      return;\n    }\n    if (!e.shiftKey && e.target === state.lastTabbableNode) {\n      e.preventDefault();\n      tryFocus(state.firstTabbableNode);\n      return;\n    }\n  }\n\n  function checkClick(e) {\n    if (config.clickOutsideDeactivates) return;\n    if (container.contains(e.target)) return;\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function updateTabbableNodes() {\n    var tabbableNodes = tabbable(container);\n    state.firstTabbableNode = tabbableNodes[0] || getInitialFocusNode();\n    state.lastTabbableNode =\n      tabbableNodes[tabbableNodes.length - 1] || getInitialFocusNode();\n  }\n\n  function tryFocus(node) {\n    if (node === doc.activeElement) return;\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus();\n    state.mostRecentlyFocusedNode = node;\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  }\n}\n\nfunction isSelectableInput(node) {\n  return (\n    node.tagName &&\n    node.tagName.toLowerCase() === 'input' &&\n    typeof node.select === 'function'\n  );\n}\n\nfunction isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n}\n\nfunction isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n}\n\nfunction delay(fn) {\n  return setTimeout(fn, 0);\n}\n\nmodule.exports = focusTrap;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}