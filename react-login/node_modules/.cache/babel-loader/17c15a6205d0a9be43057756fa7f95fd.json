{"ast":null,"code":"import e from \"@firebase/app\";\nimport \"@firebase/logger\";\nimport \"@firebase/util\";\nimport \"@firebase/webchannel-wrapper\";\nimport \"tslib\";\nimport { U as r, Z as t, q as a, n as o, z as s, L as i, W as n, j as p, a as m, X as f, t as c, b as u, c as b, s as l, r as g, o as d, K as h, d as v } from \"./prebuilt-d06d81e8-efab67e4.js\";\nimport { Component as w } from \"@firebase/component\";\nvar I = {\n  Firestore: r,\n  GeoPoint: o,\n  Timestamp: s,\n  Blob: i,\n  Transaction: n,\n  WriteBatch: p,\n  DocumentReference: m,\n  DocumentSnapshot: f,\n  Query: c,\n  QueryDocumentSnapshot: u,\n  QuerySnapshot: b,\n  CollectionReference: l,\n  FieldPath: g,\n  FieldValue: d,\n  setLogLevel: h,\n  CACHE_SIZE_UNLIMITED: v\n};\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Registers the main Firestore build with the components framework.\n * Persistence can be enabled via `firebase.firestore().enablePersistence()`.\n */\nfunction P(e) {\n  !\n  /**\n  * Configures Firestore as part of the Firebase SDK by calling registerService.\n  *\n  * @param firebase - The FirebaseNamespace to register Firestore with\n  * @param firestoreFactory - A factory function that returns a new Firestore\n  *    instance.\n  */\n  function (e, r) {\n    e.INTERNAL.registerComponent(new w(\"firestore\", function (e) {\n      var t = e.getProvider(\"app\").getImmediate();\n      return r(t, e.getProvider(\"auth-internal\"));\n    }, \"PUBLIC\" /* PUBLIC */).setServiceProps(Object.assign({}, I)));\n  }(e, function (e, o) {\n    return new r(e, new t(e, o), new a());\n  }), e.registerVersion(\"@firebase/firestore\", \"2.1.4\");\n}\nP(e);\nexport { P as registerFirestore };","map":{"version":3,"sources":["../../src/config.ts","../../index.ts"],"names":["firestoreNamespace","Firestore","GeoPoint","Timestamp","Blob","Transaction","WriteBatch","DocumentReference","DocumentSnapshot","Query","QueryDocumentSnapshot","QuerySnapshot","CollectionReference","FieldPath","FieldValue","setLogLevel","CACHE_SIZE_UNLIMITED","firebase","firestoreFactory","INTERNAL","registerComponent","Component","app","container","getProvider","getImmediate","setServiceProps","registerFirestore","instance","configureForFirebase","auth","ExpFirebaseFirestore","IndexedDbPersistenceProvider","registerVersion"],"mappings":";;;;;;;IAyCMA,CAAAA,GAAqB;aACzBC,CAAAA;YACAC,CAAAA;aACAC,CAAAA;QACAC,CAAAA;eACAC,CAAAA;cACAC,CAAAA;qBACAC,CAAAA;oBACAC,CAAAA;SACAC,CAAAA;yBACAC,CAAAA;iBACAC,CAAAA;uBACAC,CAAAA;aACAC,CAAAA;cACAC,CAAAA;eACAC,CAAAA;wBACAC;;;;;;;;;;;;;;;;;;;;;;;SCvBcW,CAAAA,CAAkBC,CAAAA,EAAAA;;;;;;;;;YDkChCX,CAAAA,EACAC,CAAAA,EAAAA;IAKCD,CAAAA,CAAgCE,QAAAA,CAASC,iBAAAA,CACxC,IAAIC,CAAAA,CACF,WAAA,EACA,UAAA,CAAA,EAAA;MACE,IAAMC,CAAAA,GAAMC,CAAAA,CAAUC,WAAAA,CAAY,KAAA,CAAA,CAAOC,YAAAA,EAAAA;MACzC,OAAOP,CAAAA,CAAiBI,CAAAA,EAAKC,CAAAA,CAAUC,WAAAA,CAAY,eAAA,CAAA,CAAA;8BAGrDE,eAAAA,CAAAA,MAAAA,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA,EAAqB1B,CAAAA,CAAAA,CAAAA,CAAAA;GC/CzB6B,CACED,CAAAA,EACA,UAACN,CAAAA,EAAKQ,CAAAA,EAAAA;IACJ,OAAA,IAAI7B,CAAAA,CACFqB,CAAAA,EACA,IAAIS,CAAAA,CAAqBT,CAAAA,EAAKQ,CAAAA,CAAAA,EAC9B,IAAIE,CAAAA,GAAAA;MAGVJ,CAAAA,CAASK,eAAAA,CAAAA,qBAAAA,EAAAA,OAAAA,CAAAA;;AAGXN,CAAAA,CAAkBV,CAAAA,CAAAA","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseNamespace } from '@firebase/app-types';\nimport { _FirebaseNamespace } from '@firebase/app-types/private';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Component, ComponentType, Provider } from '@firebase/component';\n\nimport {\n  CACHE_SIZE_UNLIMITED,\n  CollectionReference,\n  DocumentReference,\n  DocumentSnapshot,\n  Firestore,\n  Query,\n  QueryDocumentSnapshot,\n  QuerySnapshot,\n  Transaction,\n  WriteBatch,\n  setLogLevel,\n  Blob,\n  FieldPath,\n  GeoPoint,\n  Timestamp,\n  FieldValue\n} from '../export';\n\nconst firestoreNamespace = {\n  Firestore,\n  GeoPoint,\n  Timestamp,\n  Blob,\n  Transaction,\n  WriteBatch,\n  DocumentReference,\n  DocumentSnapshot,\n  Query,\n  QueryDocumentSnapshot,\n  QuerySnapshot,\n  CollectionReference,\n  FieldPath,\n  FieldValue,\n  setLogLevel,\n  CACHE_SIZE_UNLIMITED\n};\n\n/**\n * Configures Firestore as part of the Firebase SDK by calling registerService.\n *\n * @param firebase - The FirebaseNamespace to register Firestore with\n * @param firestoreFactory - A factory function that returns a new Firestore\n *    instance.\n */\nexport function configureForFirebase(\n  firebase: FirebaseNamespace,\n  firestoreFactory: (\n    app: FirebaseApp,\n    auth: Provider<FirebaseAuthInternalName>\n  ) => Firestore\n): void {\n  (firebase as _FirebaseNamespace).INTERNAL.registerComponent(\n    new Component(\n      'firestore',\n      container => {\n        const app = container.getProvider('app').getImmediate()!;\n        return firestoreFactory(app, container.getProvider('auth-internal'));\n      },\n      ComponentType.PUBLIC\n    ).setServiceProps({ ...firestoreNamespace })\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport { FirebaseNamespace } from '@firebase/app-types';\n\nimport {\n  Firestore,\n  IndexedDbPersistenceProvider,\n  ExpFirebaseFirestore\n} from './export';\nimport { name, version } from './package.json';\nimport { configureForFirebase } from './src/config';\n\nimport './register-module';\n\n/**\n * Registers the main Firestore build with the components framework.\n * Persistence can be enabled via `firebase.firestore().enablePersistence()`.\n */\nexport function registerFirestore(instance: FirebaseNamespace): void {\n  configureForFirebase(\n    instance,\n    (app, auth) =>\n      new Firestore(\n        app,\n        new ExpFirebaseFirestore(app, auth),\n        new IndexedDbPersistenceProvider()\n      )\n  );\n  instance.registerVersion(name, version);\n}\n\nregisterFirestore(firebase);\n"]},"metadata":{},"sourceType":"module"}