{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\n\n// A type of promise-like that resolves synchronously and supports only one observer\n\nvar _iteratorSymbol = /*#__PURE__*/typeof Symbol !== \"undefined\" ? Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\")) : \"@@iterator\";\nvar _asyncIteratorSymbol = /*#__PURE__*/typeof Symbol !== \"undefined\" ? Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\")) : \"@@asyncIterator\";\n\n// Asynchronously call a function and send errors to recovery continuation\nfunction _catch(body, recover) {\n  try {\n    var result = body();\n  } catch (e) {\n    return recover(e);\n  }\n  if (result && result.then) {\n    return result.then(void 0, recover);\n  }\n  return result;\n}\nvar RecordState = Object.freeze({\n  START: 'start',\n  PAUSE: 'pause',\n  STOP: 'stop',\n  NONE: 'none'\n});\nvar AudioReactRecorder = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(AudioReactRecorder, _React$Component);\n  function AudioReactRecorder(props) {\n    var _this;\n    _this = _React$Component.call(this, props) || this;\n    _this.init = function () {\n      try {\n        _this.leftchannel = [];\n        _this.rightchannel = [];\n        _this.recorder = null;\n        _this.recording = false;\n        _this.recordingLength = 0;\n        _this.volume = null;\n        _this.audioInput = null;\n        _this.sampleRate = null;\n        _this.AudioContext = window.AudioContext || window.webkitAudioContext;\n        _this.context = null;\n        _this.analyser = null;\n        _this.canvas = _this.canvasRef.current;\n        _this.canvasCtx = _this.canvas.getContext('2d');\n        _this.stream = null;\n        _this.tested = false;\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n        return Promise.resolve();\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    };\n    _this.getStream = function (constraints) {\n      if (!constraints) {\n        constraints = {\n          audio: true,\n          video: false\n        };\n      }\n      return navigator.mediaDevices.getUserMedia(constraints);\n    };\n    _this.setUpRecording = function () {\n      _this.context = new _this.AudioContext();\n      _this.sampleRate = _this.context.sampleRate;\n      _this.volume = _this.context.createGain();\n      _this.audioInput = _this.context.createMediaStreamSource(_this.stream);\n      _this.analyser = _this.context.createAnalyser();\n      _this.audioInput.connect(_this.analyser);\n      var bufferSize = 2048;\n      _this.recorder = _this.context.createScriptProcessor(bufferSize, 2, 2);\n      _this.analyser.connect(_this.recorder);\n      _this.recorder.connect(_this.context.destination);\n      var self = _assertThisInitialized(_this);\n      _this.recorder.onaudioprocess = function (e) {\n        if (!self.recording) return;\n        var left = e.inputBuffer.getChannelData(0);\n        var right = e.inputBuffer.getChannelData(1);\n        if (!self.tested) {\n          self.tested = true;\n          if (!left.reduce(function (a, b) {\n            return a + b;\n          })) {\n            console.log('Error: There seems to be an issue with your Mic');\n            self.stop();\n            self.stream.getTracks().forEach(function (track) {\n              track.stop();\n            });\n            self.context.close();\n          }\n        }\n        self.leftchannel.push(new Float32Array(left));\n        self.rightchannel.push(new Float32Array(right));\n        self.recordingLength += bufferSize;\n      };\n      _this.visualize();\n    };\n    _this.mergeBuffers = function (channelBuffer, recordingLength) {\n      var result = new Float32Array(recordingLength);\n      var offset = 0;\n      var lng = channelBuffer.length;\n      for (var i = 0; i < lng; i++) {\n        var buffer = channelBuffer[i];\n        result.set(buffer, offset);\n        offset += buffer.length;\n      }\n      return result;\n    };\n    _this.interleave = function (leftChannel, rightChannel) {\n      var length = leftChannel.length + rightChannel.length;\n      var result = new Float32Array(length);\n      var inputIndex = 0;\n      for (var index = 0; index < length;) {\n        result[index++] = leftChannel[inputIndex];\n        result[index++] = rightChannel[inputIndex];\n        inputIndex++;\n      }\n      return result;\n    };\n    _this.writeUTFBytes = function (view, offset, string) {\n      var lng = string.length;\n      for (var i = 0; i < lng; i++) {\n        view.setUint8(offset + i, string.charCodeAt(i));\n      }\n    };\n    _this.visualize = function () {\n      var _this$props = _this.props,\n        backgroundColor = _this$props.backgroundColor,\n        foregroundColor = _this$props.foregroundColor;\n      _this.WIDTH = _this.canvas.width;\n      _this.HEIGHT = _this.canvas.height;\n      _this.CENTERX = _this.canvas.width / 2;\n      _this.CENTERY = _this.canvas.height / 2;\n      if (!_this.analyser) return;\n      _this.analyser.fftSize = 2048;\n      var bufferLength = _this.analyser.fftSize;\n      var dataArray = new Uint8Array(bufferLength);\n      _this.canvasCtx.clearRect(0, 0, _this.WIDTH, _this.HEIGHT);\n      var self = _assertThisInitialized(_this);\n      var draw = function draw() {\n        self.drawVisual = requestAnimationFrame(draw);\n        self.analyser.getByteTimeDomainData(dataArray);\n        self.canvasCtx.fillStyle = backgroundColor;\n        self.canvasCtx.fillRect(0, 0, self.WIDTH, self.HEIGHT);\n        self.canvasCtx.lineWidth = 2;\n        self.canvasCtx.strokeStyle = foregroundColor;\n        self.canvasCtx.beginPath();\n        var sliceWidth = self.WIDTH * 1.0 / bufferLength;\n        var x = 0;\n        for (var i = 0; i < bufferLength; i++) {\n          var v = dataArray[i] / 128.0;\n          var y = v * self.HEIGHT / 2;\n          if (i === 0) {\n            self.canvasCtx.moveTo(x, y);\n          } else {\n            self.canvasCtx.lineTo(x, y);\n          }\n          x += sliceWidth;\n        }\n        self.canvasCtx.lineTo(self.canvas.width, self.canvas.height / 2);\n        self.canvasCtx.stroke();\n      };\n      draw();\n    };\n    _this.setupMic = function () {\n      try {\n        var _temp3 = function _temp3() {\n          _this.setUpRecording();\n        };\n        var _temp4 = _catch(function () {\n          return Promise.resolve(_this.getStream()).then(function (_this$getStream) {\n            window.stream = _this.stream = _this$getStream;\n          });\n        }, function (err) {\n          console.log('Error: Issue getting mic', err);\n        });\n        return Promise.resolve(_temp4 && _temp4.then ? _temp4.then(_temp3) : _temp3(_temp4));\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    };\n    _this.start = function () {\n      try {\n        return Promise.resolve(_this.setupMic()).then(function () {\n          _this.recording = true;\n          _this.leftchannel.length = _this.rightchannel.length = 0;\n          _this.recordingLength = 0;\n        });\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    };\n    _this.stop = function () {\n      var _this$props2 = _this.props,\n        onStop = _this$props2.onStop,\n        type = _this$props2.type;\n      _this.recording = false;\n      _this.closeMic();\n      _this.leftBuffer = _this.mergeBuffers(_this.leftchannel, _this.recordingLength);\n      _this.rightBuffer = _this.mergeBuffers(_this.rightchannel, _this.recordingLength);\n      var interleaved = _this.interleave(_this.leftBuffer, _this.rightBuffer);\n      var buffer = new ArrayBuffer(44 + interleaved.length * 2);\n      var view = new DataView(buffer);\n      _this.writeUTFBytes(view, 0, 'RIFF');\n      view.setUint32(4, 44 + interleaved.length * 2, true);\n      _this.writeUTFBytes(view, 8, 'WAVE');\n      _this.writeUTFBytes(view, 12, 'fmt ');\n      view.setUint32(16, 16, true);\n      view.setUint16(20, 1, true);\n      view.setUint16(22, 2, true);\n      view.setUint32(24, _this.sampleRate, true);\n      view.setUint32(28, _this.sampleRate * 4, true);\n      view.setUint16(32, 4, true);\n      view.setUint16(34, 16, true);\n      _this.writeUTFBytes(view, 36, 'data');\n      view.setUint32(40, interleaved.length * 2, true);\n      var lng = interleaved.length;\n      var index = 44;\n      var volume = 1;\n      for (var i = 0; i < lng; i++) {\n        view.setInt16(index, interleaved[i] * (0x7fff * volume), true);\n        index += 2;\n      }\n      var blob = new Blob([view], {\n        type: type\n      });\n      var audioUrl = URL.createObjectURL(blob);\n      onStop && onStop({\n        blob: blob,\n        url: audioUrl,\n        type: type\n      });\n    };\n    _this.pause = function () {\n      _this.recording = false;\n      _this.closeMic();\n    };\n    _this.resume = function () {\n      _this.setupMic();\n      _this.recording = true;\n    };\n    _this.closeMic = function () {\n      _this.stream.getAudioTracks().forEach(function (track) {\n        track.stop();\n      });\n      _this.audioInput.disconnect(0);\n      _this.analyser.disconnect(0);\n      _this.recorder.disconnect(0);\n    };\n    _this.canvasRef = React.createRef();\n    return _this;\n  }\n  var _proto = AudioReactRecorder.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    this.init();\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    var state = this.props.state;\n    this.checkState(prevProps.state, state);\n  };\n  _proto.checkState = function checkState(previousState) {\n    switch (previousState) {\n      case RecordState.START:\n        this.doIfState(RecordState.PAUSE, this.pause);\n        this.doIfState(RecordState.STOP, this.stop);\n        break;\n      case RecordState.PAUSE:\n        this.doIfState(RecordState.START, this.resume);\n        this.doIfState(RecordState.STOP, this.stop);\n        break;\n      case RecordState.STOP:\n        this.doIfState(RecordState.START, this.start);\n        break;\n      default:\n        this.doIfState(RecordState.START, this.start);\n        break;\n    }\n  };\n  _proto.doIfState = function doIfState(state, cb) {\n    if (this.props.state == state) {\n      cb && cb();\n    }\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {};\n  _proto.render = function render() {\n    var _this$props3 = this.props,\n      canvasWidth = _this$props3.canvasWidth,\n      canvasHeight = _this$props3.canvasHeight;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"audio-react-recorder\"\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: this.canvasRef,\n      width: canvasWidth,\n      height: canvasHeight,\n      className: \"audio-react-recorder__canvas\"\n    }));\n  };\n  return AudioReactRecorder;\n}(React.Component);\nAudioReactRecorder.propTypes = {\n  state: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  backgroundColor: PropTypes.string,\n  foregroundColor: PropTypes.string,\n  canvasWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  canvasHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onStop: PropTypes.func\n};\nAudioReactRecorder.defaultProps = {\n  state: RecordState.NONE,\n  type: 'audio/wav',\n  backgroundColor: 'rgb(200, 200, 200)',\n  foregroundColor: 'rgb(0, 0, 0)',\n  canvasWidth: 500,\n  canvasHeight: 300\n};\nexport default AudioReactRecorder;\nexport { RecordState };","map":{"version":3,"sources":["../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/index.js"],"names":["RecordState","freeze","START","PAUSE","STOP","NONE","AudioReactRecorder","React","Component","props","canvasRef","createRef","propTypes","state","PropTypes","string","type","isRequired","backgroundColor","foregroundColor","canvasWidth","oneOfType","number","canvasHeight","onStop","func","defaultProps","componentDidMount","init","componentDidUpdate","prevProps","prevState","checkState","previousState","doIfState","pause","stop","resume","start","cb","componentWillUnmount","leftchannel","rightchannel","recorder","recording","recordingLength","volume","audioInput","sampleRate","AudioContext","window","webkitAudioContext","context","analyser","canvas","current","canvasCtx","getContext","stream","tested","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","getStream","constraints","audio","video","mediaDevices","setUpRecording","createGain","createMediaStreamSource","createAnalyser","connect","bufferSize","createScriptProcessor","destination","self","onaudioprocess","e","left","inputBuffer","getChannelData","right","reduce","a","b","console","log","getTracks","forEach","track","close","push","Float32Array","visualize","mergeBuffers","channelBuffer","result","offset","lng","length","i","buffer","set","interleave","leftChannel","rightChannel","inputIndex","index","writeUTFBytes","view","setUint8","charCodeAt","WIDTH","width","HEIGHT","height","CENTERX","CENTERY","fftSize","bufferLength","dataArray","Uint8Array","clearRect","draw","drawVisual","requestAnimationFrame","getByteTimeDomainData","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","v","y","moveTo","lineTo","stroke","setupMic","err","closeMic","leftBuffer","rightBuffer","interleaved","ArrayBuffer","DataView","setUint32","setUint16","setInt16","blob","Blob","audioUrl","URL","createObjectURL","url","getAudioTracks","disconnect","render"],"mappings":";;;;;;;;;;;;;;AAAA;;AAoKO,IAAM,eAAe,GAAA,aAAiB,OAAO,MAAM,KAAK,WAAW,GAAI,MAAM,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC,GAAI,YAAY;AA6DvJ,IAAM,oBAAoB,GAAA,aAAiB,OAAO,MAAM,KAAK,WAAW,GAAI,MAAM,CAAC,aAAa,KAAK,MAAM,CAAC,aAAa,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC,GAAI,iBAAiB;;AAgVvL;AACO,SAAS,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE;EACrC,IAAI;IACH,IAAI,MAAM,GAAG,IAAI,EAAE;EACrB,CAAE,CAAC,OAAM,CAAC,EAAE;IACV,OAAO,OAAO,CAAC,CAAC,CAAC;EACnB;EACC,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,EAAE;IAC1B,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;EACrC;EACC,OAAO,MAAM;AACd;ICpjBaA,WAAW,GAAG,MAAM,CAACC,MAAP,CAAc;EACvCC,KAAK,EAAE,OADgC;EAEvCC,KAAK,EAAE,OAFgC;EAGvCC,IAAI,EAAE,MAHiC;EAIvCC,IAAI,EAAE;AAJiC,CAAd,CAApB;IAOcC,kBAAAA,GAAAA,aAAAA,UAAAA,gBAAAA,EAAAA;;EAEnB,SAAA,kBAAA,CAAYG,KAAZ,EAAmB;IAAA,IAAA,KAAA;IACjB,KAAA,GAAA,gBAAA,CAAA,IAAA,CAAA,IAAA,EAAMA,KAAN,CAAA,IAAA,IAAA;IADiB,KAAA,CAmEnBmB,IAnEmB,GAAA,YAAA;MAAA,IAmEA;QACjB,KAAA,CAAKa,WAAL,GAAmB,EAAnB;QACA,KAAA,CAAKC,YAAL,GAAoB,EAApB;QACA,KAAA,CAAKC,QAAL,GAAgB,IAAhB;QACA,KAAA,CAAKC,SAAL,GAAiB,KAAjB;QACA,KAAA,CAAKC,eAAL,GAAuB,CAAvB;QACA,KAAA,CAAKC,MAAL,GAAc,IAAd;QACA,KAAA,CAAKC,UAAL,GAAkB,IAAlB;QACA,KAAA,CAAKC,UAAL,GAAkB,IAAlB;QACA,KAAA,CAAKC,YAAL,GAAoBC,MAAM,CAACD,YAAPC,IAAuBA,MAAM,CAACC,kBAAlD;QACA,KAAA,CAAKC,OAAL,GAAe,IAAf;QACA,KAAA,CAAKC,QAAL,GAAgB,IAAhB;QACA,KAAA,CAAKC,MAAL,GAAc,KAAA,CAAK5C,SAAL,CAAe6C,OAA7B;QACA,KAAA,CAAKC,SAAL,GAAiB,KAAA,CAAKF,MAAL,CAAYG,UAAZ,CAAuB,IAAvB,CAAjB;QACA,KAAA,CAAKC,MAAL,GAAc,IAAd;QACA,KAAA,CAAKC,MAAL,GAAc,KAAd;QAEAC,SAAS,CAACC,YAAVD,GACEA,SAAS,CAACC,YAAVD,IACAA,SAAS,CAACE,kBADVF,IAEAA,SAAS,CAACG,eAHZH;QAjBiB,OAAA,OAAA,CAAA,OAAA,EAAA;MAqBlB,CAxFkB,CAAA,OAAA,CAAA,EAAA;QAAA,OAAA,OAAA,CAAA,MAAA,CAAA,CAAA,CAAA;MAAA;IAAA,CAAA;IAAA,KAAA,CA2FnBI,SA3FmB,GA2FP,UAACC,WAAD,EAAiB;MAC3B,IAAI,CAACA,WAAL,EAAkB;QAChBA,WAAW,GAAG;UAAEC,KAAK,EAAE,IAAT;UAAeC,KAAK,EAAE;QAAtB,CAAdF;MACD;MAED,OAAOL,SAAS,CAACQ,YAAVR,CAAuBC,YAAvBD,CAAoCK,WAApCL,CAAP;IACD,CAjGkB;IAAA,KAAA,CAmGnBS,cAnGmB,GAmGF,YAAM;MACrB,KAAA,CAAKjB,OAAL,GAAe,IAAI,KAAA,CAAKH,YAAT,EAAf;MACA,KAAA,CAAKD,UAAL,GAAkB,KAAA,CAAKI,OAAL,CAAaJ,UAA/B;MAGA,KAAA,CAAKF,MAAL,GAAc,KAAA,CAAKM,OAAL,CAAakB,UAAb,EAAd;MAGA,KAAA,CAAKvB,UAAL,GAAkB,KAAA,CAAKK,OAAL,CAAamB,uBAAb,CAAqC,KAAA,CAAKb,MAA1C,CAAlB;MAGA,KAAA,CAAKL,QAAL,GAAgB,KAAA,CAAKD,OAAL,CAAaoB,cAAb,EAAhB;MAGA,KAAA,CAAKzB,UAAL,CAAgB0B,OAAhB,CAAwB,KAAA,CAAKpB,QAA7B,CAAA;MAKA,IAAIqB,UAAU,GAAG,IAAjB;MACA,KAAA,CAAK/B,QAAL,GAAgB,KAAA,CAAKS,OAAL,CAAauB,qBAAb,CAAmCD,UAAnC,EAA+C,CAA/C,EAAkD,CAAlD,CAAhB;MAKA,KAAA,CAAKrB,QAAL,CAAcoB,OAAd,CAAsB,KAAA,CAAK9B,QAA3B,CAAA;MAGA,KAAA,CAAKA,QAAL,CAAc8B,OAAd,CAAsB,KAAA,CAAKrB,OAAL,CAAawB,WAAnC,CAAA;MAEA,IAAMC,IAAI,GAAA,sBAAA,CAAA,KAAA,CAAV;MACA,KAAA,CAAKlC,QAAL,CAAcmC,cAAd,GAA+B,UAAUC,CAAV,EAAa;QAE1C,IAAI,CAACF,IAAI,CAACjC,SAAV,EAAqB;QAErB,IAAIoC,IAAI,GAAGD,CAAC,CAACE,WAAFF,CAAcG,cAAdH,CAA6B,CAA7BA,CAAX;QACA,IAAII,KAAK,GAAGJ,CAAC,CAACE,WAAFF,CAAcG,cAAdH,CAA6B,CAA7BA,CAAZ;QACA,IAAI,CAACF,IAAI,CAAClB,MAAV,EAAkB;UAChBkB,IAAI,CAAClB,MAALkB,GAAc,IAAdA;UAEA,IAAI,CAAC,IAAI,CAACO,MAAL,CAAY,UAACC,CAAD,EAAIC,CAAJ,EAAA;YAAA,OAAUD,CAAC,GAAGC,CAAd;UAAA,CAAZ,CAAL,EAAmC;YACjCC,OAAO,CAACC,GAARD,CAAY,iDAAZA,CAAAA;YAEAV,IAAI,CAACzC,IAALyC,EAAAA;YACAA,IAAI,CAACnB,MAALmB,CAAYY,SAAZZ,EAAAA,CAAwBa,OAAxBb,CAAgC,UAAUc,KAAV,EAAiB;cAC/CA,KAAK,CAACvD,IAANuD,EAAAA;YACD,CAFDd,CAAAA;YAGAA,IAAI,CAACzB,OAALyB,CAAae,KAAbf,EAAAA;UACD;QACF;QAEDA,IAAI,CAACpC,WAALoC,CAAiBgB,IAAjBhB,CAAsB,IAAIiB,YAAJ,CAAiBd,IAAjB,CAAtBH,CAAAA;QACAA,IAAI,CAACnC,YAALmC,CAAkBgB,IAAlBhB,CAAuB,IAAIiB,YAAJ,CAAiBX,KAAjB,CAAvBN,CAAAA;QACAA,IAAI,CAAChC,eAALgC,IAAwBH,UAAxBG;MACD,CAvBD;MAwBA,KAAA,CAAKkB,SAAL,EAAA;IACD,CA3JkB;IAAA,KAAA,CA6JnBC,YA7JmB,GA6JJ,UAACC,aAAD,EAAgBpD,eAAhB,EAAoC;MACjD,IAAIqD,MAAM,GAAG,IAAIJ,YAAJ,CAAiBjD,eAAjB,CAAb;MACA,IAAIsD,MAAM,GAAG,CAAb;MACA,IAAIC,GAAG,GAAGH,aAAa,CAACI,MAAxB;MACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;QAC5B,IAAIC,MAAM,GAAGN,aAAa,CAACK,CAAD,CAA1B;QACAJ,MAAM,CAACM,GAAPN,CAAWK,MAAXL,EAAmBC,MAAnBD,CAAAA;QACAC,MAAM,IAAII,MAAM,CAACF,MAAjBF;MACD;MACD,OAAOD,MAAP;IACD,CAvKkB;IAAA,KAAA,CAyKnBO,UAzKmB,GAyKN,UAACC,WAAD,EAAcC,YAAd,EAA+B;MAC1C,IAAIN,MAAM,GAAGK,WAAW,CAACL,MAAZK,GAAqBC,YAAY,CAACN,MAA/C;MACA,IAAIH,MAAM,GAAG,IAAIJ,YAAJ,CAAiBO,MAAjB,CAAb;MAEA,IAAIO,UAAU,GAAG,CAAjB;MAEA,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGR,MAA5B,GAAsC;QACpCH,MAAM,CAACW,KAAK,EAAN,CAANX,GAAkBQ,WAAW,CAACE,UAAD,CAA7BV;QACAA,MAAM,CAACW,KAAK,EAAN,CAANX,GAAkBS,YAAY,CAACC,UAAD,CAA9BV;QACAU,UAAU,EAAA;MACX;MACD,OAAOV,MAAP;IACD,CArLkB;IAAA,KAAA,CAuLnBY,aAvLmB,GAuLH,UAACC,IAAD,EAAOZ,MAAP,EAAepF,MAAf,EAA0B;MACxC,IAAIqF,GAAG,GAAGrF,MAAM,CAACsF,MAAjB;MACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;QAC5BS,IAAI,CAACC,QAALD,CAAcZ,MAAM,GAAGG,CAAvBS,EAA0BhG,MAAM,CAACkG,UAAPlG,CAAkBuF,CAAlBvF,CAA1BgG,CAAAA;MACD;IACF,CA5LkB;IAAA,KAAA,CA8LnBhB,SA9LmB,GA8LP,YAAM;MAAA,IAAA,WAAA,GAC6B,KAAA,CAAKtF,KADlC;QACRS,eADQ,GAAA,WAAA,CACRA,eADQ;QACSC,eADT,GAAA,WAAA,CACSA,eADT;MAGhB,KAAA,CAAK+F,KAAL,GAAa,KAAA,CAAK5D,MAAL,CAAY6D,KAAzB;MACA,KAAA,CAAKC,MAAL,GAAc,KAAA,CAAK9D,MAAL,CAAY+D,MAA1B;MACA,KAAA,CAAKC,OAAL,GAAe,KAAA,CAAKhE,MAAL,CAAY6D,KAAZ,GAAoB,CAAnC;MACA,KAAA,CAAKI,OAAL,GAAe,KAAA,CAAKjE,MAAL,CAAY+D,MAAZ,GAAqB,CAApC;MAEA,IAAI,CAAC,KAAA,CAAKhE,QAAV,EAAoB;MAEpB,KAAA,CAAKA,QAAL,CAAcmE,OAAd,GAAwB,IAAxB;MACA,IAAMC,YAAY,GAAG,KAAA,CAAKpE,QAAL,CAAcmE,OAAnC;MACA,IAAME,SAAS,GAAG,IAAIC,UAAJ,CAAeF,YAAf,CAAlB;MAEA,KAAA,CAAKjE,SAAL,CAAeoE,SAAf,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,KAAA,CAAKV,KAApC,EAA2C,KAAA,CAAKE,MAAhD,CAAA;MAGA,IAAIvC,IAAI,GAAA,sBAAA,CAAA,KAAA,CAAR;MACA,IAAMgD,IAAI,GAAG,SAAPA,IAAO,GAAY;QACvBhD,IAAI,CAACiD,UAALjD,GAAkBkD,qBAAqB,CAACF,IAAD,CAAvChD;QAEAA,IAAI,CAACxB,QAALwB,CAAcmD,qBAAdnD,CAAoC6C,SAApC7C,CAAAA;QAEAA,IAAI,CAACrB,SAALqB,CAAeoD,SAAfpD,GAA2B3D,eAA3B2D;QACAA,IAAI,CAACrB,SAALqB,CAAeqD,QAAfrD,CAAwB,CAAxBA,EAA2B,CAA3BA,EAA8BA,IAAI,CAACqC,KAAnCrC,EAA0CA,IAAI,CAACuC,MAA/CvC,CAAAA;QAEAA,IAAI,CAACrB,SAALqB,CAAesD,SAAftD,GAA2B,CAA3BA;QACAA,IAAI,CAACrB,SAALqB,CAAeuD,WAAfvD,GAA6B1D,eAA7B0D;QAEAA,IAAI,CAACrB,SAALqB,CAAewD,SAAfxD,EAAAA;QAEA,IAAIyD,UAAU,GAAIzD,IAAI,CAACqC,KAALrC,GAAa,GAAd,GAAqB4C,YAAtC;QACA,IAAIc,CAAC,GAAG,CAAR;QAEA,KAAK,IAAIjC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmB,YAApB,EAAkCnB,CAAC,EAAnC,EAAuC;UACrC,IAAIkC,CAAC,GAAGd,SAAS,CAACpB,CAAD,CAAToB,GAAe,KAAvB;UACA,IAAIe,CAAC,GAAID,CAAC,GAAG3D,IAAI,CAACuC,MAAV,GAAoB,CAA5B;UAEA,IAAId,CAAC,KAAK,CAAV,EAAa;YACXzB,IAAI,CAACrB,SAALqB,CAAe6D,MAAf7D,CAAsB0D,CAAtB1D,EAAyB4D,CAAzB5D,CAAAA;UACD,CAFD,MAEO;YACLA,IAAI,CAACrB,SAALqB,CAAe8D,MAAf9D,CAAsB0D,CAAtB1D,EAAyB4D,CAAzB5D,CAAAA;UACD;UAED0D,CAAC,IAAID,UAALC;QACD;QAED1D,IAAI,CAACrB,SAALqB,CAAe8D,MAAf9D,CAAsBA,IAAI,CAACvB,MAALuB,CAAYsC,KAAlCtC,EAAyCA,IAAI,CAACvB,MAALuB,CAAYwC,MAAZxC,GAAqB,CAA9DA,CAAAA;QACAA,IAAI,CAACrB,SAALqB,CAAe+D,MAAf/D,EAAAA;MACD,CA/BD;MAiCAgD,IAAI,EAAA;IACL,CAlPkB;IAAA,KAAA,CAoPnBgB,QApPmB,GAAA,YAAA;MAAA,IAoPI;QAAA,IAAA,MAAA,GAAA,SAAA,MAAA,GAAA;UAUrB,KAAA,CAAKxE,cAAL,EAAA;QAVqB,CAAA;QAAA,IAAA,MAAA,GAAA,MAAA,CAAA,YAEjB;UAAA,OAAA,OAAA,CAAA,OAAA,CACkC,KAAA,CAAKL,SAAL,EADlC,CAAA,CAAA,IAAA,CAAA,UAAA,eAAA,EAAA;YACFd,MAAM,CAACQ,MAAPR,GAAgB,KAAA,CAAKQ,MAAL,GAAA,eAAhBR;UADE,CAAA,CAAA;QAGH,CALoB,EAAA,UAKZ4F,GALY,EAKP;UAEZvD,OAAO,CAACC,GAARD,CAAY,0BAAZA,EAAwCuD,GAAxCvD,CAAAA;QACD,CARoB,CAAA;QAAA,OAAA,OAAA,CAAA,OAAA,CAAA,MAAA,IAAA,MAAA,CAAA,IAAA,GAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,GAAA,MAAA,CAAA,MAAA,CAAA,CAAA;MAWtB,CA/PkB,CAAA,OAAA,CAAA,EAAA;QAAA,OAAA,OAAA,CAAA,MAAA,CAAA,CAAA,CAAA;MAAA;IAAA,CAAA;IAAA,KAAA,CAiQnBjD,KAjQmB,GAAA,YAAA;MAAA,IAiQC;QAAA,OAAA,OAAA,CAAA,OAAA,CACZ,KAAA,CAAKuG,QAAL,EADY,CAAA,CAAA,IAAA,CAAA,YAAA;UAGlB,KAAA,CAAKjG,SAAL,GAAiB,IAAjB;UAEA,KAAA,CAAKH,WAAL,CAAiB4D,MAAjB,GAA0B,KAAA,CAAK3D,YAAL,CAAkB2D,MAAlB,GAA2B,CAArD;UACA,KAAA,CAAKxD,eAAL,GAAuB,CAAvB;QANkB,CAAA,CAAA;MAOnB,CAxQkB,CAAA,OAAA,CAAA,EAAA;QAAA,OAAA,OAAA,CAAA,MAAA,CAAA,CAAA,CAAA;MAAA;IAAA,CAAA;IAAA,KAAA,CA0QnBT,IA1QmB,GA0QZ,YAAM;MAAA,IAAA,YAAA,GACc,KAAA,CAAK3B,KADnB;QACHe,MADG,GAAA,YAAA,CACHA,MADG;QACKR,IADL,GAAA,YAAA,CACKA,IADL;MAGX,KAAA,CAAK4B,SAAL,GAAiB,KAAjB;MACA,KAAA,CAAKmG,QAAL,EAAA;MAGA,KAAA,CAAKC,UAAL,GAAkB,KAAA,CAAKhD,YAAL,CAAkB,KAAA,CAAKvD,WAAvB,EAAoC,KAAA,CAAKI,eAAzC,CAAlB;MACA,KAAA,CAAKoG,WAAL,GAAmB,KAAA,CAAKjD,YAAL,CACjB,KAAA,CAAKtD,YADY,EAEjB,KAAA,CAAKG,eAFY,CAAnB;MAKA,IAAIqG,WAAW,GAAG,KAAA,CAAKzC,UAAL,CAAgB,KAAA,CAAKuC,UAArB,EAAiC,KAAA,CAAKC,WAAtC,CAAlB;MAOA,IAAI1C,MAAM,GAAG,IAAI4C,WAAJ,CAAgB,EAAA,GAAKD,WAAW,CAAC7C,MAAZ6C,GAAqB,CAA1C,CAAb;MACA,IAAInC,IAAI,GAAG,IAAIqC,QAAJ,CAAa7C,MAAb,CAAX;MAGA,KAAA,CAAKO,aAAL,CAAmBC,IAAnB,EAAyB,CAAzB,EAA4B,MAA5B,CAAA;MACAA,IAAI,CAACsC,SAALtC,CAAe,CAAfA,EAAkB,EAAA,GAAKmC,WAAW,CAAC7C,MAAZ6C,GAAqB,CAA5CnC,EAA+C,IAA/CA,CAAAA;MACA,KAAA,CAAKD,aAAL,CAAmBC,IAAnB,EAAyB,CAAzB,EAA4B,MAA5B,CAAA;MAEA,KAAA,CAAKD,aAAL,CAAmBC,IAAnB,EAAyB,EAAzB,EAA6B,MAA7B,CAAA;MACAA,IAAI,CAACsC,SAALtC,CAAe,EAAfA,EAAmB,EAAnBA,EAAuB,IAAvBA,CAAAA;MACAA,IAAI,CAACuC,SAALvC,CAAe,EAAfA,EAAmB,CAAnBA,EAAsB,IAAtBA,CAAAA;MAEAA,IAAI,CAACuC,SAALvC,CAAe,EAAfA,EAAmB,CAAnBA,EAAsB,IAAtBA,CAAAA;MACAA,IAAI,CAACsC,SAALtC,CAAe,EAAfA,EAAmB,KAAA,CAAK/D,UAAxB+D,EAAoC,IAApCA,CAAAA;MACAA,IAAI,CAACsC,SAALtC,CAAe,EAAfA,EAAmB,KAAA,CAAK/D,UAAL,GAAkB,CAArC+D,EAAwC,IAAxCA,CAAAA;MACAA,IAAI,CAACuC,SAALvC,CAAe,EAAfA,EAAmB,CAAnBA,EAAsB,IAAtBA,CAAAA;MACAA,IAAI,CAACuC,SAALvC,CAAe,EAAfA,EAAmB,EAAnBA,EAAuB,IAAvBA,CAAAA;MAEA,KAAA,CAAKD,aAAL,CAAmBC,IAAnB,EAAyB,EAAzB,EAA6B,MAA7B,CAAA;MACAA,IAAI,CAACsC,SAALtC,CAAe,EAAfA,EAAmBmC,WAAW,CAAC7C,MAAZ6C,GAAqB,CAAxCnC,EAA2C,IAA3CA,CAAAA;MAGA,IAAIX,GAAG,GAAG8C,WAAW,CAAC7C,MAAtB;MACA,IAAIQ,KAAK,GAAG,EAAZ;MACA,IAAI/D,MAAM,GAAG,CAAb;MACA,KAAK,IAAIwD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;QAC5BS,IAAI,CAACwC,QAALxC,CAAcF,KAAdE,EAAqBmC,WAAW,CAAC5C,CAAD,CAAX4C,IAAkB,MAAA,GAASpG,MAA3BoG,CAArBnC,EAAyD,IAAzDA,CAAAA;QACAF,KAAK,IAAI,CAATA;MACD;MAGD,IAAM2C,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAAC1C,IAAD,CAAT,EAAiB;QAAE/F,IAAI,EAAEA;MAAR,CAAjB,CAAb;MACA,IAAM0I,QAAQ,GAAGC,GAAG,CAACC,eAAJD,CAAoBH,IAApBG,CAAjB;MAEAnI,MAAM,IACJA,MAAM,CAAC;QACLgI,IAAI,EAAEA,IADD;QAELK,GAAG,EAAEH,QAFA;QAGL1I,IAAI,EAAJA;MAHK,CAAD,CADRQ;IAMD,CAtUkB;IAAA,KAAA,CAwUnBW,KAxUmB,GAwUX,YAAM;MACZ,KAAA,CAAKS,SAAL,GAAiB,KAAjB;MACA,KAAA,CAAKmG,QAAL,EAAA;IACD,CA3UkB;IAAA,KAAA,CA6UnB1G,MA7UmB,GA6UV,YAAM;MACb,KAAA,CAAKwG,QAAL,EAAA;MACA,KAAA,CAAKjG,SAAL,GAAiB,IAAjB;IACD,CAhVkB;IAAA,KAAA,CAkVnBmG,QAlVmB,GAkVR,YAAM;MACf,KAAA,CAAKrF,MAAL,CAAYoG,cAAZ,EAAA,CAA6BpE,OAA7B,CAAqC,UAACC,KAAD,EAAW;QAC9CA,KAAK,CAACvD,IAANuD,EAAAA;MACD,CAFD,CAAA;MAGA,KAAA,CAAK5C,UAAL,CAAgBgH,UAAhB,CAA2B,CAA3B,CAAA;MACA,KAAA,CAAK1G,QAAL,CAAc0G,UAAd,CAAyB,CAAzB,CAAA;MACA,KAAA,CAAKpH,QAAL,CAAcoH,UAAd,CAAyB,CAAzB,CAAA;IACD,CAzVkB;IAGjB,KAAA,CAAKrJ,SAAL,GAAiBH,KAAK,CAACI,SAANJ,EAAjB;IAHiB,OAAA,KAAA;EAIlB;;SAwBDoB,iBAAAA,GAAAA,SAAAA,iBAAAA,GAAoB;IAClB,IAAA,CAAKC,IAAL,EAAA;EACD,CAAA;SAEDC,kBAAAA,GAAAA,SAAAA,kBAAAA,CAAmBC,SAAnBD,EAA8BE,SAA9BF,EAAyC;IAAA,IAC/BhB,KAD+B,GACrB,IAAA,CAAKJ,KADgB,CAC/BI,KAD+B;IAGvC,IAAA,CAAKmB,UAAL,CAAgBF,SAAS,CAACjB,KAA1B,EAAiCA,KAAjC,CAAA;EACD,CAAA;SAEDmB,UAAAA,GAAAA,SAAAA,UAAAA,CAAWC,aAAXD,EAA0B;IACxB,QAAQC,aAAR;MACE,KAAKjC,WAAW,CAACE,KAAjB;QACE,IAAA,CAAKgC,SAAL,CAAelC,WAAW,CAACG,KAA3B,EAAkC,IAAA,CAAKgC,KAAvC,CAAA;QACA,IAAA,CAAKD,SAAL,CAAelC,WAAW,CAACI,IAA3B,EAAiC,IAAA,CAAKgC,IAAtC,CAAA;QACA;MACF,KAAKpC,WAAW,CAACG,KAAjB;QACE,IAAA,CAAK+B,SAAL,CAAelC,WAAW,CAACE,KAA3B,EAAkC,IAAA,CAAKmC,MAAvC,CAAA;QACA,IAAA,CAAKH,SAAL,CAAelC,WAAW,CAACI,IAA3B,EAAiC,IAAA,CAAKgC,IAAtC,CAAA;QACA;MACF,KAAKpC,WAAW,CAACI,IAAjB;QACE,IAAA,CAAK8B,SAAL,CAAelC,WAAW,CAACE,KAA3B,EAAkC,IAAA,CAAKoC,KAAvC,CAAA;QACA;MACF;QACE,IAAA,CAAKJ,SAAL,CAAelC,WAAW,CAACE,KAA3B,EAAkC,IAAA,CAAKoC,KAAvC,CAAA;QACA;IAAA;EAEL,CAAA;SAEDJ,SAAAA,GAAAA,SAAAA,SAAAA,CAAUrB,KAAVqB,EAAiBK,EAAjBL,EAAqB;IACnB,IAAI,IAAA,CAAKzB,KAAL,CAAWI,KAAX,IAAoBA,KAAxB,EAA+B;MAC7B0B,EAAE,IAAIA,EAAE,EAARA;IACD;EACF,CAAA;SAGDC,oBAAAA,GAAAA,SAAAA,oBAAAA,GAAuB,CAAA,CAAA;SA4RvBwH,MAAAA,GAAAA,SAAAA,MAAAA,GAAS;IAAA,IAAA,YAAA,GAC+B,IAAA,CAAKvJ,KADpC;MACCW,WADD,GAAA,YAAA,CACCA,WADD;MACcG,YADd,GAAA,YAAA,CACcA,YADd;IAGP,OAAA,aACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;MAAK,SAAS,EAAC;IAAf,CAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;MACE,GAAG,EAAE,IAAA,CAAKb,SADZ;MAEE,KAAK,EAAEU,WAFT;MAGE,MAAM,EAAEG,YAHV;MAIE,SAAS,EAAC;IAJZ,CAAA,CADF,CADF;EAUD,CAAA;;EA3W6ChB,KAAK,CAACC,SAAAA,CAAAA;AAAjCF,kBAAAA,CASZM,SAAAA,GAAY;EACjBC,KAAK,EAAEC,SAAS,CAACC,MADA;EAEjBC,IAAI,EAAEF,SAAS,CAACC,MAAVD,CAAiBG,UAFN;EAGjBC,eAAe,EAAEJ,SAAS,CAACC,MAHV;EAIjBI,eAAe,EAAEL,SAAS,CAACC,MAJV;EAKjBK,WAAW,EAAEN,SAAS,CAACO,SAAVP,CAAoB,CAACA,SAAS,CAACC,MAAX,EAAmBD,SAAS,CAACQ,MAA7B,CAApBR,CALI;EAMjBS,YAAY,EAAET,SAAS,CAACO,SAAVP,CAAoB,CAACA,SAAS,CAACC,MAAX,EAAmBD,SAAS,CAACQ,MAA7B,CAApBR,CANG;EASjBU,MAAM,EAAEV,SAAS,CAACW;AATD,CAAA;AATAnB,kBAAAA,CAoBZoB,YAAAA,GAAe;EACpBb,KAAK,EAAEb,WAAW,CAACK,IADC;EAEpBW,IAAI,EAAE,WAFc;EAGpBE,eAAe,EAAE,oBAHG;EAIpBC,eAAe,EAAE,cAJG;EAKpBC,WAAW,EAAE,GALO;EAMpBG,YAAY,EAAE;AANM,CAAA","sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import React from 'react'\r\nimport styles from './styles.module.css'\r\nimport PropTypes from 'prop-types' // ES6\r\n\r\n// export const AudioReactRecorder = ({ text }) => {\r\n//   return <div className={styles.test}>BULLSWEET: {text}</div>\r\n// }\r\n\r\nexport const RecordState = Object.freeze({\r\n  START: 'start',\r\n  PAUSE: 'pause',\r\n  STOP: 'stop',\r\n  NONE: 'none'\r\n})\r\n\r\nexport default class AudioReactRecorder extends React.Component {\r\n  //0 - constructor\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.canvasRef = React.createRef()\r\n  }\r\n\r\n  //TODO: add the props definitions\r\n  static propTypes = {\r\n    state: PropTypes.string,\r\n    type: PropTypes.string.isRequired,\r\n    backgroundColor: PropTypes.string,\r\n    foregroundColor: PropTypes.string,\r\n    canvasWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    canvasHeight: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n\r\n    //method calls\r\n    onStop: PropTypes.func\r\n  }\r\n  static defaultProps = {\r\n    state: RecordState.NONE,\r\n    type: 'audio/wav',\r\n    backgroundColor: 'rgb(200, 200, 200)',\r\n    foregroundColor: 'rgb(0, 0, 0)',\r\n    canvasWidth: 500,\r\n    canvasHeight: 300\r\n  }\r\n\r\n  //2 - mount\r\n  componentDidMount() {\r\n    this.init()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { state } = this.props\r\n\r\n    this.checkState(prevProps.state, state)\r\n  }\r\n\r\n  checkState(previousState) {\r\n    switch (previousState) {\r\n      case RecordState.START:\r\n        this.doIfState(RecordState.PAUSE, this.pause)\r\n        this.doIfState(RecordState.STOP, this.stop)\r\n        break\r\n      case RecordState.PAUSE:\r\n        this.doIfState(RecordState.START, this.resume)\r\n        this.doIfState(RecordState.STOP, this.stop)\r\n        break\r\n      case RecordState.STOP:\r\n        this.doIfState(RecordState.START, this.start)\r\n        break\r\n      default:\r\n        this.doIfState(RecordState.START, this.start)\r\n        break\r\n    }\r\n  }\r\n\r\n  doIfState(state, cb) {\r\n    if (this.props.state == state) {\r\n      cb && cb()\r\n    }\r\n  }\r\n\r\n  //TODO: destroy request animation frame\r\n  componentWillUnmount() {}\r\n\r\n  //TODO: change to state some conditionals\r\n  init = async () => {\r\n    this.leftchannel = []\r\n    this.rightchannel = []\r\n    this.recorder = null\r\n    this.recording = false\r\n    this.recordingLength = 0\r\n    this.volume = null\r\n    this.audioInput = null\r\n    this.sampleRate = null\r\n    this.AudioContext = window.AudioContext || window.webkitAudioContext\r\n    this.context = null\r\n    this.analyser = null\r\n    this.canvas = this.canvasRef.current\r\n    this.canvasCtx = this.canvas.getContext('2d')\r\n    this.stream = null\r\n    this.tested = false\r\n\r\n    navigator.getUserMedia =\r\n      navigator.getUserMedia ||\r\n      navigator.webkitGetUserMedia ||\r\n      navigator.mozGetUserMedia\r\n  }\r\n\r\n  //get mic stream\r\n  getStream = (constraints) => {\r\n    if (!constraints) {\r\n      constraints = { audio: true, video: false }\r\n    }\r\n\r\n    return navigator.mediaDevices.getUserMedia(constraints)\r\n  }\r\n\r\n  setUpRecording = () => {\r\n    this.context = new this.AudioContext()\r\n    this.sampleRate = this.context.sampleRate\r\n\r\n    // creates a gain node\r\n    this.volume = this.context.createGain()\r\n\r\n    // creates an audio node from teh microphone incoming stream\r\n    this.audioInput = this.context.createMediaStreamSource(this.stream)\r\n\r\n    // Create analyser\r\n    this.analyser = this.context.createAnalyser()\r\n\r\n    // connect audio input to the analyser\r\n    this.audioInput.connect(this.analyser)\r\n\r\n    // connect analyser to the volume control\r\n    // analyser.connect(volume);\r\n\r\n    let bufferSize = 2048\r\n    this.recorder = this.context.createScriptProcessor(bufferSize, 2, 2)\r\n\r\n    // we connect the volume control to the processor\r\n    // volume.connect(recorder);\r\n\r\n    this.analyser.connect(this.recorder)\r\n\r\n    // finally connect the processor to the output\r\n    this.recorder.connect(this.context.destination)\r\n\r\n    const self = this\r\n    this.recorder.onaudioprocess = function (e) {\r\n      // Check\r\n      if (!self.recording) return\r\n      // Do something with the data, i.e Convert this to WAV\r\n      let left = e.inputBuffer.getChannelData(0)\r\n      let right = e.inputBuffer.getChannelData(1)\r\n      if (!self.tested) {\r\n        self.tested = true\r\n        // if this reduces to 0 we are not getting any sound\r\n        if (!left.reduce((a, b) => a + b)) {\r\n          console.log('Error: There seems to be an issue with your Mic')\r\n          // clean up;\r\n          self.stop()\r\n          self.stream.getTracks().forEach(function (track) {\r\n            track.stop()\r\n          })\r\n          self.context.close()\r\n        }\r\n      }\r\n      // we clone the samples\r\n      self.leftchannel.push(new Float32Array(left))\r\n      self.rightchannel.push(new Float32Array(right))\r\n      self.recordingLength += bufferSize\r\n    }\r\n    this.visualize()\r\n  }\r\n\r\n  mergeBuffers = (channelBuffer, recordingLength) => {\r\n    let result = new Float32Array(recordingLength)\r\n    let offset = 0\r\n    let lng = channelBuffer.length\r\n    for (let i = 0; i < lng; i++) {\r\n      let buffer = channelBuffer[i]\r\n      result.set(buffer, offset)\r\n      offset += buffer.length\r\n    }\r\n    return result\r\n  }\r\n\r\n  interleave = (leftChannel, rightChannel) => {\r\n    let length = leftChannel.length + rightChannel.length\r\n    let result = new Float32Array(length)\r\n\r\n    let inputIndex = 0\r\n\r\n    for (let index = 0; index < length; ) {\r\n      result[index++] = leftChannel[inputIndex]\r\n      result[index++] = rightChannel[inputIndex]\r\n      inputIndex++\r\n    }\r\n    return result\r\n  }\r\n\r\n  writeUTFBytes = (view, offset, string) => {\r\n    let lng = string.length\r\n    for (let i = 0; i < lng; i++) {\r\n      view.setUint8(offset + i, string.charCodeAt(i))\r\n    }\r\n  }\r\n\r\n  visualize = () => {\r\n    const { backgroundColor, foregroundColor } = this.props\r\n\r\n    this.WIDTH = this.canvas.width\r\n    this.HEIGHT = this.canvas.height\r\n    this.CENTERX = this.canvas.width / 2\r\n    this.CENTERY = this.canvas.height / 2\r\n\r\n    if (!this.analyser) return\r\n\r\n    this.analyser.fftSize = 2048\r\n    const bufferLength = this.analyser.fftSize\r\n    const dataArray = new Uint8Array(bufferLength)\r\n\r\n    this.canvasCtx.clearRect(0, 0, this.WIDTH, this.HEIGHT)\r\n\r\n    //reference this using self\r\n    let self = this\r\n    const draw = function () {\r\n      self.drawVisual = requestAnimationFrame(draw)\r\n\r\n      self.analyser.getByteTimeDomainData(dataArray)\r\n\r\n      self.canvasCtx.fillStyle = backgroundColor\r\n      self.canvasCtx.fillRect(0, 0, self.WIDTH, self.HEIGHT)\r\n\r\n      self.canvasCtx.lineWidth = 2\r\n      self.canvasCtx.strokeStyle = foregroundColor\r\n\r\n      self.canvasCtx.beginPath()\r\n\r\n      var sliceWidth = (self.WIDTH * 1.0) / bufferLength\r\n      var x = 0\r\n\r\n      for (var i = 0; i < bufferLength; i++) {\r\n        var v = dataArray[i] / 128.0\r\n        var y = (v * self.HEIGHT) / 2\r\n\r\n        if (i === 0) {\r\n          self.canvasCtx.moveTo(x, y)\r\n        } else {\r\n          self.canvasCtx.lineTo(x, y)\r\n        }\r\n\r\n        x += sliceWidth\r\n      }\r\n\r\n      self.canvasCtx.lineTo(self.canvas.width, self.canvas.height / 2)\r\n      self.canvasCtx.stroke()\r\n    }\r\n\r\n    draw()\r\n  }\r\n\r\n  setupMic = async () => {\r\n    //TODO: only get stream after clicking start\r\n    try {\r\n      window.stream = this.stream = await this.getStream()\r\n      //TODO: on got stream\r\n    } catch (err) {\r\n      //TODO: error getting stream\r\n      console.log('Error: Issue getting mic', err)\r\n    }\r\n\r\n    this.setUpRecording()\r\n  }\r\n\r\n  start = async () => {\r\n    await this.setupMic()\r\n\r\n    this.recording = true\r\n    // reset the buffers for the new recording\r\n    this.leftchannel.length = this.rightchannel.length = 0\r\n    this.recordingLength = 0\r\n  }\r\n\r\n  stop = () => {\r\n    const { onStop, type } = this.props\r\n\r\n    this.recording = false\r\n    this.closeMic()\r\n\r\n    // we flat the left and right channels down\r\n    this.leftBuffer = this.mergeBuffers(this.leftchannel, this.recordingLength)\r\n    this.rightBuffer = this.mergeBuffers(\r\n      this.rightchannel,\r\n      this.recordingLength\r\n    )\r\n    // we interleave both channels together\r\n    let interleaved = this.interleave(this.leftBuffer, this.rightBuffer)\r\n\r\n    ///////////// WAV Encode /////////////////\r\n    // from http://typedarray.org/from-microphone-to-wav-with-getusermedia-and-web-audio/\r\n    //\r\n\r\n    // we create our wav file\r\n    let buffer = new ArrayBuffer(44 + interleaved.length * 2)\r\n    let view = new DataView(buffer)\r\n\r\n    // RIFF chunk descriptor\r\n    this.writeUTFBytes(view, 0, 'RIFF')\r\n    view.setUint32(4, 44 + interleaved.length * 2, true)\r\n    this.writeUTFBytes(view, 8, 'WAVE')\r\n    // FMT sub-chunk\r\n    this.writeUTFBytes(view, 12, 'fmt ')\r\n    view.setUint32(16, 16, true)\r\n    view.setUint16(20, 1, true)\r\n    // stereo (2 channels)\r\n    view.setUint16(22, 2, true)\r\n    view.setUint32(24, this.sampleRate, true)\r\n    view.setUint32(28, this.sampleRate * 4, true)\r\n    view.setUint16(32, 4, true)\r\n    view.setUint16(34, 16, true)\r\n    // data sub-chunk\r\n    this.writeUTFBytes(view, 36, 'data')\r\n    view.setUint32(40, interleaved.length * 2, true)\r\n\r\n    // write the PCM samples\r\n    let lng = interleaved.length\r\n    let index = 44\r\n    let volume = 1\r\n    for (let i = 0; i < lng; i++) {\r\n      view.setInt16(index, interleaved[i] * (0x7fff * volume), true)\r\n      index += 2\r\n    }\r\n\r\n    // our final binary blob\r\n    const blob = new Blob([view], { type: type })\r\n    const audioUrl = URL.createObjectURL(blob)\r\n\r\n    onStop &&\r\n      onStop({\r\n        blob: blob,\r\n        url: audioUrl,\r\n        type\r\n      })\r\n  }\r\n\r\n  pause = () => {\r\n    this.recording = false\r\n    this.closeMic()\r\n  }\r\n\r\n  resume = () => {\r\n    this.setupMic()\r\n    this.recording = true\r\n  }\r\n\r\n  closeMic = () => {\r\n    this.stream.getAudioTracks().forEach((track) => {\r\n      track.stop()\r\n    })\r\n    this.audioInput.disconnect(0)\r\n    this.analyser.disconnect(0)\r\n    this.recorder.disconnect(0)\r\n  }\r\n\r\n  //1 - render\r\n  render() {\r\n    const { canvasWidth, canvasHeight } = this.props\r\n\r\n    return (\r\n      <div className='audio-react-recorder'>\r\n        <canvas\r\n          ref={this.canvasRef}\r\n          width={canvasWidth}\r\n          height={canvasHeight}\r\n          className='audio-react-recorder__canvas'\r\n        ></canvas>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}