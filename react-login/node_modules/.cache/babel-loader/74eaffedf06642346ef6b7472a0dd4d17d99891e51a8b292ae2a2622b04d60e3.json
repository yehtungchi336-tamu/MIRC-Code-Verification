{"ast":null,"code":"import _slicedToArray from \"C:/Users/Max/Documents/GitHub/MIRC-Code-Verification/react-login/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _taggedTemplateLiteral from \"C:/Users/Max/Documents/GitHub/MIRC-Code-Verification/react-login/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\Max\\\\Documents\\\\GitHub\\\\MIRC-Code-Verification\\\\react-login\\\\src\\\\components\\\\Recorder.js\",\n  _templateObject,\n  _s = $RefreshSig$();\nimport React, { Component, useContext, useState } from 'react';\nimport { saveAs } from 'file-saver';\nimport AudioReactRecorder, { RecordState } from 'audio-react-recorder';\nimport styled from 'styled-components';\nimport { ContextApp } from '../ContextAPI';\nimport firebase from 'firebase';\nimport { db } from '../Fire';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar Iconspecial = styled.i(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\ncolor: \", \";\\nbackground-color: white;\\n&:hover {\\n  color: white;\\n  background-color:  \", \";\\n}\\n\"])), function (props) {\n  return props.color;\n}, function (props) {\n  return props.color;\n});\n_c = Iconspecial;\nfunction Recorder(props) {\n  _s();\n  var user = firebase.auth().currentUser;\n  var convoid = props.convoid,\n    progressbar = props.progressbar,\n    progresswidth = props.progresswidth;\n  var _useContext = useContext(ContextApp),\n    themecolor = _useContext.themecolor;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    record = _useState2[0],\n    setRecord = _useState2[1];\n  var _useState3 = useState('blob:https://5guz4.csb.app/2ff8746b-44d6-4c3f-b531-480291e7aa84'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    audio = _useState4[0],\n    setAudio = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    update = _useState6[0],\n    setUpdate = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    clicked = _useState8[0],\n    setClicked = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    reset = _useState10[0],\n    setReset = _useState10[1];\n  var id = db.collection('conversations').doc().id;\n  function start() {\n    setRecord(RecordState.START);\n  }\n  function stop() {\n    setRecord(RecordState.STOP);\n  }\n  //audioData contains blob and blobUrl\n  var onStop = function onStop(audioData) {\n    if (!reset) {\n      var FileSaver = require('file-saver');\n      var storageRef = firebase.storage().ref(\"\".concat(convoid, \"/recording.mp3\"));\n      var reader = new FileReader();\n      reader.readAsDataURL(audioData.blob);\n      reader.onloadend = function () {\n        var base64data = reader.result;\n        function urltoFile(url, filename, mimeType) {\n          return fetch(url).then(function (res) {\n            return res.arrayBuffer();\n          }).then(function (buf) {\n            return new File([buf], filename, {\n              type: mimeType\n            });\n          });\n        }\n\n        //Usage example:\n        urltoFile(base64data, 'recording.wav', 'audio/wav').then(function (file) {\n          var storageRef = firebase.storage().ref(\"\".concat(convoid, \"/\").concat(id, \".wav\"));\n          var task = storageRef.put(file);\n          task.on('state_changes', function progress(snap) {\n            progressbar.current.style.display = 'flex';\n            var percentage = snap.bytesTransferred / snap.totalBytes * 100;\n            progresswidth.current.style.height = \"\".concat(percentage, \"%\");\n          }, function error(err) {}, function complete() {\n            var msgobject = {\n              message: \"https://firebasestorage.googleapis.com/v0/b/\".concat(storageRef.bucket, \"/o/\").concat(convoid, \"%2F\").concat(id, \".wav?alt=media\"),\n              reaction: \"\",\n              msgdate: firebase.firestore.Timestamp.now(),\n              msgid: db.collection(\"conversations\").doc().id,\n              read: false,\n              senderid: user.uid,\n              editing: false,\n              nobackground: true,\n              emoji: true,\n              base64: false,\n              audio: true\n            };\n            db.collection(\"conversations\").doc(convoid).update({\n              messages: firebase.firestore.FieldValue.arrayUnion(msgobject)\n            });\n            progressbar.current.style.display = 'none';\n          });\n        });\n      };\n    } else {\n      setReset(false);\n    }\n  };\n  var _useState11 = useState(0),\n    _useState12 = _slicedToArray(_useState11, 2),\n    time = _useState12[0],\n    setTime = _useState12[1];\n  var _useState13 = useState(),\n    _useState14 = _slicedToArray(_useState13, 2),\n    intervalId = _useState14[0],\n    setIntervalId = _useState14[1];\n  function startRecord() {\n    start();\n    setClicked(true);\n    setIntervalId(setInterval(function () {\n      setTime(function (prev) {\n        return prev + 1;\n      });\n    }, 1000));\n  }\n  function stopRecord() {\n    setTime(0);\n    stop();\n    setClicked(false);\n    clearInterval(intervalId);\n  }\n  function resetRecord() {\n    setReset(true);\n    stop();\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AudioReactRecorder, {\n      state: record,\n      onStop: onStop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), !clicked ? /*#__PURE__*/_jsxDEV(Iconspecial, {\n      color: themecolor,\n      className: \"icondiv fal fa-microphone\",\n      onClick: function onClick() {\n        startRecord();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"spinner-wave\",\n      onClick: function onClick() {\n        stopRecord();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"time\",\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Iconspecial, {\n        color: themecolor,\n        className: \"left fal fa-times-circle\",\n        onClick: function onClick() {\n          return resetRecord();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Recorder, \"diPdZ+pA5/I3yTnyIvK/dCQtddg=\");\n_c2 = Recorder;\nexport default Recorder;\nvar _c, _c2;\n$RefreshReg$(_c, \"Iconspecial\");\n$RefreshReg$(_c2, \"Recorder\");","map":{"version":3,"names":["React","Component","useContext","useState","saveAs","AudioReactRecorder","RecordState","styled","ContextApp","firebase","db","Iconspecial","i","props","color","Recorder","user","auth","currentUser","convoid","progressbar","progresswidth","themecolor","record","setRecord","audio","setAudio","update","setUpdate","clicked","setClicked","reset","setReset","id","collection","doc","start","START","stop","STOP","onStop","audioData","FileSaver","require","storageRef","storage","ref","reader","FileReader","readAsDataURL","blob","onloadend","base64data","result","urltoFile","url","filename","mimeType","fetch","then","res","arrayBuffer","buf","File","type","file","task","put","on","progress","snap","current","style","display","percentage","bytesTransferred","totalBytes","height","error","err","complete","msgobject","message","bucket","reaction","msgdate","firestore","Timestamp","now","msgid","read","senderid","uid","editing","nobackground","emoji","base64","messages","FieldValue","arrayUnion","time","setTime","intervalId","setIntervalId","startRecord","setInterval","prev","stopRecord","clearInterval","resetRecord"],"sources":["C:/Users/Max/Documents/GitHub/MIRC-Code-Verification/react-login/src/components/Recorder.js"],"sourcesContent":["import React, { Component, useContext, useState } from 'react'\r\nimport { saveAs } from 'file-saver';\r\n\r\nimport AudioReactRecorder, { RecordState } from 'audio-react-recorder'\r\nimport styled from 'styled-components'  \r\nimport { ContextApp } from '../ContextAPI'\r\nimport firebase from 'firebase'\r\nimport { db } from '../Fire'\r\n\r\nconst Iconspecial = styled.i `\r\ncolor: ${props=>props.color};\r\nbackground-color: white;\r\n&:hover {\r\n  color: white;\r\n  background-color:  ${props=>props.color};\r\n}\r\n`\r\nfunction Recorder(props) {\r\n  \r\n  const user = firebase.auth().currentUser\r\n  const {convoid, progressbar, progresswidth}=props\r\n  const {themecolor}= useContext(ContextApp)\r\n  const [record, setRecord] = useState(null)\r\n  const [audio, setAudio] = useState('blob:https://5guz4.csb.app/2ff8746b-44d6-4c3f-b531-480291e7aa84')\r\n  const [update, setUpdate]=useState(0)\r\n  const [clicked, setClicked]=useState(false)\r\n  const [reset, setReset]=useState(false)\r\n  let id = db.collection('conversations').doc().id\r\n\r\n  function start() {\r\n    setRecord(RecordState.START)\r\n  }\r\n \r\n  function stop() {\r\n      setRecord(RecordState.STOP)\r\n  }\r\n  //audioData contains blob and blobUrl\r\n    const onStop = (audioData) => {\r\n    if(!reset){\r\n      var FileSaver = require('file-saver');\r\n      const storageRef =  firebase.storage().ref(`${convoid}/recording.mp3`)\r\n      var reader = new FileReader();\r\n      reader.readAsDataURL(audioData.blob); \r\n      reader.onloadend = function() {\r\n          var base64data = reader.result;                \r\n          function urltoFile(url, filename, mimeType){\r\n            return (fetch(url)\r\n                .then(function(res){return res.arrayBuffer();})\r\n                .then(function(buf){return new File([buf], filename,{type:mimeType});})\r\n            );\r\n        }\r\n        \r\n        //Usage example:\r\n        urltoFile(base64data, 'recording.wav','audio/wav')\r\n        .then(\r\n          function(file){ \r\n\r\n              const storageRef =  firebase.storage().ref(`${convoid}/${id}.wav`)\r\n\r\n    const task =  storageRef.put(file)\r\n      task.on('state_changes',\r\n\r\n        function progress(snap){\r\n          progressbar.current.style.display='flex'\r\n          const percentage =( snap.bytesTransferred/snap.totalBytes)*100\r\n         progresswidth.current.style.height=`${percentage}%`\r\n        }, \r\n        function error(err){\r\n\r\n        },\r\n        function complete(){\r\n  \r\n              let msgobject = {\r\n            message: `https://firebasestorage.googleapis.com/v0/b/${storageRef.bucket}/o/${convoid}%2F${id}.wav?alt=media`,\r\n            reaction: \"\",\r\n            msgdate: firebase.firestore.Timestamp.now(),\r\n            msgid: db.collection(\"conversations\").doc().id,\r\n            read: false,\r\n            senderid: user.uid,\r\n            editing: false,\r\n            nobackground: true,\r\n            emoji: true,\r\n            base64: false,\r\n            audio: true\r\n          };\r\n          db.collection(\"conversations\")\r\n          .doc(convoid)\r\n          .update({\r\n            messages: firebase.firestore.FieldValue.arrayUnion(msgobject)\r\n          });\r\n          progressbar.current.style.display='none'\r\n\r\n    })    \r\n          });\r\n\r\n}\r\n\r\n    }else {\r\n      setReset(false)\r\n    }\r\n  }\r\n  \r\n  const [time, setTime] = useState(0)\r\n  const [intervalId, setIntervalId] = useState();\r\n  function startRecord() {\r\n      start()\r\n      setClicked(true)\r\n      setIntervalId(setInterval(() => {\r\n          setTime(prev => prev + 1)\r\n      }, 1000));\r\n  }\r\n  \r\n  function stopRecord() {\r\n      setTime(0)\r\n      stop()\r\n      setClicked(false)\r\n      clearInterval(intervalId);\r\n  }\r\n  function resetRecord(){\r\n    setReset(true)\r\n    stop()\r\n  }\r\n    return (\r\n      <>\r\n        <AudioReactRecorder state={record} onStop={onStop} />\r\n        {!clicked?<Iconspecial color={themecolor} className='icondiv fal fa-microphone' onClick={()=>{startRecord(); }}></Iconspecial>:\r\n        <div class=\"spinner-wave\" onClick={()=>{stopRecord(); }}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n       \r\n        <span className=\"time\">\r\n          {time}\r\n        </span>\r\n        <Iconspecial color={themecolor} className=\"left fal fa-times-circle\" onClick={()=>resetRecord()}></Iconspecial>\r\n\r\n      </div>\r\n      }\r\n        {/* <button onClick={()=>start()}>Start</button>\r\n        <button onClick={()=>stop()}>Stop</button> */}\r\n      </>\r\n    )\r\n  }\r\n\r\nexport default Recorder"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}