{"ast":null,"code":"import firebase from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { __awaiter, __generator, __spreadArray, __read, __values, __assign } from 'tslib';\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { openDb } from 'idb';\nvar name = \"@firebase/installations\";\nvar version = \"0.4.32\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar PENDING_TIMEOUT_MS = 10000;\nvar PACKAGE_VERSION = \"w:\" + version;\nvar INTERNAL_AUTH_VERSION = 'FIS_v2';\nvar INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';\nvar TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\nvar SERVICE = 'installations';\nvar SERVICE_NAME = 'Installations';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar _a;\nvar ERROR_DESCRIPTION_MAP = (_a = {}, _a[\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */] = 'Missing App configuration value: \"{$valueName}\"', _a[\"not-registered\" /* NOT_REGISTERED */] = 'Firebase Installation is not registered.', _a[\"installation-not-found\" /* INSTALLATION_NOT_FOUND */] = 'Firebase Installation not found.', _a[\"request-failed\" /* REQUEST_FAILED */] = '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"', _a[\"app-offline\" /* APP_OFFLINE */] = 'Could not process request. Application offline.', _a[\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */] = \"Can't delete installation while there is a pending registration request.\", _a);\nvar ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nfunction isServerError(error) {\n  return error instanceof FirebaseError && error.code.includes(\"request-failed\" /* REQUEST_FAILED */);\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction getInstallationsEndpoint(_a) {\n  var projectId = _a.projectId;\n  return INSTALLATIONS_API_URL + \"/projects/\" + projectId + \"/installations\";\n}\nfunction extractAuthTokenInfoFromResponse(response) {\n  return {\n    token: response.token,\n    requestStatus: 2 /* COMPLETED */,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\nfunction getErrorFromResponse(requestName, response) {\n  return __awaiter(this, void 0, void 0, function () {\n    var responseJson, errorData;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, response.json()];\n        case 1:\n          responseJson = _a.sent();\n          errorData = responseJson.error;\n          return [2 /*return*/, ERROR_FACTORY.create(\"request-failed\" /* REQUEST_FAILED */, {\n            requestName: requestName,\n            serverCode: errorData.code,\n            serverMessage: errorData.message,\n            serverStatus: errorData.status\n          })];\n      }\n    });\n  });\n}\nfunction getHeaders(_a) {\n  var apiKey = _a.apiKey;\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\nfunction getHeadersWithAuth(appConfig, _a) {\n  var refreshToken = _a.refreshToken;\n  var headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n/**\r\n * Calls the passed in fetch wrapper and returns the response.\r\n * If the returned response has a status of 5xx, re-runs the function once and\r\n * returns the response.\r\n */\nfunction retryIfServerError(fn) {\n  return __awaiter(this, void 0, void 0, function () {\n    var result;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, fn()];\n        case 1:\n          result = _a.sent();\n          if (result.status >= 500 && result.status < 600) {\n            // Internal Server Error. Retry request.\n            return [2 /*return*/, fn()];\n          }\n          return [2 /*return*/, result];\n      }\n    });\n  });\n}\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn) {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\nfunction getAuthorizationHeader(refreshToken) {\n  return INTERNAL_AUTH_VERSION + \" \" + refreshToken;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction createInstallationRequest(appConfig, _a) {\n  var fid = _a.fid;\n  return __awaiter(this, void 0, void 0, function () {\n    var endpoint, headers, body, request, response, responseValue, registeredInstallationEntry;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          endpoint = getInstallationsEndpoint(appConfig);\n          headers = getHeaders(appConfig);\n          body = {\n            fid: fid,\n            authVersion: INTERNAL_AUTH_VERSION,\n            appId: appConfig.appId,\n            sdkVersion: PACKAGE_VERSION\n          };\n          request = {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify(body)\n          };\n          return [4 /*yield*/, retryIfServerError(function () {\n            return fetch(endpoint, request);\n          })];\n        case 1:\n          response = _b.sent();\n          if (!response.ok) return [3 /*break*/, 3];\n          return [4 /*yield*/, response.json()];\n        case 2:\n          responseValue = _b.sent();\n          registeredInstallationEntry = {\n            fid: responseValue.fid || fid,\n            registrationStatus: 2 /* COMPLETED */,\n            refreshToken: responseValue.refreshToken,\n            authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n          };\n          return [2 /*return*/, registeredInstallationEntry];\n        case 3:\n          return [4 /*yield*/, getErrorFromResponse('Create Installation', response)];\n        case 4:\n          throw _b.sent();\n      }\n    });\n  });\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/** Returns a promise that resolves after given time passes. */\nfunction sleep(ms) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction bufferToBase64UrlSafe(array) {\n  var b64 = btoa(String.fromCharCode.apply(String, __spreadArray([], __read(array))));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nvar INVALID_FID = '';\n/**\r\n * Generates a new FID using random values from Web Crypto API.\r\n * Returns an empty string if FID generation fails for any reason.\r\n */\nfunction generateFid() {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    var fidByteArray = new Uint8Array(17);\n    var crypto_1 = self.crypto || self.msCrypto;\n    crypto_1.getRandomValues(fidByteArray);\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 112 + fidByteArray[0] % 16;\n    var fid = encode(fidByteArray);\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch (_a) {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray) {\n  var b64String = bufferToBase64UrlSafe(fidByteArray);\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/** Returns a string key that can be used to identify the app. */\nfunction getKey(appConfig) {\n  return appConfig.appName + \"!\" + appConfig.appId;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar fidChangeCallbacks = new Map();\n/**\r\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\r\n * change to other tabs.\r\n */\nfunction fidChanged(appConfig, fid) {\n  var key = getKey(appConfig);\n  callFidChangeCallbacks(key, fid);\n  broadcastFidChange(key, fid);\n}\nfunction addCallback(appConfig, callback) {\n  // Open the broadcast channel if it's not already open,\n  // to be able to listen to change events from other tabs.\n  getBroadcastChannel();\n  var key = getKey(appConfig);\n  var callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    callbackSet = new Set();\n    fidChangeCallbacks.set(key, callbackSet);\n  }\n  callbackSet.add(callback);\n}\nfunction removeCallback(appConfig, callback) {\n  var key = getKey(appConfig);\n  var callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    return;\n  }\n  callbackSet.delete(callback);\n  if (callbackSet.size === 0) {\n    fidChangeCallbacks.delete(key);\n  }\n  // Close broadcast channel if there are no more callbacks.\n  closeBroadcastChannel();\n}\nfunction callFidChangeCallbacks(key, fid) {\n  var e_1, _a;\n  var callbacks = fidChangeCallbacks.get(key);\n  if (!callbacks) {\n    return;\n  }\n  try {\n    for (var callbacks_1 = __values(callbacks), callbacks_1_1 = callbacks_1.next(); !callbacks_1_1.done; callbacks_1_1 = callbacks_1.next()) {\n      var callback = callbacks_1_1.value;\n      callback(fid);\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (callbacks_1_1 && !callbacks_1_1.done && (_a = callbacks_1.return)) _a.call(callbacks_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n}\nfunction broadcastFidChange(key, fid) {\n  var channel = getBroadcastChannel();\n  if (channel) {\n    channel.postMessage({\n      key: key,\n      fid: fid\n    });\n  }\n  closeBroadcastChannel();\n}\nvar broadcastChannel = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel() {\n  if (!broadcastChannel && 'BroadcastChannel' in self) {\n    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n    broadcastChannel.onmessage = function (e) {\n      callFidChangeCallbacks(e.data.key, e.data.fid);\n    };\n  }\n  return broadcastChannel;\n}\nfunction closeBroadcastChannel() {\n  if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n    broadcastChannel.close();\n    broadcastChannel = null;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar DATABASE_NAME = 'firebase-installations-database';\nvar DATABASE_VERSION = 1;\nvar OBJECT_STORE_NAME = 'firebase-installations-store';\nvar dbPromise = null;\nfunction getDbPromise() {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, function (upgradeDB) {\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDB.oldVersion) {\n        case 0:\n          upgradeDB.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n  return dbPromise;\n}\n/** Assigns or overwrites the record for the given key with the given value. */\nfunction set(appConfig, value) {\n  return __awaiter(this, void 0, void 0, function () {\n    var key, db, tx, objectStore, oldValue;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          key = getKey(appConfig);\n          return [4 /*yield*/, getDbPromise()];\n        case 1:\n          db = _a.sent();\n          tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n          objectStore = tx.objectStore(OBJECT_STORE_NAME);\n          return [4 /*yield*/, objectStore.get(key)];\n        case 2:\n          oldValue = _a.sent();\n          return [4 /*yield*/, objectStore.put(value, key)];\n        case 3:\n          _a.sent();\n          return [4 /*yield*/, tx.complete];\n        case 4:\n          _a.sent();\n          if (!oldValue || oldValue.fid !== value.fid) {\n            fidChanged(appConfig, value.fid);\n          }\n          return [2 /*return*/, value];\n      }\n    });\n  });\n}\n/** Removes record(s) from the objectStore that match the given key. */\nfunction remove(appConfig) {\n  return __awaiter(this, void 0, void 0, function () {\n    var key, db, tx;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          key = getKey(appConfig);\n          return [4 /*yield*/, getDbPromise()];\n        case 1:\n          db = _a.sent();\n          tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n          return [4 /*yield*/, tx.objectStore(OBJECT_STORE_NAME).delete(key)];\n        case 2:\n          _a.sent();\n          return [4 /*yield*/, tx.complete];\n        case 3:\n          _a.sent();\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n/**\r\n * Atomically updates a record with the result of updateFn, which gets\r\n * called with the current value. If newValue is undefined, the record is\r\n * deleted instead.\r\n * @return Updated value\r\n */\nfunction update(appConfig, updateFn) {\n  return __awaiter(this, void 0, void 0, function () {\n    var key, db, tx, store, oldValue, newValue;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          key = getKey(appConfig);\n          return [4 /*yield*/, getDbPromise()];\n        case 1:\n          db = _a.sent();\n          tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n          store = tx.objectStore(OBJECT_STORE_NAME);\n          return [4 /*yield*/, store.get(key)];\n        case 2:\n          oldValue = _a.sent();\n          newValue = updateFn(oldValue);\n          if (!(newValue === undefined)) return [3 /*break*/, 4];\n          return [4 /*yield*/, store.delete(key)];\n        case 3:\n          _a.sent();\n          return [3 /*break*/, 6];\n        case 4:\n          return [4 /*yield*/, store.put(newValue, key)];\n        case 5:\n          _a.sent();\n          _a.label = 6;\n        case 6:\n          return [4 /*yield*/, tx.complete];\n        case 7:\n          _a.sent();\n          if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\n            fidChanged(appConfig, newValue.fid);\n          }\n          return [2 /*return*/, newValue];\n      }\n    });\n  });\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Updates and returns the InstallationEntry from the database.\r\n * Also triggers a registration request if it is necessary and possible.\r\n */\nfunction getInstallationEntry(appConfig) {\n  return __awaiter(this, void 0, void 0, function () {\n    var registrationPromise, installationEntry;\n    var _a;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          return [4 /*yield*/, update(appConfig, function (oldEntry) {\n            var installationEntry = updateOrCreateInstallationEntry(oldEntry);\n            var entryWithPromise = triggerRegistrationIfNecessary(appConfig, installationEntry);\n            registrationPromise = entryWithPromise.registrationPromise;\n            return entryWithPromise.installationEntry;\n          })];\n        case 1:\n          installationEntry = _b.sent();\n          if (!(installationEntry.fid === INVALID_FID)) return [3 /*break*/, 3];\n          _a = {};\n          return [4 /*yield*/, registrationPromise];\n        case 2:\n          // FID generation failed. Waiting for the FID from the server.\n          return [2 /*return*/, (_a.installationEntry = _b.sent(), _a)];\n        case 3:\n          return [2 /*return*/, {\n            installationEntry: installationEntry,\n            registrationPromise: registrationPromise\n          }];\n      }\n    });\n  });\n}\n/**\r\n * Creates a new Installation Entry if one does not exist.\r\n * Also clears timed out pending requests.\r\n */\nfunction updateOrCreateInstallationEntry(oldEntry) {\n  var entry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: 0 /* NOT_STARTED */\n  };\n\n  return clearTimedOutRequest(entry);\n}\n/**\r\n * If the Firebase Installation is not registered yet, this will trigger the\r\n * registration and return an InProgressInstallationEntry.\r\n *\r\n * If registrationPromise does not exist, the installationEntry is guaranteed\r\n * to be registered.\r\n */\nfunction triggerRegistrationIfNecessary(appConfig, installationEntry) {\n  if (installationEntry.registrationStatus === 0 /* NOT_STARTED */) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      var registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */));\n      return {\n        installationEntry: installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n    // Try registering. Change status to IN_PROGRESS.\n    var inProgressEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: 1 /* IN_PROGRESS */,\n      registrationTime: Date.now()\n    };\n    var registrationPromise = registerInstallation(appConfig, inProgressEntry);\n    return {\n      installationEntry: inProgressEntry,\n      registrationPromise: registrationPromise\n    };\n  } else if (installationEntry.registrationStatus === 1 /* IN_PROGRESS */) {\n    return {\n      installationEntry: installationEntry,\n      registrationPromise: waitUntilFidRegistration(appConfig)\n    };\n  } else {\n    return {\n      installationEntry: installationEntry\n    };\n  }\n}\n/** This will be executed only once for each new Firebase Installation. */\nfunction registerInstallation(appConfig, installationEntry) {\n  return __awaiter(this, void 0, void 0, function () {\n    var registeredInstallationEntry, e_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 7]);\n          return [4 /*yield*/, createInstallationRequest(appConfig, installationEntry)];\n        case 1:\n          registeredInstallationEntry = _a.sent();\n          return [2 /*return*/, set(appConfig, registeredInstallationEntry)];\n        case 2:\n          e_1 = _a.sent();\n          if (!(isServerError(e_1) && e_1.customData.serverCode === 409)) return [3 /*break*/, 4];\n          // Server returned a \"FID can not be used\" error.\n          // Generate a new ID next time.\n          return [4 /*yield*/, remove(appConfig)];\n        case 3:\n          // Server returned a \"FID can not be used\" error.\n          // Generate a new ID next time.\n          _a.sent();\n          return [3 /*break*/, 6];\n        case 4:\n          // Registration failed. Set FID as not registered.\n          return [4 /*yield*/, set(appConfig, {\n            fid: installationEntry.fid,\n            registrationStatus: 0 /* NOT_STARTED */\n          })];\n\n        case 5:\n          // Registration failed. Set FID as not registered.\n          _a.sent();\n          _a.label = 6;\n        case 6:\n          throw e_1;\n        case 7:\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n/** Call if FID registration is pending in another request. */\nfunction waitUntilFidRegistration(appConfig) {\n  return __awaiter(this, void 0, void 0, function () {\n    var entry, _a, installationEntry, registrationPromise;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          return [4 /*yield*/, updateInstallationRequest(appConfig)];\n        case 1:\n          entry = _b.sent();\n          _b.label = 2;\n        case 2:\n          if (!(entry.registrationStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 5];\n          // createInstallation request still in progress.\n          return [4 /*yield*/, sleep(100)];\n        case 3:\n          // createInstallation request still in progress.\n          _b.sent();\n          return [4 /*yield*/, updateInstallationRequest(appConfig)];\n        case 4:\n          entry = _b.sent();\n          return [3 /*break*/, 2];\n        case 5:\n          if (!(entry.registrationStatus === 0 /* NOT_STARTED */)) return [3 /*break*/, 7];\n          return [4 /*yield*/, getInstallationEntry(appConfig)];\n        case 6:\n          _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\n          if (registrationPromise) {\n            return [2 /*return*/, registrationPromise];\n          } else {\n            // if there is no registrationPromise, entry is registered.\n            return [2 /*return*/, installationEntry];\n          }\n        case 7:\n          return [2 /*return*/, entry];\n      }\n    });\n  });\n}\n/**\r\n * Called only if there is a CreateInstallation request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * CreateInstallation request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\nfunction updateInstallationRequest(appConfig) {\n  return update(appConfig, function (oldEntry) {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(\"installation-not-found\" /* INSTALLATION_NOT_FOUND */);\n    }\n\n    return clearTimedOutRequest(oldEntry);\n  });\n}\nfunction clearTimedOutRequest(entry) {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: 0 /* NOT_STARTED */\n    };\n  }\n\n  return entry;\n}\nfunction hasInstallationRequestTimedOut(installationEntry) {\n  return installationEntry.registrationStatus === 1 /* IN_PROGRESS */ && installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now();\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction generateAuthTokenRequest(_a, installationEntry) {\n  var appConfig = _a.appConfig,\n    platformLoggerProvider = _a.platformLoggerProvider;\n  return __awaiter(this, void 0, void 0, function () {\n    var endpoint, headers, platformLogger, body, request, response, responseValue, completedAuthToken;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n          headers = getHeadersWithAuth(appConfig, installationEntry);\n          platformLogger = platformLoggerProvider.getImmediate({\n            optional: true\n          });\n          if (platformLogger) {\n            headers.append('x-firebase-client', platformLogger.getPlatformInfoString());\n          }\n          body = {\n            installation: {\n              sdkVersion: PACKAGE_VERSION\n            }\n          };\n          request = {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify(body)\n          };\n          return [4 /*yield*/, retryIfServerError(function () {\n            return fetch(endpoint, request);\n          })];\n        case 1:\n          response = _b.sent();\n          if (!response.ok) return [3 /*break*/, 3];\n          return [4 /*yield*/, response.json()];\n        case 2:\n          responseValue = _b.sent();\n          completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);\n          return [2 /*return*/, completedAuthToken];\n        case 3:\n          return [4 /*yield*/, getErrorFromResponse('Generate Auth Token', response)];\n        case 4:\n          throw _b.sent();\n      }\n    });\n  });\n}\nfunction getGenerateAuthTokenEndpoint(appConfig, _a) {\n  var fid = _a.fid;\n  return getInstallationsEndpoint(appConfig) + \"/\" + fid + \"/authTokens:generate\";\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Returns a valid authentication token for the installation. Generates a new\r\n * token if one doesn't exist, is expired or about to expire.\r\n *\r\n * Should only be called if the Firebase Installation is registered.\r\n */\nfunction refreshAuthToken(dependencies, forceRefresh) {\n  if (forceRefresh === void 0) {\n    forceRefresh = false;\n  }\n  return __awaiter(this, void 0, void 0, function () {\n    var tokenPromise, entry, authToken, _a;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          return [4 /*yield*/, update(dependencies.appConfig, function (oldEntry) {\n            if (!isEntryRegistered(oldEntry)) {\n              throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\n            }\n\n            var oldAuthToken = oldEntry.authToken;\n            if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n              // There is a valid token in the DB.\n              return oldEntry;\n            } else if (oldAuthToken.requestStatus === 1 /* IN_PROGRESS */) {\n              // There already is a token request in progress.\n              tokenPromise = waitUntilAuthTokenRequest(dependencies, forceRefresh);\n              return oldEntry;\n            } else {\n              // No token or token expired.\n              if (!navigator.onLine) {\n                throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\n              }\n\n              var inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n              tokenPromise = fetchAuthTokenFromServer(dependencies, inProgressEntry);\n              return inProgressEntry;\n            }\n          })];\n        case 1:\n          entry = _b.sent();\n          if (!tokenPromise) return [3 /*break*/, 3];\n          return [4 /*yield*/, tokenPromise];\n        case 2:\n          _a = _b.sent();\n          return [3 /*break*/, 4];\n        case 3:\n          _a = entry.authToken;\n          _b.label = 4;\n        case 4:\n          authToken = _a;\n          return [2 /*return*/, authToken];\n      }\n    });\n  });\n}\n/**\r\n * Call only if FID is registered and Auth Token request is in progress.\r\n *\r\n * Waits until the current pending request finishes. If the request times out,\r\n * tries once in this thread as well.\r\n */\nfunction waitUntilAuthTokenRequest(dependencies, forceRefresh) {\n  return __awaiter(this, void 0, void 0, function () {\n    var entry, authToken;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, updateAuthTokenRequest(dependencies.appConfig)];\n        case 1:\n          entry = _a.sent();\n          _a.label = 2;\n        case 2:\n          if (!(entry.authToken.requestStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 5];\n          // generateAuthToken still in progress.\n          return [4 /*yield*/, sleep(100)];\n        case 3:\n          // generateAuthToken still in progress.\n          _a.sent();\n          return [4 /*yield*/, updateAuthTokenRequest(dependencies.appConfig)];\n        case 4:\n          entry = _a.sent();\n          return [3 /*break*/, 2];\n        case 5:\n          authToken = entry.authToken;\n          if (authToken.requestStatus === 0 /* NOT_STARTED */) {\n            // The request timed out or failed in a different call. Try again.\n            return [2 /*return*/, refreshAuthToken(dependencies, forceRefresh)];\n          } else {\n            return [2 /*return*/, authToken];\n          }\n      }\n    });\n  });\n}\n/**\r\n * Called only if there is a GenerateAuthToken request in progress.\r\n *\r\n * Updates the InstallationEntry in the DB based on the status of the\r\n * GenerateAuthToken request.\r\n *\r\n * Returns the updated InstallationEntry.\r\n */\nfunction updateAuthTokenRequest(appConfig) {\n  return update(appConfig, function (oldEntry) {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(\"not-registered\" /* NOT_REGISTERED */);\n    }\n\n    var oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return __assign(__assign({}, oldEntry), {\n        authToken: {\n          requestStatus: 0 /* NOT_STARTED */\n        }\n      });\n    }\n\n    return oldEntry;\n  });\n}\nfunction fetchAuthTokenFromServer(dependencies, installationEntry) {\n  return __awaiter(this, void 0, void 0, function () {\n    var authToken, updatedInstallationEntry, e_1, updatedInstallationEntry;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 3,, 8]);\n          return [4 /*yield*/, generateAuthTokenRequest(dependencies, installationEntry)];\n        case 1:\n          authToken = _a.sent();\n          updatedInstallationEntry = __assign(__assign({}, installationEntry), {\n            authToken: authToken\n          });\n          return [4 /*yield*/, set(dependencies.appConfig, updatedInstallationEntry)];\n        case 2:\n          _a.sent();\n          return [2 /*return*/, authToken];\n        case 3:\n          e_1 = _a.sent();\n          if (!(isServerError(e_1) && (e_1.customData.serverCode === 401 || e_1.customData.serverCode === 404))) return [3 /*break*/, 5];\n          // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n          // Generate a new ID next time.\n          return [4 /*yield*/, remove(dependencies.appConfig)];\n        case 4:\n          // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n          // Generate a new ID next time.\n          _a.sent();\n          return [3 /*break*/, 7];\n        case 5:\n          updatedInstallationEntry = __assign(__assign({}, installationEntry), {\n            authToken: {\n              requestStatus: 0 /* NOT_STARTED */\n            }\n          });\n          return [4 /*yield*/, set(dependencies.appConfig, updatedInstallationEntry)];\n        case 6:\n          _a.sent();\n          _a.label = 7;\n        case 7:\n          throw e_1;\n        case 8:\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n\nfunction isEntryRegistered(installationEntry) {\n  return installationEntry !== undefined && installationEntry.registrationStatus === 2 /* COMPLETED */;\n}\n\nfunction isAuthTokenValid(authToken) {\n  return authToken.requestStatus === 2 /* COMPLETED */ && !isAuthTokenExpired(authToken);\n}\nfunction isAuthTokenExpired(authToken) {\n  var now = Date.now();\n  return now < authToken.creationTime || authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER;\n}\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(oldEntry) {\n  var inProgressAuthToken = {\n    requestStatus: 1 /* IN_PROGRESS */,\n    requestTime: Date.now()\n  };\n  return __assign(__assign({}, oldEntry), {\n    authToken: inProgressAuthToken\n  });\n}\nfunction hasAuthTokenRequestTimedOut(authToken) {\n  return authToken.requestStatus === 1 /* IN_PROGRESS */ && authToken.requestTime + PENDING_TIMEOUT_MS < Date.now();\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _getId(dependencies) {\n  return __awaiter(this, void 0, void 0, function () {\n    var _a, installationEntry, registrationPromise;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          return [4 /*yield*/, getInstallationEntry(dependencies.appConfig)];\n        case 1:\n          _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;\n          if (registrationPromise) {\n            registrationPromise.catch(console.error);\n          } else {\n            // If the installation is already registered, update the authentication\n            // token if needed.\n            refreshAuthToken(dependencies).catch(console.error);\n          }\n          return [2 /*return*/, installationEntry.fid];\n      }\n    });\n  });\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _getToken(dependencies, forceRefresh) {\n  if (forceRefresh === void 0) {\n    forceRefresh = false;\n  }\n  return __awaiter(this, void 0, void 0, function () {\n    var authToken;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, completeInstallationRegistration(dependencies.appConfig)];\n        case 1:\n          _a.sent();\n          return [4 /*yield*/, refreshAuthToken(dependencies, forceRefresh)];\n        case 2:\n          authToken = _a.sent();\n          return [2 /*return*/, authToken.token];\n      }\n    });\n  });\n}\nfunction completeInstallationRegistration(appConfig) {\n  return __awaiter(this, void 0, void 0, function () {\n    var registrationPromise;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, getInstallationEntry(appConfig)];\n        case 1:\n          registrationPromise = _a.sent().registrationPromise;\n          if (!registrationPromise) return [3 /*break*/, 3];\n          // A createInstallation request is in progress. Wait until it finishes.\n          return [4 /*yield*/, registrationPromise];\n        case 2:\n          // A createInstallation request is in progress. Wait until it finishes.\n          _a.sent();\n          _a.label = 3;\n        case 3:\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction deleteInstallationRequest(appConfig, installationEntry) {\n  return __awaiter(this, void 0, void 0, function () {\n    var endpoint, headers, request, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          endpoint = getDeleteEndpoint(appConfig, installationEntry);\n          headers = getHeadersWithAuth(appConfig, installationEntry);\n          request = {\n            method: 'DELETE',\n            headers: headers\n          };\n          return [4 /*yield*/, retryIfServerError(function () {\n            return fetch(endpoint, request);\n          })];\n        case 1:\n          response = _a.sent();\n          if (!!response.ok) return [3 /*break*/, 3];\n          return [4 /*yield*/, getErrorFromResponse('Delete Installation', response)];\n        case 2:\n          throw _a.sent();\n        case 3:\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n\nfunction getDeleteEndpoint(appConfig, _a) {\n  var fid = _a.fid;\n  return getInstallationsEndpoint(appConfig) + \"/\" + fid;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction deleteInstallation(dependencies) {\n  return __awaiter(this, void 0, void 0, function () {\n    var appConfig, entry;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          appConfig = dependencies.appConfig;\n          return [4 /*yield*/, update(appConfig, function (oldEntry) {\n            if (oldEntry && oldEntry.registrationStatus === 0 /* NOT_STARTED */) {\n              // Delete the unregistered entry without sending a deleteInstallation request.\n              return undefined;\n            }\n            return oldEntry;\n          })];\n        case 1:\n          entry = _a.sent();\n          if (!entry) return [3 /*break*/, 6];\n          if (!(entry.registrationStatus === 1 /* IN_PROGRESS */)) return [3 /*break*/, 2];\n          // Can't delete while trying to register.\n          throw ERROR_FACTORY.create(\"delete-pending-registration\" /* DELETE_PENDING_REGISTRATION */);\n        case 2:\n          if (!(entry.registrationStatus === 2 /* COMPLETED */)) return [3 /*break*/, 6];\n          if (!!navigator.onLine) return [3 /*break*/, 3];\n          throw ERROR_FACTORY.create(\"app-offline\" /* APP_OFFLINE */);\n        case 3:\n          return [4 /*yield*/, deleteInstallationRequest(appConfig, entry)];\n        case 4:\n          _a.sent();\n          return [4 /*yield*/, remove(appConfig)];\n        case 5:\n          _a.sent();\n          _a.label = 6;\n        case 6:\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Sets a new callback that will get called when Installation ID changes.\r\n * Returns an unsubscribe function that will remove the callback when called.\r\n */\nfunction _onIdChange(_a, callback) {\n  var appConfig = _a.appConfig;\n  addCallback(appConfig, callback);\n  return function () {\n    removeCallback(appConfig, callback);\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction extractAppConfig(app) {\n  var e_1, _a;\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration');\n  }\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n  // Required app config keys\n  var configKeys = ['projectId', 'apiKey', 'appId'];\n  try {\n    for (var configKeys_1 = __values(configKeys), configKeys_1_1 = configKeys_1.next(); !configKeys_1_1.done; configKeys_1_1 = configKeys_1.next()) {\n      var keyName = configKeys_1_1.value;\n      if (!app.options[keyName]) {\n        throw getMissingValueError(keyName);\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (configKeys_1_1 && !configKeys_1_1.done && (_a = configKeys_1.return)) _a.call(configKeys_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n  return {\n    appName: app.name,\n    projectId: app.options.projectId,\n    apiKey: app.options.apiKey,\n    appId: app.options.appId\n  };\n}\nfunction getMissingValueError(valueName) {\n  return ERROR_FACTORY.create(\"missing-app-config-values\" /* MISSING_APP_CONFIG_VALUES */, {\n    valueName: valueName\n  });\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction registerInstallations(instance) {\n  var installationsName = 'installations';\n  instance.INTERNAL.registerComponent(new Component(installationsName, function (container) {\n    var app = container.getProvider('app').getImmediate();\n    // Throws if app isn't configured properly.\n    var appConfig = extractAppConfig(app);\n    var platformLoggerProvider = container.getProvider('platform-logger');\n    var dependencies = {\n      appConfig: appConfig,\n      platformLoggerProvider: platformLoggerProvider\n    };\n    var installations = {\n      app: app,\n      getId: function getId() {\n        return _getId(dependencies);\n      },\n      getToken: function getToken(forceRefresh) {\n        return _getToken(dependencies, forceRefresh);\n      },\n      delete: function _delete() {\n        return deleteInstallation(dependencies);\n      },\n      onIdChange: function onIdChange(callback) {\n        return _onIdChange(dependencies, callback);\n      }\n    };\n    return installations;\n  }, \"PUBLIC\" /* PUBLIC */));\n  instance.registerVersion(name, version);\n}\nregisterInstallations(firebase);\nexport { registerInstallations };","map":{"version":3,"sources":["../src/util/constants.ts","../src/util/errors.ts","../src/api/common.ts","../src/api/create-installation-request.ts","../src/util/sleep.ts","../src/helpers/buffer-to-base64-url-safe.ts","../src/helpers/generate-fid.ts","../src/util/get-key.ts","../src/helpers/fid-changed.ts","../src/helpers/idb-manager.ts","../src/helpers/get-installation-entry.ts","../src/api/generate-auth-token-request.ts","../src/helpers/refresh-auth-token.ts","../src/functions/get-id.ts","../src/functions/get-token.ts","../src/api/delete-installation-request.ts","../src/functions/delete-installation.ts","../src/functions/on-id-change.ts","../src/helpers/extract-app-config.ts","../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../../package.json';\n\nexport const PENDING_TIMEOUT_MS = 10000;\n\nexport const PACKAGE_VERSION = `w:${version}`;\nexport const INTERNAL_AUTH_VERSION = 'FIS_v2';\n\nexport const INSTALLATIONS_API_URL =\n  'https://firebaseinstallations.googleapis.com/v1';\n\nexport const TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\n\nexport const SERVICE = 'installations';\nexport const SERVICE_NAME = 'Installations';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from './constants';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  NOT_REGISTERED = 'not-registered',\n  INSTALLATION_NOT_FOUND = 'installation-not-found',\n  REQUEST_FAILED = 'request-failed',\n  APP_OFFLINE = 'app-offline',\n  DELETE_PENDING_REGISTRATION = 'delete-pending-registration'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.NOT_REGISTERED]: 'Firebase Installation is not registered.',\n  [ErrorCode.INSTALLATION_NOT_FOUND]: 'Firebase Installation not found.',\n  [ErrorCode.REQUEST_FAILED]:\n    '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n  [ErrorCode.APP_OFFLINE]: 'Could not process request. Application offline.',\n  [ErrorCode.DELETE_PENDING_REGISTRATION]:\n    \"Can't delete installation while there is a pending registration request.\"\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.REQUEST_FAILED]: {\n    requestName: string;\n    [index: string]: string | number; // to make Typescript 3.8 happy\n  } & ServerErrorData;\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n\nexport interface ServerErrorData {\n  serverCode: number;\n  serverMessage: string;\n  serverStatus: string;\n}\n\nexport type ServerError = FirebaseError & { customData: ServerErrorData };\n\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nexport function isServerError(error: unknown): error is ServerError {\n  return (\n    error instanceof FirebaseError &&\n    error.code.includes(ErrorCode.REQUEST_FAILED)\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport {\n  INSTALLATIONS_API_URL,\n  INTERNAL_AUTH_VERSION\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function getInstallationsEndpoint({ projectId }: AppConfig): string {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\n\nexport function extractAuthTokenInfoFromResponse(\n  response: GenerateAuthTokenResponse\n): CompletedAuthToken {\n  return {\n    token: response.token,\n    requestStatus: RequestStatus.COMPLETED,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nexport async function getErrorFromResponse(\n  requestName: string,\n  response: Response\n): Promise<FirebaseError> {\n  const responseJson: ErrorResponse = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(ErrorCode.REQUEST_FAILED, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\n\nexport function getHeaders({ apiKey }: AppConfig): Headers {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nexport function getHeadersWithAuth(\n  appConfig: AppConfig,\n  { refreshToken }: RegisteredInstallationEntry\n): Headers {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n\nexport interface ErrorResponse {\n  error: {\n    code: number;\n    message: string;\n    status: string;\n  };\n}\n\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nexport async function retryIfServerError(\n  fn: () => Promise<Response>\n): Promise<Response> {\n  const result = await fn();\n\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n  }\n\n  return result;\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn: string): number {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken: string): string {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CreateInstallationResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  InProgressInstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { INTERNAL_AUTH_VERSION, PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeaders,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function createInstallationRequest(\n  appConfig: AppConfig,\n  { fid }: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  const endpoint = getInstallationsEndpoint(appConfig);\n\n  const headers = getHeaders(appConfig);\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: CreateInstallationResponse = await response.json();\n    const registeredInstallationEntry: RegisteredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: RequestStatus.COMPLETED,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw await getErrorFromResponse('Create Installation', response);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function bufferToBase64UrlSafe(array: Uint8Array): string {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bufferToBase64UrlSafe } from './buffer-to-base64-url-safe';\n\nexport const VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nexport const INVALID_FID = '';\n\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nexport function generateFid(): string {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto =\n      self.crypto || ((self as unknown) as { msCrypto: Crypto }).msCrypto;\n    crypto.getRandomValues(fidByteArray);\n\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n\n    const fid = encode(fidByteArray);\n\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray: Uint8Array): string {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/app-config';\n\n/** Returns a string key that can be used to identify the app. */\nexport function getKey(appConfig: AppConfig): string {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getKey } from '../util/get-key';\nimport { AppConfig } from '../interfaces/app-config';\nimport { IdChangeCallbackFn } from '../functions';\n\nconst fidChangeCallbacks: Map<string, Set<IdChangeCallbackFn>> = new Map();\n\n/**\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\n * change to other tabs.\n */\nexport function fidChanged(appConfig: AppConfig, fid: string): void {\n  const key = getKey(appConfig);\n\n  callFidChangeCallbacks(key, fid);\n  broadcastFidChange(key, fid);\n}\n\nexport function addCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  // Open the broadcast channel if it's not already open,\n  // to be able to listen to change events from other tabs.\n  getBroadcastChannel();\n\n  const key = getKey(appConfig);\n\n  let callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    callbackSet = new Set();\n    fidChangeCallbacks.set(key, callbackSet);\n  }\n  callbackSet.add(callback);\n}\n\nexport function removeCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  const key = getKey(appConfig);\n\n  const callbackSet = fidChangeCallbacks.get(key);\n\n  if (!callbackSet) {\n    return;\n  }\n\n  callbackSet.delete(callback);\n  if (callbackSet.size === 0) {\n    fidChangeCallbacks.delete(key);\n  }\n\n  // Close broadcast channel if there are no more callbacks.\n  closeBroadcastChannel();\n}\n\nfunction callFidChangeCallbacks(key: string, fid: string): void {\n  const callbacks = fidChangeCallbacks.get(key);\n  if (!callbacks) {\n    return;\n  }\n\n  for (const callback of callbacks) {\n    callback(fid);\n  }\n}\n\nfunction broadcastFidChange(key: string, fid: string): void {\n  const channel = getBroadcastChannel();\n  if (channel) {\n    channel.postMessage({ key, fid });\n  }\n  closeBroadcastChannel();\n}\n\nlet broadcastChannel: BroadcastChannel | null = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel(): BroadcastChannel | null {\n  if (!broadcastChannel && 'BroadcastChannel' in self) {\n    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n    broadcastChannel.onmessage = e => {\n      callFidChangeCallbacks(e.data.key, e.data.fid);\n    };\n  }\n  return broadcastChannel;\n}\n\nfunction closeBroadcastChannel(): void {\n  if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n    broadcastChannel.close();\n    broadcastChannel = null;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DB, openDb } from 'idb';\nimport { AppConfig } from '../interfaces/app-config';\nimport { InstallationEntry } from '../interfaces/installation-entry';\nimport { getKey } from '../util/get-key';\nimport { fidChanged } from './fid-changed';\n\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\n\nlet dbPromise: Promise<DB> | null = null;\nfunction getDbPromise(): Promise<DB> {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDB => {\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDB.oldVersion) {\n        case 0:\n          upgradeDB.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function get(\n  appConfig: AppConfig\n): Promise<InstallationEntry | undefined> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  return db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key);\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function set<ValueType extends InstallationEntry>(\n  appConfig: AppConfig,\n  value: ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const objectStore = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue = await objectStore.get(key);\n  await objectStore.put(value, key);\n  await tx.complete;\n\n  if (!oldValue || oldValue.fid !== value.fid) {\n    fidChanged(appConfig, value.fid);\n  }\n\n  return value;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function remove(appConfig: AppConfig): Promise<void> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.complete;\n}\n\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nexport async function update<ValueType extends InstallationEntry | undefined>(\n  appConfig: AppConfig,\n  updateFn: (previousValue: InstallationEntry | undefined) => ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const store = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue: InstallationEntry | undefined = await store.get(key);\n  const newValue = updateFn(oldValue);\n\n  if (newValue === undefined) {\n    await store.delete(key);\n  } else {\n    await store.put(newValue, key);\n  }\n  await tx.complete;\n\n  if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\n    fidChanged(appConfig, newValue.fid);\n  }\n\n  return newValue;\n}\n\nexport async function clear(): Promise<void> {\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).clear();\n  await tx.complete;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInstallationRequest } from '../api/create-installation-request';\nimport { AppConfig } from '../interfaces/app-config';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { generateFid, INVALID_FID } from './generate-fid';\nimport { remove, set, update } from './idb-manager';\n\nexport interface InstallationEntryWithRegistrationPromise {\n  installationEntry: InstallationEntry;\n  /** Exist iff the installationEntry is not registered. */\n  registrationPromise?: Promise<RegisteredInstallationEntry>;\n}\n\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nexport async function getInstallationEntry(\n  appConfig: AppConfig\n): Promise<InstallationEntryWithRegistrationPromise> {\n  let registrationPromise: Promise<RegisteredInstallationEntry> | undefined;\n\n  const installationEntry = await update(appConfig, oldEntry => {\n    const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n    const entryWithPromise = triggerRegistrationIfNecessary(\n      appConfig,\n      installationEntry\n    );\n    registrationPromise = entryWithPromise.registrationPromise;\n    return entryWithPromise.installationEntry;\n  });\n\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return { installationEntry: await registrationPromise! };\n  }\n\n  return {\n    installationEntry,\n    registrationPromise\n  };\n}\n\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(\n  oldEntry: InstallationEntry | undefined\n): InstallationEntry {\n  const entry: InstallationEntry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: RequestStatus.NOT_STARTED\n  };\n\n  return clearTimedOutRequest(entry);\n}\n\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n *\n * If registrationPromise does not exist, the installationEntry is guaranteed\n * to be registered.\n */\nfunction triggerRegistrationIfNecessary(\n  appConfig: AppConfig,\n  installationEntry: InstallationEntry\n): InstallationEntryWithRegistrationPromise {\n  if (installationEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(\n        ERROR_FACTORY.create(ErrorCode.APP_OFFLINE)\n      );\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry: InProgressInstallationEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: RequestStatus.IN_PROGRESS,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(\n      appConfig,\n      inProgressEntry\n    );\n    return { installationEntry: inProgressEntry, registrationPromise };\n  } else if (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS\n  ) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(appConfig)\n    };\n  } else {\n    return { installationEntry };\n  }\n}\n\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(\n  appConfig: AppConfig,\n  installationEntry: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  try {\n    const registeredInstallationEntry = await createInstallationRequest(\n      appConfig,\n      installationEntry\n    );\n    return set(appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.customData.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: RequestStatus.NOT_STARTED\n      });\n    }\n    throw e;\n  }\n}\n\n/** Call if FID registration is pending in another request. */\nasync function waitUntilFidRegistration(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry: InstallationEntry = await updateInstallationRequest(appConfig);\n  while (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n    // createInstallation request still in progress.\n    await sleep(100);\n\n    entry = await updateInstallationRequest(appConfig);\n  }\n\n  if (entry.registrationStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    const {\n      installationEntry,\n      registrationPromise\n    } = await getInstallationEntry(appConfig);\n\n    if (registrationPromise) {\n      return registrationPromise;\n    } else {\n      // if there is no registrationPromise, entry is registered.\n      return installationEntry as RegisteredInstallationEntry;\n    }\n  }\n\n  return entry;\n}\n\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(\n  appConfig: AppConfig\n): Promise<InstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(ErrorCode.INSTALLATION_NOT_FOUND);\n    }\n    return clearTimedOutRequest(oldEntry);\n  });\n}\n\nfunction clearTimedOutRequest(entry: InstallationEntry): InstallationEntry {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: RequestStatus.NOT_STARTED\n    };\n  }\n\n  return entry;\n}\n\nfunction hasInstallationRequestTimedOut(\n  installationEntry: InstallationEntry\n): boolean {\n  return (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS &&\n    installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function generateAuthTokenRequest(\n  { appConfig, platformLoggerProvider }: FirebaseDependencies,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n\n  // If platform logger exists, add the platform info string to the header.\n  const platformLogger = platformLoggerProvider.getImmediate({\n    optional: true\n  });\n  if (platformLogger) {\n    headers.append('x-firebase-client', platformLogger.getPlatformInfoString());\n  }\n\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION\n    }\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: GenerateAuthTokenResponse = await response.json();\n    const completedAuthToken: CompletedAuthToken = extractAuthTokenInfoFromResponse(\n      responseValue\n    );\n    return completedAuthToken;\n  } else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n  }\n}\n\nfunction getGenerateAuthTokenEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { generateAuthTokenRequest } from '../api/generate-auth-token-request';\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\nimport {\n  AuthToken,\n  CompletedAuthToken,\n  InProgressAuthToken,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { remove, set, update } from './idb-manager';\n\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nexport async function refreshAuthToken(\n  dependencies: FirebaseDependencies,\n  forceRefresh = false\n): Promise<CompletedAuthToken> {\n  let tokenPromise: Promise<CompletedAuthToken> | undefined;\n  const entry = await update(dependencies.appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n      // There is a valid token in the DB.\n      return oldEntry;\n    } else if (oldAuthToken.requestStatus === RequestStatus.IN_PROGRESS) {\n      // There already is a token request in progress.\n      tokenPromise = waitUntilAuthTokenRequest(dependencies, forceRefresh);\n      return oldEntry;\n    } else {\n      // No token or token expired.\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      }\n\n      const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n      tokenPromise = fetchAuthTokenFromServer(dependencies, inProgressEntry);\n      return inProgressEntry;\n    }\n  });\n\n  const authToken = tokenPromise\n    ? await tokenPromise\n    : (entry.authToken as CompletedAuthToken);\n  return authToken;\n}\n\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n *\n * Waits until the current pending request finishes. If the request times out,\n * tries once in this thread as well.\n */\nasync function waitUntilAuthTokenRequest(\n  dependencies: FirebaseDependencies,\n  forceRefresh: boolean\n): Promise<CompletedAuthToken> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry = await updateAuthTokenRequest(dependencies.appConfig);\n  while (entry.authToken.requestStatus === RequestStatus.IN_PROGRESS) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n\n    entry = await updateAuthTokenRequest(dependencies.appConfig);\n  }\n\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    return refreshAuthToken(dependencies, forceRefresh);\n  } else {\n    return authToken;\n  }\n}\n\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return {\n        ...oldEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n    }\n\n    return oldEntry;\n  });\n}\n\nasync function fetchAuthTokenFromServer(\n  dependencies: FirebaseDependencies,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  try {\n    const authToken = await generateAuthTokenRequest(\n      dependencies,\n      installationEntry\n    );\n    const updatedInstallationEntry: RegisteredInstallationEntry = {\n      ...installationEntry,\n      authToken\n    };\n    await set(dependencies.appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (\n      isServerError(e) &&\n      (e.customData.serverCode === 401 || e.customData.serverCode === 404)\n    ) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(dependencies.appConfig);\n    } else {\n      const updatedInstallationEntry: RegisteredInstallationEntry = {\n        ...installationEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n      await set(dependencies.appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\n\nfunction isEntryRegistered(\n  installationEntry: InstallationEntry | undefined\n): installationEntry is RegisteredInstallationEntry {\n  return (\n    installationEntry !== undefined &&\n    installationEntry.registrationStatus === RequestStatus.COMPLETED\n  );\n}\n\nfunction isAuthTokenValid(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.COMPLETED &&\n    !isAuthTokenExpired(authToken)\n  );\n}\n\nfunction isAuthTokenExpired(authToken: CompletedAuthToken): boolean {\n  const now = Date.now();\n  return (\n    now < authToken.creationTime ||\n    authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER\n  );\n}\n\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(\n  oldEntry: RegisteredInstallationEntry\n): RegisteredInstallationEntry {\n  const inProgressAuthToken: InProgressAuthToken = {\n    requestStatus: RequestStatus.IN_PROGRESS,\n    requestTime: Date.now()\n  };\n  return {\n    ...oldEntry,\n    authToken: inProgressAuthToken\n  };\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.IN_PROGRESS &&\n    authToken.requestTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\n\nexport async function getId(\n  dependencies: FirebaseDependencies\n): Promise<string> {\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    dependencies.appConfig\n  );\n\n  if (registrationPromise) {\n    registrationPromise.catch(console.error);\n  } else {\n    // If the installation is already registered, update the authentication\n    // token if needed.\n    refreshAuthToken(dependencies).catch(console.error);\n  }\n\n  return installationEntry.fid;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\n\nexport async function getToken(\n  dependencies: FirebaseDependencies,\n  forceRefresh = false\n): Promise<string> {\n  await completeInstallationRegistration(dependencies.appConfig);\n\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  const authToken = await refreshAuthToken(dependencies, forceRefresh);\n  return authToken.token;\n}\n\nasync function completeInstallationRegistration(\n  appConfig: AppConfig\n): Promise<void> {\n  const { registrationPromise } = await getInstallationEntry(appConfig);\n\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { RegisteredInstallationEntry } from '../interfaces/installation-entry';\nimport {\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function deleteInstallationRequest(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<void> {\n  const endpoint = getDeleteEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const request: RequestInit = {\n    method: 'DELETE',\n    headers\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (!response.ok) {\n    throw await getErrorFromResponse('Delete Installation', response);\n  }\n}\n\nfunction getDeleteEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteInstallationRequest } from '../api/delete-installation-request';\nimport { remove, update } from '../helpers/idb-manager';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\nimport { RequestStatus } from '../interfaces/installation-entry';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport async function deleteInstallation(\n  dependencies: FirebaseDependencies\n): Promise<void> {\n  const { appConfig } = dependencies;\n\n  const entry = await update(appConfig, oldEntry => {\n    if (oldEntry && oldEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n      // Delete the unregistered entry without sending a deleteInstallation request.\n      return undefined;\n    }\n    return oldEntry;\n  });\n\n  if (entry) {\n    if (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n      // Can't delete while trying to register.\n      throw ERROR_FACTORY.create(ErrorCode.DELETE_PENDING_REGISTRATION);\n    } else if (entry.registrationStatus === RequestStatus.COMPLETED) {\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      } else {\n        await deleteInstallationRequest(appConfig, entry);\n        await remove(appConfig);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { addCallback, removeCallback } from '../helpers/fid-changed';\nimport { FirebaseDependencies } from '../interfaces/firebase-dependencies';\n\nexport type IdChangeCallbackFn = (installationId: string) => void;\nexport type IdChangeUnsubscribeFn = () => void;\n\n/**\n * Sets a new callback that will get called when Installation ID changes.\n * Returns an unsubscribe function that will remove the callback when called.\n */\nexport function onIdChange(\n  { appConfig }: FirebaseDependencies,\n  callback: IdChangeCallbackFn\n): IdChangeUnsubscribeFn {\n  addCallback(appConfig, callback);\n\n  return () => {\n    removeCallback(appConfig, callback);\n  };\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app-types';\nimport { FirebaseError } from '@firebase/util';\nimport { AppConfig } from '../interfaces/app-config';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: Array<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId'\n  ];\n\n  for (const keyName of configKeys) {\n    if (!app.options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: app.options.projectId!,\n    apiKey: app.options.apiKey!,\n    appId: app.options.appId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app';\nimport {\n  _FirebaseNamespace,\n  FirebaseService\n} from '@firebase/app-types/private';\nimport { Component, ComponentType } from '@firebase/component';\nimport { FirebaseInstallations } from '@firebase/installations-types';\nimport {\n  deleteInstallation,\n  getId,\n  getToken,\n  IdChangeCallbackFn,\n  IdChangeUnsubscribeFn,\n  onIdChange\n} from './functions';\nimport { extractAppConfig } from './helpers/extract-app-config';\nimport { FirebaseDependencies } from './interfaces/firebase-dependencies';\n\nimport { name, version } from '../package.json';\n\nexport function registerInstallations(instance: _FirebaseNamespace): void {\n  const installationsName = 'installations';\n\n  instance.INTERNAL.registerComponent(\n    new Component(\n      installationsName,\n      container => {\n        const app = container.getProvider('app').getImmediate();\n\n        // Throws if app isn't configured properly.\n        const appConfig = extractAppConfig(app);\n        const platformLoggerProvider = container.getProvider('platform-logger');\n        const dependencies: FirebaseDependencies = {\n          appConfig,\n          platformLoggerProvider\n        };\n\n        const installations: FirebaseInstallations & FirebaseService = {\n          app,\n          getId: () => getId(dependencies),\n          getToken: (forceRefresh?: boolean) =>\n            getToken(dependencies, forceRefresh),\n          delete: () => deleteInstallation(dependencies),\n          onIdChange: (callback: IdChangeCallbackFn): IdChangeUnsubscribeFn =>\n            onIdChange(dependencies, callback)\n        };\n        return installations;\n      },\n      ComponentType.PUBLIC\n    )\n  );\n\n  instance.registerVersion(name, version);\n}\n\nregisterInstallations(firebase as _FirebaseNamespace);\n\n/**\n * Define extension behavior of `registerInstallations`\n */\ndeclare module '@firebase/app-types' {\n  interface FirebaseNamespace {\n    installations(app?: FirebaseApp): FirebaseInstallations;\n  }\n  interface FirebaseApp {\n    installations(): FirebaseInstallations;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}