{"ast":null,"code":"import _slicedToArray from \"C:/Users/Max/Documents/GitHub/MIRC-Code-Verification/react-login/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\Max\\\\Documents\\\\GitHub\\\\MIRC-Code-Verification\\\\react-login\\\\src\\\\ContextAPI.js\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport firebase from 'firebase';\nimport { db } from './Fire';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var ContextApp = /*#__PURE__*/createContext();\nvar ContextAppProvider = function ContextAppProvider(props) {\n  _s();\n  var user = firebase.auth().currentUser;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    darkmode = _useState2[0],\n    setDarkmode = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    widemode = _useState4[0],\n    setWidemode = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    chatcolor = _useState6[0],\n    setChatcolor = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    themecolor = _useState8[0],\n    setThemecolor = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    notifi = _useState10[0],\n    setNotifi = _useState10[1];\n  var _useState11 = useState({\n      emoji: '',\n      msg: ''\n    }),\n    _useState12 = _slicedToArray(_useState11, 2),\n    notificont = _useState12[0],\n    setNotificont = _useState12[1];\n  if (user) {\n    db.collection('users').doc(user.uid).onSnapshot(function (snap) {\n      var user = snap.data();\n      /*\r\n      setDarkmode(user.customization.darkmode)\r\n      setWidemode(user.customization.widemode)\r\n      setChatcolor(user.customization.color)\r\n      setThemecolor(user.customization.themecolor)\r\n      */\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(ContextApp.Provider, {\n    value: {\n      darkmode: darkmode,\n      widemode: widemode,\n      chatcolor: chatcolor,\n      themecolor: themecolor,\n      notificont: notificont,\n      notifi: notifi,\n      setNotificont: setNotificont,\n      setNotifi: setNotifi\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, _this);\n};\n_s(ContextAppProvider, \"AwEBqIZ9ybX2w0JvolHKoqz6NAg=\");\n_c = ContextAppProvider;\nexport default ContextAppProvider;\nvar _c;\n$RefreshReg$(_c, \"ContextAppProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","withRouter","firebase","db","ContextApp","ContextAppProvider","props","user","auth","currentUser","darkmode","setDarkmode","widemode","setWidemode","chatcolor","setChatcolor","themecolor","setThemecolor","notifi","setNotifi","emoji","msg","notificont","setNotificont","collection","doc","uid","onSnapshot","snap","data","children"],"sources":["C:/Users/Max/Documents/GitHub/MIRC-Code-Verification/react-login/src/ContextAPI.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport firebase from 'firebase'\r\nimport { db } from './Fire'\r\nexport let ContextApp=createContext()\r\nlet ContextAppProvider=(props)=>{\r\n  const user = firebase.auth().currentUser\r\n  const [darkmode, setDarkmode]=useState(false)\r\n  const [widemode, setWidemode]=useState(false)\r\n  const [chatcolor, setChatcolor]=useState('')\r\n  const [themecolor, setThemecolor]=useState('')\r\n  const [notifi, setNotifi]=useState(false)\r\n  const [notificont, setNotificont]=useState({\r\n    emoji: '',\r\n    msg: ''\r\n  })\r\n  if(user) {\r\n    db.collection('users').doc(user.uid).onSnapshot(snap=>{\r\n      let user = snap.data()\r\n      /*\r\n      setDarkmode(user.customization.darkmode)\r\n      setWidemode(user.customization.widemode)\r\n      setChatcolor(user.customization.color)\r\n      setThemecolor(user.customization.themecolor)\r\n      */\r\n    })\r\n  }\r\n  return (\r\n    <ContextApp.Provider value={{darkmode, widemode, chatcolor, themecolor, notificont, notifi, setNotificont, setNotifi}}>\r\n      {props.children}\r\n    </ContextApp.Provider>\r\n  )\r\n}\r\nexport default ContextAppProvider"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,QAAQ,MAAM,UAAU;AAC/B,SAASC,EAAE,QAAQ,QAAQ;AAAA;AAC3B,OAAO,IAAIC,UAAU,gBAACN,aAAa,EAAE;AACrC,IAAIO,kBAAkB,GAAC,SAAnBA,kBAAkB,CAAEC,KAAK,EAAG;EAAA;EAC9B,IAAMC,IAAI,GAAGL,QAAQ,CAACM,IAAI,EAAE,CAACC,WAAW;EACxC,gBAA8BV,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtCW,QAAQ;IAAEC,WAAW;EAC5B,iBAA8BZ,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtCa,QAAQ;IAAEC,WAAW;EAC5B,iBAAgCd,QAAQ,CAAC,EAAE,CAAC;IAAA;IAArCe,SAAS;IAAEC,YAAY;EAC9B,iBAAkChB,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAvCiB,UAAU;IAAEC,aAAa;EAChC,iBAA0BlB,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAlCmB,MAAM;IAAEC,SAAS;EACxB,kBAAkCpB,QAAQ,CAAC;MACzCqB,KAAK,EAAE,EAAE;MACTC,GAAG,EAAE;IACP,CAAC,CAAC;IAAA;IAHKC,UAAU;IAAEC,aAAa;EAIhC,IAAGhB,IAAI,EAAE;IACPJ,EAAE,CAACqB,UAAU,CAAC,OAAO,CAAC,CAACC,GAAG,CAAClB,IAAI,CAACmB,GAAG,CAAC,CAACC,UAAU,CAAC,UAAAC,IAAI,EAAE;MACpD,IAAIrB,IAAI,GAAGqB,IAAI,CAACC,IAAI,EAAE;MACtB;AACN;AACA;AACA;AACA;AACA;IACI,CAAC,CAAC;EACJ;;EACA,oBACE,QAAC,UAAU,CAAC,QAAQ;IAAC,KAAK,EAAE;MAACnB,QAAQ,EAARA,QAAQ;MAAEE,QAAQ,EAARA,QAAQ;MAAEE,SAAS,EAATA,SAAS;MAAEE,UAAU,EAAVA,UAAU;MAAEM,UAAU,EAAVA,UAAU;MAAEJ,MAAM,EAANA,MAAM;MAAEK,aAAa,EAAbA,aAAa;MAAEJ,SAAS,EAATA;IAAS,CAAE;IAAA,UACnHb,KAAK,CAACwB;EAAQ;IAAA;IAAA;IAAA;EAAA,SACK;AAE1B,CAAC;AAAA,GA3BGzB,kBAAkB;AAAA,KAAlBA,kBAAkB;AA4BtB,eAAeA,kBAAkB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}