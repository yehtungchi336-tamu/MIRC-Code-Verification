{"ast":null,"code":"/*!\nFullCalendar v5.5.1\nDocs & License: https://fullcalendar.io/\n(c) 2020 Adam Shaw\n*/\nimport './vdom.js';\nimport { __extends, __assign } from 'tslib';\nimport { render, createElement, CalendarRoot, CustomContentRenderContext, CalendarContent, unmountComponentAtNode, flushToDom, DelayedRunner, CalendarDataManager, isArraysEqual, applyStyleProp, CalendarApi } from '@fullcalendar/common';\nexport * from '@fullcalendar/common';\nvar Calendar = /** @class */function (_super) {\n  __extends(Calendar, _super);\n  function Calendar(el, optionOverrides) {\n    if (optionOverrides === void 0) {\n      optionOverrides = {};\n    }\n    var _this = _super.call(this) || this;\n    _this.isRendering = false;\n    _this.isRendered = false;\n    _this.currentClassNames = [];\n    _this.customContentRenderId = 0; // will affect custom generated classNames?\n    _this.handleAction = function (action) {\n      // actions we know we want to render immediately\n      switch (action.type) {\n        case 'SET_EVENT_DRAG':\n        case 'SET_EVENT_RESIZE':\n          _this.renderRunner.tryDrain();\n      }\n    };\n    _this.handleData = function (data) {\n      _this.currentData = data;\n      _this.renderRunner.request(data.calendarOptions.rerenderDelay);\n    };\n    _this.handleRenderRequest = function () {\n      if (_this.isRendering) {\n        _this.isRendered = true;\n        var currentData_1 = _this.currentData;\n        render(createElement(CalendarRoot, {\n          options: currentData_1.calendarOptions,\n          theme: currentData_1.theme,\n          emitter: currentData_1.emitter\n        }, function (classNames, height, isHeightAuto, forPrint) {\n          _this.setClassNames(classNames);\n          _this.setHeight(height);\n          return createElement(CustomContentRenderContext.Provider, {\n            value: _this.customContentRenderId\n          }, createElement(CalendarContent, __assign({\n            isHeightAuto: isHeightAuto,\n            forPrint: forPrint\n          }, currentData_1)));\n        }), _this.el);\n      } else if (_this.isRendered) {\n        _this.isRendered = false;\n        unmountComponentAtNode(_this.el);\n        _this.setClassNames([]);\n        _this.setHeight('');\n      }\n      flushToDom();\n    };\n    _this.el = el;\n    _this.renderRunner = new DelayedRunner(_this.handleRenderRequest);\n    new CalendarDataManager({\n      optionOverrides: optionOverrides,\n      calendarApi: _this,\n      onAction: _this.handleAction,\n      onData: _this.handleData\n    });\n    return _this;\n  }\n  Object.defineProperty(Calendar.prototype, \"view\", {\n    get: function get() {\n      return this.currentData.viewApi;\n    } // for public API\n    ,\n\n    enumerable: false,\n    configurable: true\n  });\n  Calendar.prototype.render = function () {\n    var wasRendering = this.isRendering;\n    if (!wasRendering) {\n      this.isRendering = true;\n    } else {\n      this.customContentRenderId += 1;\n    }\n    this.renderRunner.request();\n    if (wasRendering) {\n      this.updateSize();\n    }\n  };\n  Calendar.prototype.destroy = function () {\n    if (this.isRendering) {\n      this.isRendering = false;\n      this.renderRunner.request();\n    }\n  };\n  Calendar.prototype.updateSize = function () {\n    _super.prototype.updateSize.call(this);\n    flushToDom();\n  };\n  Calendar.prototype.batchRendering = function (func) {\n    this.renderRunner.pause('batchRendering');\n    func();\n    this.renderRunner.resume('batchRendering');\n  };\n  Calendar.prototype.pauseRendering = function () {\n    this.renderRunner.pause('pauseRendering');\n  };\n  Calendar.prototype.resumeRendering = function () {\n    this.renderRunner.resume('pauseRendering', true);\n  };\n  Calendar.prototype.resetOptions = function (optionOverrides, append) {\n    this.currentDataManager.resetOptions(optionOverrides, append);\n  };\n  Calendar.prototype.setClassNames = function (classNames) {\n    if (!isArraysEqual(classNames, this.currentClassNames)) {\n      var classList = this.el.classList;\n      for (var _i = 0, _a = this.currentClassNames; _i < _a.length; _i++) {\n        var className = _a[_i];\n        classList.remove(className);\n      }\n      for (var _b = 0, classNames_1 = classNames; _b < classNames_1.length; _b++) {\n        var className = classNames_1[_b];\n        classList.add(className);\n      }\n      this.currentClassNames = classNames;\n    }\n  };\n  Calendar.prototype.setHeight = function (height) {\n    applyStyleProp(this.el, 'height', height);\n  };\n  return Calendar;\n}(CalendarApi);\nexport { Calendar };","map":{"version":3,"mappings":"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","names":["__extends","el","optionOverrides","_super","_this","action","type","renderRunner","tryDrain","data","currentData","request","calendarOptions","rerenderDelay","isRendering","isRendered","render","createElement","CalendarRoot","options","currentData_1","theme","emitter","classNames","height","isHeightAuto","forPrint","setClassNames","setHeight","CustomContentRenderContext","Provider","value","customContentRenderId","CalendarContent","unmountComponentAtNode","flushToDom","DelayedRunner","handleRenderRequest","CalendarDataManager","calendarApi","onAction","handleAction","onData","handleData","Object","Calendar","viewApi","wasRendering","updateSize","func","pause","resume","append","currentDataManager","resetOptions","isArraysEqual","currentClassNames","_a","_i","className","classList","remove","classNames_1","_b","add","applyStyleProp","CalendarApi"],"sources":["C:\\Users\\Max\\Documents\\GitHub\\MIRC-Code-Verification\\react-login\\node_modules\\@fullcalendar\\core\\src\\Calendar.tsx"],"sourcesContent":["import {\n  CalendarOptions, Action, CalendarContent, render, createElement, DelayedRunner, CssDimValue, applyStyleProp,\n  CalendarApi, CalendarRoot, isArraysEqual, CalendarDataManager, CalendarData,\n  CustomContentRenderContext, flushToDom, unmountComponentAtNode,\n} from '@fullcalendar/common'\n\nexport class Calendar extends CalendarApi {\n  currentData: CalendarData\n  renderRunner: DelayedRunner\n  el: HTMLElement\n  isRendering = false\n  isRendered = false\n  currentClassNames: string[] = []\n  customContentRenderId = 0 // will affect custom generated classNames?\n\n  get view() { return this.currentData.viewApi } // for public API\n\n  constructor(el: HTMLElement, optionOverrides: CalendarOptions = {}) {\n    super()\n\n    this.el = el\n    this.renderRunner = new DelayedRunner(this.handleRenderRequest)\n\n    new CalendarDataManager({ // eslint-disable-line no-new\n      optionOverrides,\n      calendarApi: this,\n      onAction: this.handleAction,\n      onData: this.handleData,\n    })\n  }\n\n  handleAction = (action: Action) => {\n    // actions we know we want to render immediately\n    switch (action.type) {\n      case 'SET_EVENT_DRAG':\n      case 'SET_EVENT_RESIZE':\n        this.renderRunner.tryDrain()\n    }\n  }\n\n  handleData = (data: CalendarData) => {\n    this.currentData = data\n    this.renderRunner.request(data.calendarOptions.rerenderDelay)\n  }\n\n  handleRenderRequest = () => {\n    if (this.isRendering) {\n      this.isRendered = true\n      let { currentData } = this\n\n      render(\n        <CalendarRoot options={currentData.calendarOptions} theme={currentData.theme} emitter={currentData.emitter}>\n          {(classNames, height, isHeightAuto, forPrint) => {\n            this.setClassNames(classNames)\n            this.setHeight(height)\n\n            return (\n              <CustomContentRenderContext.Provider value={this.customContentRenderId}>\n                <CalendarContent\n                  isHeightAuto={isHeightAuto}\n                  forPrint={forPrint}\n                  {...currentData}\n                />\n              </CustomContentRenderContext.Provider>\n            )\n          }}\n        </CalendarRoot>,\n        this.el,\n      )\n    } else if (this.isRendered) {\n      this.isRendered = false\n      unmountComponentAtNode(this.el)\n      this.setClassNames([])\n      this.setHeight('')\n    }\n\n    flushToDom()\n  }\n\n  render() {\n    let wasRendering = this.isRendering\n\n    if (!wasRendering) {\n      this.isRendering = true\n    } else {\n      this.customContentRenderId += 1\n    }\n\n    this.renderRunner.request()\n\n    if (wasRendering) {\n      this.updateSize()\n    }\n  }\n\n  destroy() {\n    if (this.isRendering) {\n      this.isRendering = false\n      this.renderRunner.request()\n    }\n  }\n\n  updateSize() {\n    super.updateSize()\n    flushToDom()\n  }\n\n  batchRendering(func) {\n    this.renderRunner.pause('batchRendering')\n    func()\n    this.renderRunner.resume('batchRendering')\n  }\n\n  pauseRendering() { // available to plugins\n    this.renderRunner.pause('pauseRendering')\n  }\n\n  resumeRendering() { // available to plugins\n    this.renderRunner.resume('pauseRendering', true)\n  }\n\n  resetOptions(optionOverrides, append?) {\n    this.currentDataManager.resetOptions(optionOverrides, append)\n  }\n\n  setClassNames(classNames: string[]) {\n    if (!isArraysEqual(classNames, this.currentClassNames)) {\n      let { classList } = this.el\n\n      for (let className of this.currentClassNames) {\n        classList.remove(className)\n      }\n\n      for (let className of classNames) {\n        classList.add(className)\n      }\n\n      this.currentClassNames = classNames\n    }\n  }\n\n  setHeight(height: CssDimValue) {\n    applyStyleProp(this.el, 'height', height)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}