{"version":3,"sources":["../source/Updater.js"],"names":["instances","add","instance","wasIdle","length","start","stop","remove","forceUpdate","updateInstance","tick","now","Date","nextUpdateTime","scheduleNextTick","scheduledTick","cancel","_updateInstance","getNextValue","value","setValue","i","findTargetIndex","splice","indexOf"],"mappings":";;;;;;ypBAAA;;AAEA;AACA;AACA;;AAEA;;;AACA;;;;AAEA;;;;;;kBAEe;AACdA,YAAW,EADG;AAEdC,IAFc,eAEVC,QAFU,EAEA;AAAA;;AACb,MAAMC,UAAU,KAAKH,SAAL,CAAeI,MAAf,KAA0B,CAA1C;AACAH,OAAI,KAAKD,SAAT,EAAoBE,QAApB;AACA,MAAIC,OAAJ,EAAa;AACZ,QAAKE,KAAL;AACA;AACD,SAAO;AACNC,SAAM,gBAAM;AACXC,WAAO,MAAKP,SAAZ,EAAuBE,QAAvB;AACA,QAAI,MAAKF,SAAL,CAAeI,MAAf,KAA0B,CAA9B,EAAiC;AAChC,WAAKE,IAAL;AACA;AACD,IANK;AAONE,gBAAa,uBAAM;AAClBC,mBAAeP,QAAf,EAAyB,MAAKF,SAA9B;AACA;AATK,GAAP;AAWA,EAnBa;AAoBdU,KApBc,kBAoBP;AACN,MAAMC,MAAMC,KAAKD,GAAL,EAAZ;AACA,SAAO,IAAP,EAAa;AACZ,OAAMT,WAAW,KAAKF,SAAL,CAAe,CAAf,CAAjB;AACA,OAAIW,OAAOT,SAASW,cAApB,EAAoC;AACnCJ,mBAAeP,QAAf,EAAyB,KAAKF,SAA9B;AACA,IAFD,MAEO;AACN;AACA;AACD;AACD,EA9Ba;AA+Bdc,iBA/Bc,8BA+BK;AAAA;;AAClB,OAAKC,aAAL,GAAqB,mBAAsB,YAAM;AAChD,UAAKL,IAAL;AACA,UAAKI,gBAAL;AACA,GAHoB,CAArB;AAIA,EApCa;AAqCdT,MArCc,mBAqCN;AACP,OAAKS,gBAAL;AACA,EAvCa;AAwCdR,KAxCc,kBAwCP;AACN,gBAAsBU,MAAtB,CAA6B,KAAKD,aAAlC;AACA;AA1Ca,C;;;AA6Cf,SAASE,eAAT,CAAyBf,QAAzB,EAAmC;AAAA,6BACFA,SAASgB,YAAT,EADE;AAAA;AAAA,KAC3BC,KAD2B;AAAA,KACpBN,cADoB;;AAElCX,UAASkB,QAAT,CAAkBD,KAAlB;AACAjB,UAASW,cAAT,GAA0BA,cAA1B;AACA;;AAED,SAASJ,cAAT,CAAwBP,QAAxB,EAAkCF,SAAlC,EAA6C;AAC5CiB,iBAAgBf,QAAhB;AACAK,QAAOP,SAAP,EAAkBE,QAAlB;AACAD,MAAID,SAAJ,EAAeE,QAAf;AACA;;AAED,SAASD,IAAT,CAAaD,SAAb,EAAwBE,QAAxB,EAAkC;AACjC,KAAMmB,IAAIC,gBAAgBtB,SAAhB,EAA2BE,QAA3B,CAAV;AACAF,WAAUuB,MAAV,CAAiBF,CAAjB,EAAoB,CAApB,EAAuBnB,QAAvB;AACA;;AAED,SAASK,MAAT,CAAgBP,SAAhB,EAA2BE,QAA3B,EAAqC;AACpC,KAAMmB,IAAIrB,UAAUwB,OAAV,CAAkBtB,QAAlB,CAAV;AACAF,WAAUuB,MAAV,CAAiBF,CAAjB,EAAoB,CAApB;AACA;;AAED,SAASC,eAAT,CAAyBtB,SAAzB,EAAoCE,QAApC,EAA8C;AAAA,KACrCW,cADqC,GAClBX,QADkB,CACrCW,cADqC;;AAE7C,QAAO,4BAAab,SAAb,EAAwB,UAACE,QAAD,EAAc;AAC5C,MAAIA,SAASW,cAAT,KAA4BA,cAAhC,EAAgD;AAC/C,UAAO,CAAP;AACA,GAFD,MAEO,IAAIX,SAASW,cAAT,GAA0BA,cAA9B,EAA8C;AACpD,UAAO,CAAP;AACA,GAFM,MAEA;AACN,UAAO,CAAC,CAAR;AACA;AACD,EARM,CAAP;AASA","file":"Updater.js","sourcesContent":["// Manages the updates of all `<ReactTimeAgo/>` elements on a page.\r\n\r\n// The reasons for going with `requestAnimationFrame()`:\r\n// * `requestAnimationFrame` won't be called when a tab is in background.\r\n// * Chrome has bugs when handling `setTimeout()`: https://www.npmjs.com/package/request-animation-frame-timeout\r\n\r\n// `requestAnimationFrame()` polyfill for old browsers.\r\nimport requestAnimationFrame from 'raf'\r\n\r\nimport binarySearch from './helpers/binarySearch'\r\n\r\nexport default {\r\n\tinstances: [],\r\n\tadd(instance) {\r\n\t\tconst wasIdle = this.instances.length === 0\r\n\t\tadd(this.instances, instance)\r\n\t\tif (wasIdle) {\r\n\t\t\tthis.start()\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tstop: () => {\r\n\t\t\t\tremove(this.instances, instance)\r\n\t\t\t\tif (this.instances.length === 0) {\r\n\t\t\t\t\tthis.stop()\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tforceUpdate: () => {\r\n\t\t\t\tupdateInstance(instance, this.instances)\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\ttick() {\r\n\t\tconst now = Date.now()\r\n\t\twhile (true) {\r\n\t\t\tconst instance = this.instances[0]\r\n\t\t\tif (now >= instance.nextUpdateTime) {\r\n\t\t\t\tupdateInstance(instance, this.instances)\r\n\t\t\t} else {\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tscheduleNextTick() {\r\n\t\tthis.scheduledTick = requestAnimationFrame(() => {\r\n\t\t\tthis.tick()\r\n\t\t\tthis.scheduleNextTick()\r\n\t\t})\r\n\t},\r\n\tstart() {\r\n\t\tthis.scheduleNextTick()\r\n\t},\r\n\tstop() {\r\n\t\trequestAnimationFrame.cancel(this.scheduledTick)\r\n\t}\r\n}\r\n\r\nfunction _updateInstance(instance) {\r\n\tconst [value, nextUpdateTime] = instance.getNextValue()\r\n\tinstance.setValue(value)\r\n\tinstance.nextUpdateTime = nextUpdateTime\r\n}\r\n\r\nfunction updateInstance(instance, instances) {\r\n\t_updateInstance(instance)\r\n\tremove(instances, instance)\r\n\tadd(instances, instance)\r\n}\r\n\r\nfunction add(instances, instance) {\r\n\tconst i = findTargetIndex(instances, instance)\r\n\tinstances.splice(i, 0, instance)\r\n}\r\n\r\nfunction remove(instances, instance) {\r\n\tconst i = instances.indexOf(instance)\r\n\tinstances.splice(i, 1)\t\r\n}\r\n\r\nfunction findTargetIndex(instances, instance) {\r\n\tconst { nextUpdateTime } = instance\r\n\treturn binarySearch(instances, (instance) => {\r\n\t\tif (instance.nextUpdateTime === nextUpdateTime) {\r\n\t\t\treturn 0\r\n\t\t} else if (instance.nextUpdateTime > nextUpdateTime) {\r\n\t\t\treturn 1\r\n\t\t} else {\r\n\t\t\treturn -1\r\n\t\t}\r\n\t})\r\n}"]}